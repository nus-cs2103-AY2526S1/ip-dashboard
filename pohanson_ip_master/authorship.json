[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"# AI Usage Log","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"I\u0027ve used the IDE (vscode) built-in Copilot, specifically Claude Sonnet 4, to help improve the code quality of the app.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"## Code Quality Improvements - September 17, 2025","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"**User Request:** \"Can you help to improve the quality of the current codebase? Please also add a summary of what you\u0027ve done and the prompt to the `AI.md` file.\"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"### Summary of Improvements Made","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"#### 1. Enhanced Exception Handling","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"- **Parser.java**: Added proper `NumberFormatException` handling in `parseInts()` method to prevent crashes from invalid numeric input","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"- **Storage.java**: Improved error handling with proper exception propagation instead of silencing errors","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"- **Bob.java**: Enhanced constructor error handling to gracefully handle storage initialization failures","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"#### 2. Resource Management Improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"- **Storage.java**: Replaced manual resource management with try-with-resources pattern for both `FileWriter` and `Scanner`","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"- Improved file I/O operations to ensure proper resource cleanup","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"#### 3. Encapsulation and Data Hiding","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"- **Task.java**: Changed `isDone` field from `protected` to `private` and added proper getter method","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"- **TaskList.java**: Updated to use the new `isDone()` getter method instead of direct field access","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"#### 4. Code Organization and Constants","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"- **Ui.java**: Extracted magic strings and numbers into proper constants:","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"  - `LINE_SEPARATOR` for the line separator pattern","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"  - `ERROR_PREFIX` for consistent error message formatting  ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"  - `ANSI_RED` and `ANSI_RESET` for console color codes","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"- **Todo.java**: Added constants for task type symbol and command keyword","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"#### 5. Documentation Improvements  ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"- Enhanced JavaDoc comments across multiple classes with proper parameter descriptions and return value documentation","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"- Added missing `@param` and `@return` annotations where needed","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"- Improved method descriptions for better code maintainability","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"#### 6. Error Message Consistency","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"- **Storage.java**: Replaced direct `System.out.println()` calls with proper exception throwing for consistent error handling","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"- **TaskList.java**: Added null safety check for storage operations","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"#### 7. Input Validation Enhancements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"- **Parser.java**: Improved parsing logic with better error messages and empty string filtering","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"- **Storage.java**: Enhanced file parsing with proper empty line handling","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"### Technical Details","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"**Files Modified:**","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/parser/Parser.java` - Exception handling improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/task/Task.java` - Encapsulation improvements  ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/task/TaskList.java` - Method calls and null safety","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/storage/Storage.java` - Resource management and error handling","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/Bob.java` - Constructor error handling","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/ui/Ui.java` - Constants and documentation","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/task/Todo.java` - Constants and documentation","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"- `AI.md` - This documentation","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"**Key Benefits:**","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"- More robust error handling prevents crashes from invalid input","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"- Better resource management prevents memory leaks","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"- Improved encapsulation follows Java best practices","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"- Enhanced maintainability through better documentation","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"- Consistent error reporting throughout the application","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"## Task Implementation Consistency Improvements - September 17, 2025","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"**User Request:** \"Can you make the changes you had done in Todo to other implementation of the `Task` abstract class? Please also add a summary of what you\u0027ve done and the prompt to the `AI.md` file.\"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"### Summary of Additional Improvements Made","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"#### 1. Consistent Constants Implementation","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pohanson"},"content":"Applied the same constant extraction pattern from `Todo.java` to both `Deadline.java` and `Event.java`:","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pohanson"},"content":"- **Deadline.java**: Added constants:","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pohanson"},"content":"  - `TASK_TYPE_SYMBOL \u003d \"[D]\"` for consistent display formatting","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pohanson"},"content":"  - `COMMAND_KEYWORD \u003d \"deadline\"` for parsing operations","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pohanson"},"content":"  - `TIME_SEPARATOR \u003d \"/by\"` for command syntax","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pohanson"},"content":"- **Event.java**: Added constants:","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pohanson"},"content":"  - `TASK_TYPE_SYMBOL \u003d \"[E]\"` for consistent display formatting  ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pohanson"},"content":"  - `COMMAND_KEYWORD \u003d \"event\"` for parsing operations","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pohanson"},"content":"  - `START_SEPARATOR \u003d \"/from\"` for start time parsing","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pohanson"},"content":"  - `END_SEPARATOR \u003d \"/to\"` for end time parsing","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pohanson"},"content":"#### 2. Enhanced Documentation Consistency","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pohanson"},"content":"- **Deadline.java**: Improved JavaDoc comments with proper `@param` and `@return` annotations","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pohanson"},"content":"- **Event.java**: Enhanced constructor and method documentation for consistency with `Todo.java`","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pohanson"},"content":"- Standardized method descriptions across all Task implementations","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pohanson"},"content":"#### 3. Code Maintainability Improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pohanson"},"content":"- Eliminated magic strings by using constants in all string operations","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pohanson"},"content":"- Made parsing logic more maintainable by centralizing command keywords","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pohanson"},"content":"- Improved consistency in toString() and toInputString() methods","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pohanson"},"content":"### Technical Details","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pohanson"},"content":"**Files Modified in This Session:**","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/task/Deadline.java` - Constants and documentation improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/task/Event.java` - Constants and documentation improvements  ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pohanson"},"content":"- `AI.md` - Updated documentation","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pohanson"},"content":"**Consistency Achieved:**","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pohanson"},"content":"- All Task subclasses (`Todo`, `Deadline`, `Event`) now follow the same pattern for constants","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pohanson"},"content":"- Unified JavaDoc documentation style across all implementations","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pohanson"},"content":"- Consistent use of constants instead of magic strings","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pohanson"},"content":"- Improved code readability and maintainability","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pohanson"},"content":"**Key Benefits:**","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pohanson"},"content":"- **Maintainability**: Changes to command keywords or symbols only need to be made in one place","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pohanson"},"content":"- **Consistency**: All task types follow the same coding patterns and documentation style","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pohanson"},"content":"- **Readability**: Constants make the code self-documenting and easier to understand","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pohanson"},"content":"- **Extensibility**: Future task types can follow the same established pattern","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pohanson"},"content":"## Command Classes Quality Improvements - September 17, 2025","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pohanson"},"content":"**User Request:** \"Are there any improvements to the commands?\"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pohanson"},"content":"### Summary of Command Improvements Made","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pohanson"},"content":"#### 1. Constants for Magic Strings and Messages","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pohanson"},"content":"Applied consistent constant extraction across all command classes to eliminate magic strings:","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pohanson"},"content":"- **MarkCommand**: Added constants for single/multiple task prompts and error messages","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pohanson"},"content":"- **UnmarkCommand**: Added constants following the same pattern as MarkCommand","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pohanson"},"content":"- **DeleteCommand**: Added constants for task removal messages and count display","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pohanson"},"content":"- **AddCommand**: Added constant for success message format","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pohanson"},"content":"- **FindCommand**: Added constant for search result message","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pohanson"},"content":"- **ExitCommand**: Added constant for exit message","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pohanson"},"content":"- **InvalidCommand**: Added constant for error message format","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pohanson"},"content":"#### 2. Enhanced Error Handling Consistency","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pohanson"},"content":"- **Standardized Error Reporting**: Changed task validation commands to use `ui.showError()` instead of `ui.printSection()` for better error categorization","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pohanson"},"content":"- **Consistent Error Messages**: All commands now use the same format for \"Invalid task number(s)\" errors","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pohanson"},"content":"- **Better Exception Handling**: AddCommand now uses `ui.showError()` for input validation errors","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pohanson"},"content":"#### 3. Improved Documentation","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pohanson"},"content":"- **Complete JavaDoc**: Added comprehensive `@param` annotations for all execute() methods","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pohanson"},"content":"- **Method Descriptions**: Enhanced descriptions to clarify parameter usage and command behavior","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pohanson"},"content":"- **Parameter Documentation**: Clearly indicated which parameters are unused in specific commands","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pohanson"},"content":"#### 4. Code Organization and Maintainability","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pohanson"},"content":"- **Centralized Message Constants**: All user-facing messages are now defined as constants","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pohanson"},"content":"- **Consistent Formatting**: All commands follow the same pattern for constants and error handling","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pohanson"},"content":"- **Reduced Duplication**: Eliminated repeated string literals across command classes","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pohanson"},"content":"### Technical Details","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pohanson"},"content":"**Files Modified in This Session:**","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/command/MarkCommand.java` - Constants and error handling improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/command/UnmarkCommand.java` - Constants and error handling improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/command/DeleteCommand.java` - Constants and error handling improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/command/AddCommand.java` - Constants and error handling improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/command/FindCommand.java` - Constants and documentation improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/command/ExitCommand.java` - Constants and documentation improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/command/ListCommand.java` - Documentation improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"pohanson"},"content":"- `src/main/java/bob/command/InvalidCommand.java` - Constants and documentation improvements","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"pohanson"},"content":"- `AI.md` - Updated documentation","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"pohanson"},"content":"**Consistency Achieved:**","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"pohanson"},"content":"- All command classes now follow uniform patterns for constants and error handling","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"pohanson"},"content":"- Unified approach to error reporting using appropriate UI methods","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"pohanson"},"content":"- Comprehensive JavaDoc documentation across all command implementations","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"pohanson"},"content":"- Consistent message formatting and user experience","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"pohanson"},"content":"**Key Benefits:**","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"pohanson"},"content":"- **Maintainability**: Changes to messages require updates in only one location per class","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"pohanson"},"content":"- **User Experience**: Consistent error reporting and message formatting","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"pohanson"},"content":"- **Code Quality**: Eliminates magic strings and improves code readability","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"pohanson"},"content":"- **Documentation**: Complete parameter documentation for better code understanding","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"pohanson"},"content":"- **Error Handling**: Proper distinction between errors and informational messages","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"pohanson"},"content":"## Comprehensive Test Coverage Enhancement - September 17, 2025","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"pohanson"},"content":"**User Request:** \"Can you help to add more tests for the app? The junit test case naming should have the following format: `unitBeingTested_descriptionOfTestInputs_expectedOutcome`. Please include the prompt and short summary of the changes in the `AI.md`\"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"pohanson"},"content":"### Summary of Test Improvements Made","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"pohanson"},"content":"#### 1. Enhanced Existing Test Files with Comprehensive Coverage","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"pohanson"},"content":"- **ParserTest.java**: Expanded from 9 basic tests to 25+ comprehensive tests covering:","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"pohanson"},"content":"  - Edge cases for all command types (todo, deadline, event, mark, unmark, delete, find, list, bye)","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"pohanson"},"content":"  - Invalid input handling (missing parameters, invalid numbers, empty strings)","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"pohanson"},"content":"  - Case sensitivity testing (uppercase, mixed case, lowercase commands)","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"pohanson"},"content":"  - Multiple number parsing for mark/unmark/delete operations","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"pohanson"},"content":"  - Whitespace-only input validation","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"pohanson"},"content":"- **TaskTest.java**: Expanded from 7 basic tests to 30+ comprehensive tests covering:","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"pohanson"},"content":"  - All task types (Todo, Deadline, Event) creation and validation","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"pohanson"},"content":"  - Marking/unmarking functionality with edge cases","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"pohanson"},"content":"  - Description search functionality with partial matches and edge cases","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"pohanson"},"content":"  - DateTime parsing and formatting for all formats","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"pohanson"},"content":"  - Input string conversion for storage operations","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"pohanson"},"content":"  - Invalid input handling for all task creation scenarios","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"pohanson"},"content":"#### 2. Created New Comprehensive Test Files","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"pohanson"},"content":"- **TaskListTest.java**: Created with 25+ tests covering:","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"pohanson"},"content":"  - Basic functionality (add, remove, get, size, isEmpty)","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"pohanson"},"content":"  - Task manipulation (markDone, unmarkDone with validation)","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"pohanson"},"content":"  - Index validation and boundary testing","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"pohanson"},"content":"  - String representation and formatting","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"pohanson"},"content":"  - Filtering operations with keyword matching","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"pohanson"},"content":"  - Storage string conversion for persistence","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"pohanson"},"content":"  - Static utility method testing","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"pohanson"},"content":"- **StorageTest.java**: Created with 20+ tests covering:","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"pohanson"},"content":"  - File creation and directory handling","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"pohanson"},"content":"  - Save and load operations with round-trip testing","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"pohanson"},"content":"  - Error handling for invalid file formats and permissions","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"pohanson"},"content":"  - Edge cases (empty files, trailing newlines, whitespace)","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"pohanson"},"content":"  - Task state preservation through save/load cycles","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"pohanson"},"content":"  - Invalid input format handling and recovery","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"pohanson"},"content":"- **UiTest.java**: Created with 25+ tests covering:","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"pohanson"},"content":"  - Message display functionality with line separators","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"pohanson"},"content":"  - Error message formatting with ANSI color codes","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"pohanson"},"content":"  - Section printing with proper formatting","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"pohanson"},"content":"  - Help message display with all command information","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"pohanson"},"content":"  - Response buffer functionality and state management","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"pohanson"},"content":"  - Integration testing for mixed operations","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"pohanson"},"content":"  - Edge cases for null input handling","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"pohanson"},"content":"#### 3. Test Naming Convention Implementation","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"pohanson"},"content":"All tests now follow the specified format: `unitBeingTested_descriptionOfTestInputs_expectedOutcome`","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"pohanson"},"content":"**Examples:**","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"pohanson"},"content":"- `parse_todoCommandWithDescription_returnsAddCommand()`","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"pohanson"},"content":"- `createFromString_deadlineWithInvalidDateFormat_throwsInvalidInputException()`","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"pohanson"},"content":"- `markDone_validIndex_marksTaskAsDone()`","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"pohanson"},"content":"- `loadTaskList_fileWithMultipleTasks_createsAllTasks()`","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"pohanson"},"content":"- `showError_simpleErrorMessage_displaysWithErrorPrefix()`","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"pohanson"},"content":"#### 4. Comprehensive Coverage Areas","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"pohanson"},"content":"- **Positive Testing**: Valid inputs and expected successful outcomes","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"pohanson"},"content":"- **Negative Testing**: Invalid inputs and proper error handling","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"pohanson"},"content":"- **Edge Cases**: Boundary conditions, empty inputs, null values","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"pohanson"},"content":"- **Integration Testing**: Multi-step operations and state persistence","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"pohanson"},"content":"- **Error Recovery**: Graceful handling of malformed data and file issues","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"pohanson"},"content":"### Technical Details","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"pohanson"},"content":"**Test Files Created/Enhanced:**","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"pohanson"},"content":"- `src/test/java/bob/parser/ParserTest.java` - Enhanced with 25+ tests (15 additional)","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"pohanson"},"content":"- `src/test/java/bob/task/TaskTest.java` - Enhanced with 30+ tests (23 additional)  ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"pohanson"},"content":"- `src/test/java/bob/task/TaskListTest.java` - Created with 25+ comprehensive tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"pohanson"},"content":"- `src/test/java/bob/storage/StorageTest.java` - Created with 20+ comprehensive tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"pohanson"},"content":"- `src/test/java/bob/ui/UiTest.java` - Created with 25+ comprehensive tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"pohanson"},"content":"**Test Coverage Statistics:**","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"pohanson"},"content":"- **Total Tests**: 100+ comprehensive test cases (previously ~16)","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"pohanson"},"content":"- **Test Files**: 5 comprehensive test files covering all major components","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"pohanson"},"content":"- **Coverage Areas**: Parser, Task hierarchy, TaskList operations, Storage persistence, UI display","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"pohanson"},"content":"- **Naming Convention**: 100% compliance with `unitBeingTested_descriptionOfTestInputs_expectedOutcome` format","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"pohanson"},"content":"**Key Testing Improvements:**","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"pohanson"},"content":"- **Robustness**: Comprehensive edge case testing ensures application stability","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"pohanson"},"content":"- **Maintainability**: Clear test names make test purpose immediately apparent","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"pohanson"},"content":"- **Documentation**: Tests serve as living documentation of expected behavior","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"pohanson"},"content":"- **Regression Prevention**: Extensive coverage prevents future code changes from breaking existing functionality","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"pohanson"},"content":"- **Quality Assurance**: Multiple test scenarios validate both happy path and error conditions","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"pohanson"},"content":"**Benefits:**","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"pohanson"},"content":"- **Reliability**: Comprehensive testing ensures robust application behavior","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"pohanson"},"content":"- **Maintainability**: Well-named tests make debugging and maintenance easier","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"pohanson"},"content":"- **Documentation**: Tests provide clear examples of expected component behavior","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"pohanson"},"content":"- **Confidence**: Extensive coverage provides confidence in code changes and refactoring","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false}],"authorContributionMap":{"pohanson":262}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"# Bob project template","lastModifiedDate":"2025-08-19T01:15:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"This is a project template for a greenfield Java project. It\u0027s named after Bob the Builder. Given below are instructions on how to use it.","lastModifiedDate":"2025-08-19T01:15:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"1. After that, locate the `src/main/java/Bob.java` file, right-click it, and choose `Run Bob.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see \"Hello! I\u0027m Bob.\"","lastModifiedDate":"2025-08-19T01:15:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"## Acknowledgments","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"1. Chatbot Profile Photo by [Everyday basics](https://unsplash.com/@zanardi?utm_content\u003dcreditCopyText\u0026utm_medium\u003dreferral\u0026utm_source\u003dunsplash) on [Unsplash](https://unsplash.com/photos/blue-and-white-lego-blocks-pi9W2dWDdak?utm_content\u003dcreditCopyText\u0026utm_medium\u003dreferral\u0026utm_source\u003dunsplash)","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false}],"authorContributionMap":{"pohanson":8,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"    id \"checkstyle\"","lastModifiedDate":"2025-08-28T20:38:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"    mainClass.set(\"bob.Launcher\")","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"run {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"checkstyle {","lastModifiedDate":"2025-09-01T20:42:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-01T20:42:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-09-01T20:42:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-01T20:42:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"    archiveBaseName \u003d \"Bob\"","lastModifiedDate":"2025-08-29T14:36:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"pohanson":26,"-":35}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"# Bob User Guide","lastModifiedDate":"2025-08-19T01:15:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"![Product Screenshot](Ui.png)","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"# Bob, building a better you","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"\u003e \"With **Bob**, I have _never forgotten an event, task, or todo._\" - A satisfied user 😄 ","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"Use Bob to manage your event, task and todo all in one place, without leaving the keyboard.","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"## Summary of the commands available","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"Bob allows you to perform this actions via **text commands**:","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"* `list` - List all tasks","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"* `mark \u003ctask number\u003e` - Mark a task as done","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"* `unmark \u003ctask number\u003e` - Unmark a task as not done","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"* `todo \u003cdescription\u003e` - Add a task without any date/time attached to it","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"* `deadline \u003cdescription\u003e /by \u003cdatetime\u003e` - Add a task that need to be done before a specific date/time","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"* `event \u003cdescription\u003e /from \u003cstart datetime\u003e /to \u003cend datetime\u003e` - Add task that start at a specific date/time and ends at a specific date/time","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"* `delete \u003ctask number\u003e` - Delete a task from the list","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"* `find \u003csearch keyword\u003e` - Search for a task that contains \u003csearch keyword\u003e in the description.","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"* `bye` - Exit the program","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"## How to get it","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"1. Ensure you have java installed.","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"1. Download the jar [here](https://github.com/pohanson/ip/releases/download/A-Release/Bob.jar)","lastModifiedDate":"2025-09-17T22:06:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"1. `java -jar \u003cfilename\u003e` to run the file.","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"1. Just use it.","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false}],"authorContributionMap":{"pohanson":21,"-":9}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-19T01:42:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-19T01:42:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import bob.command.Command;","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import bob.command.ExitCommand;","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import bob.exception.InvalidInputException;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"import bob.parser.Parser;","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:59:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":" * Bob is the main class for the application.","lastModifiedDate":"2025-08-28T22:59:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:59:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"public class Bob {","lastModifiedDate":"2025-08-19T01:15:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-27T22:55:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"    private final Ui ui;","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T22:55:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:59:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"     * Constructs Bob.","lastModifiedDate":"2025-08-28T22:59:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"     * It constructs and initialises tasks, storage and ui.","lastModifiedDate":"2025-08-28T22:59:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:59:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"     * @param filePath the file path to load tasks from and save tasks to.","lastModifiedDate":"2025-08-28T22:59:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:59:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    public Bob(String filePath) {","lastModifiedDate":"2025-08-27T22:55:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"        try {","lastModifiedDate":"2025-08-27T22:55:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"            tasks \u003d this.storage.loadTaskList();","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"            ui.showError(\"Error initializing storage: \" + e.getMessage());","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"            // Create a dummy storage that won\u0027t persist","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"            this.storage \u003d null;","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"            tasks \u003d new TaskList(null);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T22:55:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"            ui.showError(\"Error loading tasks from file, using empty task list: \" + e.getMessage());","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"            tasks \u003d new TaskList(this.storage);","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2025-08-27T22:55:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"            ui.showError(\"Error loading tasks from file, using empty task list: \" + e.getMessage());","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"            tasks \u003d new TaskList(this.storage);","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-27T22:55:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T22:55:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-19T10:12:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"     * Starts the application","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"        new Bob(\"data/tasklist.txt\").run();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"     * Gets response from Bob for the given input.","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"     * @param input the user input","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"     * @return the response from Bob","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"        // Capture the output instead of printing it directly","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"        return ui.getResponse();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:59:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"     * Runs the main loop for the command line application.","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:59:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pohanson"},"content":"    public void run() {","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pohanson"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pohanson"},"content":"        ui.printSection(\"Hello! I\u0027m Bob.\\nHow can I help you?\");","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pohanson"},"content":"        while (true) {","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pohanson"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2025-08-19T01:42:28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pohanson"},"content":"            Command command \u003d Parser.parse(scanner.nextLine());","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pohanson"},"content":"            command.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pohanson"},"content":"            if (command instanceof ExitCommand) {","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pohanson"},"content":"                break;","lastModifiedDate":"2025-08-19T11:12:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pohanson"},"content":"            }","lastModifiedDate":"2025-08-19T11:12:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-19T11:12:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pohanson"},"content":"        scanner.close();","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-19T01:15:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-19T01:15:18","isFullCredit":false}],"authorContributionMap":{"pohanson":84}},{"path":"src/main/java/bob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"public class Launcher {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false}],"authorContributionMap":{"pohanson":12}},{"path":"src/main/java/bob/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import bob.ui.MainWindow;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"data/tasklist.txt\";","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    private final Bob bob;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"     * Constructs Main.","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"     * @param filePath the file path to load tasks from and save tasks to.","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"    public Main(String filePath) {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"        bob \u003d new Bob(filePath);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"     * Constructs Main with default file path.","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"    public Main() {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"        this(DEFAULT_FILE_PATH);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"        try {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"            assert !fxmlLoader.getLocation().getFile().equals(\"\") : \"FXML file not loaded\";","lastModifiedDate":"2025-09-10T14:19:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"            stage.setTitle(\"Bob\");","lastModifiedDate":"2025-09-17T21:59:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"            stage.setMinHeight(500);","lastModifiedDate":"2025-09-06T13:08:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"            stage.setMinWidth(700);","lastModifiedDate":"2025-09-06T13:08:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBob(bob);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"            stage.show();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false}],"authorContributionMap":{"pohanson":54}},{"path":"src/main/java/bob/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.command;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import bob.exception.InvalidInputException;","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import bob.task.Task;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":" * Command to add a task.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"    private static final String SUCCESS_MESSAGE_FORMAT \u003d \"I\u0027ve added this task:\\n\\t %s\\nNow you\u0027ve %d tasks in the list.\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    private final String input;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"     * Constructs AddCommand.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"     * @param input the user input","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"     * Parses the input and adds the task to tasks.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"        try {","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"            Task task \u003d Task.createFromString(input);","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"            tasks.add(task);","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"            ui.printSection(String.format(SUCCESS_MESSAGE_FORMAT, task, tasks.size()));","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false}],"authorContributionMap":{"pohanson":40}},{"path":"src/main/java/bob/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.command;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":" * Class that represents a command.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":" * It should be inherited by other Command classes. The subclass should override","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":" * the abstract execute method.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"     * Executes the command, when called by the Bob application.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"     * @param tasks   the TaskList to use.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"     * @param ui      the user interface.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"     * @param storage the storage.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2025-08-28T18:30:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"     * Checks if the provided task numbers are valid for the given TaskList.","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"     * @param tasks       the TaskList to check against.","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"     * @param taskNumbers the task numbers to validate (1-indexed).","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"     * @return true if all task numbers are valid, false otherwise.","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"    public boolean isValidTasks(TaskList tasks, Integer[] taskNumbers) {","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"        for (int taskNumber : taskNumbers) {","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"            if (!tasks.isValidTaskIndex(taskNumber - 1)) {","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"                return false;","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"            }","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"        return true;","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false}],"authorContributionMap":{"pohanson":38}},{"path":"src/main/java/bob/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.command;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import bob.task.Task;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":" * Command to delete a task.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"    private static final String SINGLE_TASK_PROMPT \u003d \"I\u0027ve removed this task:\\n\\t\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    private static final String MULTIPLE_TASKS_PROMPT \u003d \"I\u0027ve removed these tasks:\\n\\t\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    private static final String INVALID_TASK_ERROR \u003d \"Invalid task number(s) provided: \";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"    private static final String TASK_COUNT_MESSAGE \u003d \"\\nNow you\u0027ve %d tasks in the list.\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"    private final Integer[] taskNumbers;","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"     * Constructs DeleteCommand.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"     * @param taskNumbers The task numbers to be deleted, 1-indexed.","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"    public DeleteCommand(Integer[] taskNumbers) {","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"        // Sort in descending order so that the deletion of tasks does not affect the indices of tasks yet to be deleted.","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"        this.taskNumbers \u003d Arrays.stream(taskNumbers).sorted((a, b) -\u003e b - a).toArray(Integer[]::new);","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"     * Deletes the tasks at taskNumbers (1-indexed)","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"    public void execute(bob.task.TaskList tasks, bob.ui.Ui ui, bob.storage.Storage storage) {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"        if (super.isValidTasks(tasks, taskNumbers)) {","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"            this.deleteAllTasks(tasks, ui);","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"        } else {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"            ui.showError(INVALID_TASK_ERROR + Arrays.toString(taskNumbers));","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"    private void deleteAllTasks(TaskList tasks, Ui ui) {","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"        ArrayList\u003cTask\u003e tasksDeleted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"        for (int taskNumber : taskNumbers) {","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"            tasksDeleted.add(tasks.remove(taskNumber - 1));","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"        String prompt \u003d taskNumbers.length \u003d\u003d 1 ? SINGLE_TASK_PROMPT : MULTIPLE_TASKS_PROMPT;","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"        ui.printSection(prompt + TaskList.stringifyTasks(tasksDeleted)","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"                + String.format(TASK_COUNT_MESSAGE, tasks.size()));","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false}],"authorContributionMap":{"pohanson":52}},{"path":"src/main/java/bob/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.command;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":" * Command to exit the application.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"     * Constructs ExitCommand.","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"    public ExitCommand() {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"     * Prints exit message.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"     * @param tasks   the TaskList (unused in this command)","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"     * @param ui      the user interface for output","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"     * @param storage the storage (unused in this command)","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    public void execute(bob.task.TaskList tasks, bob.ui.Ui ui, bob.storage.Storage storage) {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"        ui.printSection(EXIT_MESSAGE);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false}],"authorContributionMap":{"pohanson":26}},{"path":"src/main/java/bob/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.command;","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":" * Command to find a task by description","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"    private static final String SEARCH_RESULT_MESSAGE \u003d \"Here are the matching tasks in your list: \";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"    /* User input string to search for */","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"    private final String input;","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"     * Constructs FindCommand.","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"     * @param input the string to search.","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"     * Finds and displays tasks that match the search keyword.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"     * @param tasks   the TaskList to search in","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"     * @param ui      the user interface for output","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"     * @param storage the storage (unused in this command)","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"        ui.printSection(SEARCH_RESULT_MESSAGE + TaskList","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"                .stringifyTasks(TaskList.filterTasksByKeyword(tasks.getTasks(), input)));","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-28T21:34:12","isFullCredit":false}],"authorContributionMap":{"pohanson":37}},{"path":"src/main/java/bob/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.command;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":" * Command to handle invalid user input.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"    private static final String ERROR_MESSAGE_FORMAT \u003d \"Invalid command: %s\\n%s\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"    private final String header;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"    private final String details;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"     * Constructs InvalidCommand","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"     * @param header the user input provided","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    public InvalidCommand(String header) {","lastModifiedDate":"2025-08-28T21:40:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"        this.header \u003d header;","lastModifiedDate":"2025-08-28T21:40:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"        this.details \u003d \"\";","lastModifiedDate":"2025-08-28T21:40:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T21:40:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T21:40:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-29T13:41:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"     * Constructs InvalidCommand","lastModifiedDate":"2025-08-29T13:41:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-29T13:41:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"     * @param header  the summary header","lastModifiedDate":"2025-08-29T13:41:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"     * @param details details about the error","lastModifiedDate":"2025-08-29T13:41:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-29T13:41:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"    public InvalidCommand(String header, String details) {","lastModifiedDate":"2025-08-28T21:40:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"        this.header \u003d header;","lastModifiedDate":"2025-08-28T21:40:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"        this.details \u003d details;","lastModifiedDate":"2025-08-28T21:40:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"     * Prints the error message for invalid command.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"     * @param tasks   the TaskList (unused in this command)","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"     * @param ui      the user interface for output","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"     * @param storage the storage (unused in this command)","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"        ui.showError(String.format(ERROR_MESSAGE_FORMAT, header, details));","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"        ui.printHelp();","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false}],"authorContributionMap":{"pohanson":49}},{"path":"src/main/java/bob/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.command;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":" * Command to list all tasks.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"     * Constructs ListCommand.","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"    public ListCommand() {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"     * Prints out all tasks.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"     * @param tasks   the TaskList to display","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"     * @param ui      the user interface for output","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"     * @param storage the storage (unused in this command)","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"        ui.printSection(tasks.stringifyTasks());","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false}],"authorContributionMap":{"pohanson":28}},{"path":"src/main/java/bob/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.command;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import bob.task.Task;","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":" * Command to mark a task as done.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    private static final String SINGLE_TASK_PROMPT \u003d \"I\u0027ve marked this task as done:\\n\\t\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    private static final String MULTIPLE_TASKS_PROMPT \u003d \"I\u0027ve marked these tasks as done:\\n\\t\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"    private static final String INVALID_TASK_ERROR \u003d \"Invalid task number(s) provided: \";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"    private final Integer[] taskNumbers;","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"     * Constructs MarkCommand.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"     * @param taskNumbers the list of task numbers to be marked as done","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"     *                    (1-indexed).","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"    public MarkCommand(Integer[] taskNumbers) {","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"        this.taskNumbers \u003d taskNumbers;","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"     * Marks tasks as done.","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"        if (super.isValidTasks(tasks, taskNumbers)) {","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"            this.markAllTaskDone(tasks, ui);","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"        } else {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"            ui.showError(INVALID_TASK_ERROR + Arrays.toString(taskNumbers));","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"    private void markAllTaskDone(TaskList tasks, Ui ui) {","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"        ArrayList\u003cTask\u003e tasksMarked \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"        for (int taskNumber : taskNumbers) {","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"            tasksMarked.add(tasks.markDone(taskNumber - 1));","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"        String prompt \u003d taskNumbers.length \u003d\u003d 1 ? SINGLE_TASK_PROMPT : MULTIPLE_TASKS_PROMPT;","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"        ui.printSection(prompt + TaskList.stringifyTasks(tasksMarked));","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false}],"authorContributionMap":{"pohanson":51}},{"path":"src/main/java/bob/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.command;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import bob.task.Task;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"import bob.ui.Ui;","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":" * Command to mark a task as undone.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    private static final String SINGLE_TASK_PROMPT \u003d \"I\u0027ve marked this task as undone:\\n\\t\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    private static final String MULTIPLE_TASKS_PROMPT \u003d \"I\u0027ve marked these tasks as undone:\\n\\t\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"    private static final String INVALID_TASK_ERROR \u003d \"Invalid task number(s) provided: \";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"    private final Integer[] taskNumbers;","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"     * Constructs UnmarkCommand.","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"     * @param taskNumbers the list of task numbers to be marked as undone (1-indexed).","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"    public UnmarkCommand(Integer[] taskNumbers) {","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"        this.taskNumbers \u003d taskNumbers;","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"     * Marks tasks as undone.","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:05:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"        if (super.isValidTasks(tasks, taskNumbers)) {","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"            this.markAllTaskUndone(tasks, ui);","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"        } else {","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"            ui.showError(INVALID_TASK_ERROR + Arrays.toString(taskNumbers));","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"    private void markAllTaskUndone(TaskList tasks, Ui ui) {","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"        ArrayList\u003cTask\u003e tasksUnmarked \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"        for (int taskNumber : taskNumbers) {","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"            tasksUnmarked.add(tasks.unmarkDone(taskNumber - 1));","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"        String prompt \u003d taskNumbers.length \u003d\u003d 1 ? SINGLE_TASK_PROMPT : MULTIPLE_TASKS_PROMPT;","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"        ui.printSection(prompt + TaskList.stringifyTasks(tasksUnmarked));","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-28T17:59:08","isFullCredit":false}],"authorContributionMap":{"pohanson":50}},{"path":"src/main/java/bob/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.exception;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:06:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":" * Exception for invalid user input.","lastModifiedDate":"2025-08-28T22:06:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:06:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:06:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"     * Constructs an InvalidInputException.","lastModifiedDate":"2025-08-28T22:06:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:06:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"     * @param message the detail message. The detail message is saved for later","lastModifiedDate":"2025-08-28T22:06:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"     *                retrieval by the getMessage() method.","lastModifiedDate":"2025-08-28T22:06:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:06:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"        super(message);","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false}],"authorContributionMap":{"pohanson":16}},{"path":"src/main/java/bob/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.parser;","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import bob.command.AddCommand;","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import bob.command.Command;","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import bob.command.DeleteCommand;","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import bob.command.ExitCommand;","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"import bob.command.FindCommand;","lastModifiedDate":"2025-09-06T13:29:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"import bob.command.InvalidCommand;","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"import bob.command.ListCommand;","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"import bob.command.MarkCommand;","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"import bob.command.UnmarkCommand;","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:09:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":" * Parser parses user input into commands.","lastModifiedDate":"2025-08-28T22:09:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:09:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T22:09:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:09:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"     * Parses user input into a command.","lastModifiedDate":"2025-08-28T22:09:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:09:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"     * @param input the user input provided, including the action word (eg.","lastModifiedDate":"2025-08-29T13:44:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"     *              list, bye, mark, etc.)","lastModifiedDate":"2025-08-29T13:44:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"     * @return the command according to the input. If the command is invalid, it","lastModifiedDate":"2025-08-28T22:09:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"     * will return an InvalidCommand.","lastModifiedDate":"2025-08-28T22:09:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:09:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"        switch (parts[0].toLowerCase()) {","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"        case \"list\":","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"        case \"bye\":","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"        case \"mark\": {","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-09-06T13:29:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"                return new InvalidCommand(input, \"The mark command requires a task number.\");","lastModifiedDate":"2025-09-06T13:29:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"            }","lastModifiedDate":"2025-09-06T13:29:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"            try {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"                return new MarkCommand(parseInts(parts[1]));","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"                return new InvalidCommand(input, \"Invalid task number format: \" + parts[1]);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"            }","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"        case \"unmark\": {","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-09-06T13:29:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"                return new InvalidCommand(input, \"The unmark command requires a task number.\");","lastModifiedDate":"2025-09-06T13:29:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"            }","lastModifiedDate":"2025-09-06T13:29:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"            try {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"                return new UnmarkCommand(parseInts(parts[1]));","lastModifiedDate":"2025-09-12T19:20:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"                return new InvalidCommand(input, \"Invalid task number format: \" + parts[1]);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"            }","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"        case \"todo\":","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"            // Fallthrough as they uses the Task.createFromString factory method","lastModifiedDate":"2025-08-29T13:33:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"        case \"deadline\":","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"            // Fallthrough as they uses the Task.createFromString factory method","lastModifiedDate":"2025-08-29T13:33:50","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"        case \"event\": {","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"            return new AddCommand(input);","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"        case \"delete\": {","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-09-06T13:29:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"                return new InvalidCommand(input, \"The delete command requires a task number.\");","lastModifiedDate":"2025-09-06T13:29:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"            }","lastModifiedDate":"2025-09-06T13:29:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"            try {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"                return new DeleteCommand(parseInts(parts[1]));","lastModifiedDate":"2025-09-12T19:31:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"                return new InvalidCommand(input, \"Invalid task number format: \" + parts[1]);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pohanson"},"content":"            }","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pohanson"},"content":"        case \"find\": {","lastModifiedDate":"2025-09-06T13:29:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pohanson"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2025-09-06T13:29:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pohanson"},"content":"                return new InvalidCommand(input, \"The find command requires a search keyword.\");","lastModifiedDate":"2025-09-06T13:29:06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pohanson"},"content":"            }","lastModifiedDate":"2025-09-06T13:29:06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pohanson"},"content":"            return new FindCommand(parts[1]);","lastModifiedDate":"2025-09-06T13:29:06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-06T13:29:06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pohanson"},"content":"        default: {","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pohanson"},"content":"            return new InvalidCommand(input);","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pohanson"},"content":"    private static Integer[] parseInts(String input) {","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pohanson"},"content":"        try {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pohanson"},"content":"            return Arrays.stream(input.split(\" \"))","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pohanson"},"content":"                    .map(String::strip)","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pohanson"},"content":"                    .filter(s -\u003e !s.isEmpty())","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pohanson"},"content":"                    .map(Integer::parseInt)","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pohanson"},"content":"                    .toArray(Integer[]::new);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pohanson"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pohanson"},"content":"            throw new NumberFormatException(\"Invalid task number format: \" + input);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-28T18:22:15","isFullCredit":false}],"authorContributionMap":{"pohanson":95}},{"path":"src/main/java/bob/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.storage;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.io.File;","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"import bob.exception.InvalidInputException;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"import bob.task.Task;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":" * Storage handles loading tasklist from a file and saving it.","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"    // not declared as constant so that I could use a different file path","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"    // if needed.","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    private final String filePath;","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"     * Constructs Storage.","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"     * It will also create relevant directories, if it does not exists.","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"     * @param filePath the file path of the storage.","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"     * @throws RuntimeException if unable to create the storage file or directories","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"        // create file if it doesn\u0027t exist","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"        if (!path.toFile().exists()) {","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"            try {","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"                Files.createFile(path);","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"                throw new RuntimeException(\"Failed to create storage file: \" + filePath, e);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"            }","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"        assert path.toFile().exists() : \"File should exist after constructor\";","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"     * Gets the file based on filePath provided in constructor.","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"    private File getFile() throws IOException {","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"        return Paths.get(this.filePath).toFile();","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"     * Saves the task list to the file.","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"     * @param tasks the task list to save.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"     * @throws IOException when file could not be written to.","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"    public void saveTaskList(TaskList tasks) throws IOException {","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"        File file \u003d this.getFile();","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"        try (FileWriter fw \u003d new FileWriter(file)) {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"            fw.write(tasks.toStorageString());","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"     * Loads the task list from the file.","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pohanson"},"content":"     * @throws IOException           when file could not be read from.","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pohanson"},"content":"     * @throws InvalidInputException when file could not be parsed properly.","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:16:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pohanson"},"content":"    public TaskList loadTaskList() throws IOException, InvalidInputException {","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pohanson"},"content":"        File file \u003d this.getFile();","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pohanson"},"content":"        try (Scanner s \u003d new Scanner(file)) {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pohanson"},"content":"            TaskList tasks \u003d new TaskList(this);","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pohanson"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pohanson"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pohanson"},"content":"                if (line.trim().isEmpty()) {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pohanson"},"content":"                    continue;","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pohanson"},"content":"                }","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pohanson"},"content":"                ","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pohanson"},"content":"                String[] parts \u003d line.split(\" \", 2);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pohanson"},"content":"                if (parts.length !\u003d 2) {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pohanson"},"content":"                    throw new InvalidInputException(\"Invalid task format in storage: \" + line);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pohanson"},"content":"                }","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pohanson"},"content":"                Task task \u003d Task.createFromString(parts[1]);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pohanson"},"content":"                if (parts[0].equals(\"1\")) {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pohanson"},"content":"                    task.markDone();","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pohanson"},"content":"                }","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pohanson"},"content":"                tasks.add(task);","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pohanson"},"content":"            }","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pohanson"},"content":"            return tasks;","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false}],"authorContributionMap":{"pohanson":98}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.task;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T22:37:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-27T22:37:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T22:37:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import bob.exception.InvalidInputException;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":" * Tasks that need to be done before a specific date/time.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"    private static final String TASK_TYPE_SYMBOL \u003d \"[D]\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"    private static final String COMMAND_KEYWORD \u003d \"deadline\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"    private static final String TIME_SEPARATOR \u003d \"/by\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-20T22:39:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"     * Constructs a Deadline task.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"     * @param description description for the task.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"     * @param deadline    deadline for the task.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"        super(description);","lastModifiedDate":"2025-08-20T22:39:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-20T22:39:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-20T22:39:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-20T22:39:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"     * Parses the input string given into Deadline object.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"     * @param input should be of the format: deadline [description] /by [datetime].","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"     * @return a new Deadline task","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"     * @throws InvalidInputException if the input format is invalid or description is empty","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"    public static Deadline parse(String input) throws InvalidInputException {","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"        String[] params \u003d input.replaceFirst(COMMAND_KEYWORD, \"\").split(TIME_SEPARATOR);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"        if (params.length !\u003d 2 || params[0].trim().isEmpty() || params[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-20T23:19:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"            throw new InvalidInputException(\"Invalid deadline input: \" + input","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"                    + \"\\nExample of valid format: deadline return book /by 01/01/2025 1200\");","lastModifiedDate":"2025-08-27T22:37:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-27T22:37:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"        try {","lastModifiedDate":"2025-08-27T22:37:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"            LocalDateTime deadline \u003d Task.parseDateTimeString(params[1].trim());","lastModifiedDate":"2025-08-27T22:37:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"            return new Deadline(params[0].trim(), deadline);","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-27T22:37:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"            throw new InvalidInputException(\"Invalid date format in deadline input: \" + params[1].trim()","lastModifiedDate":"2025-08-27T22:37:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"                    + \"\\nExample of valid format: deadline return book /by 01/01/2025 1200\");","lastModifiedDate":"2025-08-27T22:37:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-20T22:39:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-20T22:39:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"    public String toString() {","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"        return String.format(\"%s%s (due: %s)\", TASK_TYPE_SYMBOL, super.toString(), Task.formatDateTime(deadline));","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"    public String toInputString() {","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"        return COMMAND_KEYWORD + \" \" + this.description + \" \" + TIME_SEPARATOR + \" \" + Task.toInputStringDateTime(this.deadline);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-20T22:39:38","isFullCredit":false}],"authorContributionMap":{"pohanson":60}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.task;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import bob.exception.InvalidInputException;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":" * Tasks that start at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"    private static final String TASK_TYPE_SYMBOL \u003d \"[E]\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"    private static final String COMMAND_KEYWORD \u003d \"event\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"    private static final String START_SEPARATOR \u003d \"/from\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    private static final String END_SEPARATOR \u003d \"/to\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"     * Constructs an Event task.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"     * @param description description of the task.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"     * @param start       start time of the task.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"     * @param end         end time of the task.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"        super(description);","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"     * Parses the input string given into Event object.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"     * @param input should be of the format: event [description] /from [start datetime] /to [end datetime].","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"     * @return a new Event task","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"     * @throws InvalidInputException if the input format is invalid or description is empty","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"    public static Event parse(String input) throws InvalidInputException {","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"        String[] params \u003d input.replaceFirst(COMMAND_KEYWORD, \"\").split(START_SEPARATOR + \"|\" + END_SEPARATOR);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"        if (params.length !\u003d 3 || params[0].trim().isEmpty() || params[1].trim().isEmpty()","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"                || params[2].trim().isEmpty()) {","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"            throw new InvalidInputException(\"Invalid event input: \" + input","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"                    + \"\\nExample of valid format: event project meeting /from 01/01/2025 1200 /to 01/01/2025 1400\");","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"        try {","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"            LocalDateTime start \u003d Task.parseDateTimeString(params[1].trim());","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"            LocalDateTime end \u003d Task.parseDateTimeString(params[2].trim());","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"            return new Event(params[0].trim(), start, end);","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"            throw new InvalidInputException(\"Invalid date format in event input: \" + input","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"                    + \"\\nExample of valid format: event project meeting /from 01/01/2025 1200 /to 01/01/2025 1400\");","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"    public String toString() {","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"        return String.format(\"%s%s (%s - %s)\", TASK_TYPE_SYMBOL, super.toString(), formatDateTime(start),","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"                formatDateTime(end));","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"    public String toInputString() {","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"        return COMMAND_KEYWORD + \" \" + this.description + \" \" + START_SEPARATOR + \" \" + toInputStringDateTime(this.start) + \" \" + END_SEPARATOR + \" \"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"                + toInputStringDateTime(this.end);","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false}],"authorContributionMap":{"pohanson":69}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.task;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T21:22:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T21:22:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T21:22:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import bob.exception.InvalidInputException;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":" * Task must be inherited from.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"    private static final String DATETIME_INPUT_FORMAT \u003d \"dd/MM/yyyy HHmm\";","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"    private static final String DATETIME_OUTPUT_FORMAT \u003d \"dd MMM yyyy HH:mm\";","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    protected String description;","lastModifiedDate":"2025-08-19T10:26:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    private boolean isDone;","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-19T10:26:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"     * Constructs a Task.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"     * @param description description for the task.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-19T10:26:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-19T10:26:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T10:26:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-19T10:26:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-19T10:26:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"     * Creates and returns the correct Task subclass object from an input","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"     * string.","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"     * @param input input string given. Should contains the task type.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"    public static Task createFromString(String input) throws InvalidInputException {","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"            return Todo.parse(input);","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"        if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-08-20T22:39:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"            return Deadline.parse(input);","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-20T22:39:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"        if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"            return Event.parse(input);","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-20T22:52:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"        throw new InvalidInputException(\"Invalid task type: \" + input + \"\\nValid types are: todo, deadline, event\");","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T21:22:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-27T21:22:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"     * Parses an input string in the format of \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"     * Example of a valid input string: \"27/08/2025 1000\"","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-27T21:22:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"     * @param input the date string to parse.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-27T21:22:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"    public static LocalDateTime parseDateTimeString(String input) {","lastModifiedDate":"2025-08-27T21:22:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"        return LocalDateTime.parse(input, dateFormat);","lastModifiedDate":"2025-08-27T21:22:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T21:22:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T21:37:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-27T21:37:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"     * Formats a LocalDateTime object into a string.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"     * Example of the returned string: \"27 Aug 2025 10:00\"","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-27T21:37:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-27T21:37:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(DATETIME_OUTPUT_FORMAT);","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"        return dateTime.format(dateFormat);","lastModifiedDate":"2025-08-27T21:37:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T21:37:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pohanson"},"content":"     * Formats a LocalDateTime object into the input string.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pohanson"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pohanson"},"content":"     * Example of the returned string: \"27/08/2025 1000\"","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pohanson"},"content":"    public static String toInputStringDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pohanson"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pohanson"},"content":"        return dateTime.format(dateFormat);","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T21:52:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pohanson"},"content":"     * Converts the task back to how the user input it.","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pohanson"},"content":"     * @return the string representation of the task","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pohanson"},"content":"    abstract String toInputString();","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pohanson"},"content":"    public String toString() {","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pohanson"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pohanson"},"content":"     * Gets the status icon based on its `isDone`","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pohanson"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pohanson"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pohanson"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pohanson"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pohanson"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pohanson"},"content":"        return isDone;","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pohanson"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pohanson"},"content":"    public Task markDone() {","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pohanson"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pohanson"},"content":"        return this;","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pohanson"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pohanson"},"content":"    public Task unmarkDone() {","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pohanson"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pohanson"},"content":"        return this;","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pohanson"},"content":"     * Checks if the task description contains the given keyword.","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pohanson"},"content":"     * @param keyword the keyword to search for.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pohanson"},"content":"     * @return true if the description contains the keyword, false otherwise","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pohanson"},"content":"    public Boolean containsDescription(String keyword) {","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pohanson"},"content":"        return description.contains(keyword);","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-19T10:26:20","isFullCredit":false}],"authorContributionMap":{"pohanson":133}},{"path":"src/main/java/bob/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.task;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import java.util.List;","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import bob.storage.Storage;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":" * TaskList manages a list of tasks and helps to perform action on them.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"public class TaskList {","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(MAX_TASKS);","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    private final Storage storage;","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"     * Constructs TaskList.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"        return tasks;","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"     * Returns the size of task list.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"    public int size() {","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"     * @param t the task to add.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"     * @return true if the task was added successfully","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"    public boolean add(Task t) {","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"        boolean result \u003d tasks.add(t);","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"        if (result) {","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"            this.saveToStorage();","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"        return result;","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"     * Gets a task from the list.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"     * @param index the 0-based index of the task.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"     * @param index the 0-based index of the task.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pohanson"},"content":"    public Task markDone(int index) {","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pohanson"},"content":"        Task t \u003d tasks.get(index).markDone();","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pohanson"},"content":"        this.saveToStorage();","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pohanson"},"content":"        return t;","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pohanson"},"content":"     * Unmarks a task as done.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pohanson"},"content":"     * @param index the 0-based index of the task.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pohanson"},"content":"    public Task unmarkDone(int index) {","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pohanson"},"content":"        Task t \u003d tasks.get(index).unmarkDone();","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pohanson"},"content":"        this.saveToStorage();","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pohanson"},"content":"        return t;","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pohanson"},"content":"     * Removes a task from the list.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pohanson"},"content":"     * @param index the 0-based index of the task.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pohanson"},"content":"    public Task remove(int index) {","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pohanson"},"content":"        Task t \u003d tasks.remove(index);","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pohanson"},"content":"        this.saveToStorage();","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pohanson"},"content":"        return t;","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pohanson"},"content":"     * Validates the task index.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pohanson"},"content":"     * @param index the 0-based index of the task.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pohanson"},"content":"     * @return true if the index is valid, else false.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pohanson"},"content":"    public boolean isValidTaskIndex(int index) {","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pohanson"},"content":"        return (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size());","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pohanson"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pohanson"},"content":"        return stringifyTasks();","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pohanson"},"content":"     * Converts the tasks in the list as a string for output.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pohanson"},"content":"    public String stringifyTasks() {","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pohanson"},"content":"        return TaskList.stringifyTasks(this.tasks);","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-28T21:33:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T21:33:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pohanson"},"content":"     * Converts the tasks in the list to a string for output.","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pohanson"},"content":"     * @param tasks the list of tasks to display.","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pohanson"},"content":"    public static String stringifyTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pohanson"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pohanson"},"content":"            return \"No tasks in list.\";","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pohanson"},"content":"        return IntStream.range(0, tasks.size()).mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, tasks.get(i))).reduce(\"\",","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pohanson"},"content":"                (acc, cur) -\u003e acc + \"\\n\\t\" + cur);","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pohanson"},"content":"     * Filters tasks by keyword.","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pohanson"},"content":"     * @param tasks   List of all tasks.","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pohanson"},"content":"     * @param keyword the keyword to filter by.","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pohanson"},"content":"    public static List\u003cTask\u003e filterTasksByKeyword(List\u003cTask\u003e tasks, String keyword) {","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pohanson"},"content":"        return tasks.stream().filter(task -\u003e task.containsDescription(keyword)).toList();","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pohanson"},"content":"     * Converts the tasks in the list as a string for storage.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"pohanson"},"content":"    public String toStorageString() {","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"pohanson"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"pohanson"},"content":"            return \"\";","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"pohanson"},"content":"        } else {","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"pohanson"},"content":"            return tasks.stream().map(task -\u003e (task.isDone() ? \"1\" : \"0\") + \" \" + task.toInputString()).reduce(\"\",","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"pohanson"},"content":"                    (acc, x) -\u003e acc + x + \"\\n\");","lastModifiedDate":"2025-09-12T17:59:13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T20:58:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"pohanson"},"content":"     * Saves the current task list to storage.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"pohanson"},"content":"    public void saveToStorage() {","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"pohanson"},"content":"        if (storage \u003d\u003d null) {","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"pohanson"},"content":"            return; // Skip saving if no storage is available","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"pohanson"},"content":"        try {","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"pohanson"},"content":"            storage.saveTaskList(this);","lastModifiedDate":"2025-08-27T23:09:21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"pohanson"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"pohanson"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T22:16:36","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-26T17:13:30","isFullCredit":false}],"authorContributionMap":{"pohanson":170}},{"path":"src/main/java/bob/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.task;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import bob.exception.InvalidInputException;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":" * Tasks without any date/time attached to it.","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"    private static final String TASK_TYPE_SYMBOL \u003d \"[T]\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"    private static final String COMMAND_KEYWORD \u003d \"todo\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"     * Constructs a Todo task.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"     * @param description description for the task","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"        super(description);","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"     * Parses the input string given into Todo object.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"     * @param input should be of the format: todo [description].","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"     * @return a new Todo task","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"     * @throws InvalidInputException if the input format is invalid or description is empty","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"    public static Todo parse(String input) throws InvalidInputException {","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"        String taskName \u003d input.replaceFirst(COMMAND_KEYWORD, \"\").trim();","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2025-08-20T23:19:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"            throw new InvalidInputException(\"Invalid todo task (description cannot be empty): \" + input","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"                    + \"\\nExample of valid format: \u0027todo borrow book\u0027\");","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"        return new Todo(taskName);","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"    public String toString() {","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"        return TASK_TYPE_SYMBOL + super.toString();","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"    @Override","lastModifiedDate":"2025-08-28T22:49:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"    public String toInputString() {","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"        return COMMAND_KEYWORD + \" \" + this.description;","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-26T22:48:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-20T22:18:19","isFullCredit":false}],"authorContributionMap":{"pohanson":46}},{"path":"src/main/java/bob/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.ui;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":" * face and a label containing text from the speaker.","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"        try {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"    public static DialogBox getBobDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"        db.flip();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"        return db;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"     * the right.","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"    private void flip() {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false}],"authorContributionMap":{"pohanson":62}},{"path":"src/main/java/bob/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.ui;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import java.util.Objects;","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import bob.Bob;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-06T13:17:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":" * MainWindow that handles interaction in the main window.","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    private final Image bobImage \u003d new Image(","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/chatBob.jpg\")));","lastModifiedDate":"2025-09-10T18:18:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"    private Bob bob;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"     * Injects the Bob instance","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"    public void setBob(Bob b) {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"        bob \u003d b;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"     * Bob\u0027s reply and then appends them to the dialog container. Clears the","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"     * user input after processing.","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"    @FXML","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2025-09-06T13:17:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"            Stage stage \u003d (Stage) sendButton.getScene().getWindow();","lastModifiedDate":"2025-09-06T13:17:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"            stage.close();","lastModifiedDate":"2025-09-06T13:17:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-06T13:17:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"        String response \u003d bob.getResponse(input);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"                DialogBox.getBobDialog(response, bobImage));","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false}],"authorContributionMap":{"pohanson":63}},{"path":"src/main/java/bob/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.ui;","lastModifiedDate":"2025-08-28T17:38:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-28T00:22:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"/**","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":" * User Interface for the application.","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":" */","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"public class Ui {","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"    private static final String LINE_SEPARATOR \u003d \"\u003d\".repeat(80);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"    private static final String ERROR_PREFIX \u003d \"Error: \";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"    private static final String ANSI_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"    private static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"    private final StringBuilder responseBuffer \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"     * Prints a line separator.","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"    public void printLine() {","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"     * Shows an error message.","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"     * @param message the error message to display.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"        responseBuffer.append(ERROR_PREFIX).append(message).append(\"\\n\");","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"        System.out.println(ANSI_RED + ERROR_PREFIX + message + ANSI_RESET);","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"     * Prints a section header.","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"     * It is just the string s, with a line below.","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"     * @param s the section content to print.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"    public void printSection(String s) {","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"        responseBuffer.append(s);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"        System.out.println(s);","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"        this.printLine();","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"     * Prints the available commands.","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-08-28T22:55:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"    public void printHelp() {","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"        String helpMessage \u003d \"\"\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"                Available commands:","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"                    list - List all tasks","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"                    mark \u003ctask number\u003e - Mark a task as done. Separate tasks by a space","lastModifiedDate":"2025-09-12T18:00:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"                    unmark \u003ctask number\u003e - Unmark a task as not done","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"                    todo \u003cdescription\u003e - Add a task without any date/time attached to it","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"                    deadline \u003cdescription\u003e /by \u003cdatetime\u003e - Add a task that need to be done before a specific date/time","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"                    event \u003cdescription\u003e /from \u003cstart datetime\u003e /to \u003cend datetime\u003e - Add task that start at a specific","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"                                        date/time and ends at a specific date/time","lastModifiedDate":"2025-09-01T21:09:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"                    delete \u003ctask number\u003e - Delete a task from the list","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"                    find \u003csearch keyword\u003e - Search for a task that contains \u003csearch keyword\u003e in the description.","lastModifiedDate":"2025-08-28T21:41:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"                    bye - Exit the program","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"                Note:","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"                    All datetime should be in the format of \"dd/MM/yyyy HHmm\", for example: 27/08/2025 1000","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"                \"\"\";","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"        responseBuffer.append(helpMessage);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"        System.out.println(helpMessage);","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"    /**","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"     * Gets the accumulated response and clears the buffer.","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"     *","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pohanson"},"content":"     * @return the accumulated response from operations","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pohanson"},"content":"     */","lastModifiedDate":"2025-09-17T21:04:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pohanson"},"content":"    public String getResponse() {","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pohanson"},"content":"        String res \u003d responseBuffer.toString();","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pohanson"},"content":"        responseBuffer.setLength(0); // Clear the buffer","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pohanson"},"content":"        return res;","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-27T23:38:11","isFullCredit":false}],"authorContributionMap":{"pohanson":77}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-06T13:08:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T13:08:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"         stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-06T13:08:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-06T13:08:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2025-09-06T13:08:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"                   preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2025-09-06T13:08:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false}],"authorContributionMap":{"pohanson":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"            prefHeight\u003d\"600.0\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"            prefWidth\u003d\"700.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-06T13:08:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bob.ui.MainWindow\"\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"                   promptText\u003d\"Type your message here...\"","lastModifiedDate":"2025-09-06T13:08:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"/\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"                    prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-06T12:39:37","isFullCredit":false}],"authorContributionMap":{"pohanson":31}},{"path":"src/test/java/bob/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.parser;","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import bob.command.AddCommand;","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import bob.command.Command;","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"import bob.command.DeleteCommand;","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"import bob.command.ExitCommand;","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"import bob.command.FindCommand;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"import bob.command.InvalidCommand;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"import bob.command.ListCommand;","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"import bob.command.MarkCommand;","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"import bob.command.UnmarkCommand;","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    // Basic command parsing tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"    public void parse_listCommand_returnsListCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"        assertEquals(ListCommand.class, command.getClass());","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"    public void parse_byeCommand_returnsExitCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"        assertEquals(ExitCommand.class, command.getClass());","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"    public void parse_markCommandWithSingleNumber_returnsMarkCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"        assertEquals(MarkCommand.class, command.getClass());","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"    public void parse_unmarkCommandWithSingleNumber_returnsUnmarkCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"unmark 1\");","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"        assertEquals(UnmarkCommand.class, command.getClass());","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"    public void parse_todoCommandWithDescription_returnsAddCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"todo read\");","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"        assertEquals(AddCommand.class, command.getClass());","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"    public void parse_deadlineCommandWithValidFormat_returnsAddCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"deadline return book /by 01/01/2025 1200\");","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"        assertEquals(AddCommand.class, command.getClass());","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"    public void parse_eventCommandWithValidFormat_returnsAddCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"event project meeting /from 01/01/2025 1200 /to 01/01/2025 1400\");","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"        assertEquals(AddCommand.class, command.getClass());","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"    public void parse_deleteCommandWithSingleNumber_returnsDeleteCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"        assertEquals(DeleteCommand.class, command.getClass());","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"    public void parse_findCommandWithKeyword_returnsFindCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"find book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pohanson"},"content":"        assertEquals(FindCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pohanson"},"content":"    public void parse_unknownCommand_returnsInvalidCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"blah\");","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pohanson"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pohanson"},"content":"    // Edge cases and error handling tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pohanson"},"content":"    public void parse_markCommandWithoutNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"mark\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pohanson"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pohanson"},"content":"    public void parse_unmarkCommandWithoutNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"unmark\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pohanson"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pohanson"},"content":"    public void parse_deleteCommandWithoutNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"delete\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pohanson"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pohanson"},"content":"    public void parse_findCommandWithoutKeyword_returnsInvalidCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"find\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pohanson"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pohanson"},"content":"    public void parse_markCommandWithInvalidNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"mark abc\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pohanson"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pohanson"},"content":"    public void parse_unmarkCommandWithInvalidNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"unmark xyz\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pohanson"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pohanson"},"content":"    public void parse_deleteCommandWithInvalidNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"delete notanumber\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pohanson"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pohanson"},"content":"    public void parse_markCommandWithMultipleNumbers_returnsMarkCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"mark 1 2 3\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pohanson"},"content":"        assertEquals(MarkCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pohanson"},"content":"    public void parse_unmarkCommandWithMultipleNumbers_returnsUnmarkCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"unmark 1 2 3\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pohanson"},"content":"        assertEquals(UnmarkCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pohanson"},"content":"    public void parse_deleteCommandWithMultipleNumbers_returnsDeleteCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"delete 1 2 3\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pohanson"},"content":"        assertEquals(DeleteCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pohanson"},"content":"    // Case sensitivity tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pohanson"},"content":"    public void parse_upperCaseCommand_returnsCorrectCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"LIST\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pohanson"},"content":"        assertEquals(ListCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"pohanson"},"content":"    public void parse_mixedCaseCommand_returnsCorrectCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"ByE\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"pohanson"},"content":"        assertEquals(ExitCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"pohanson"},"content":"    // Empty and whitespace tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"pohanson"},"content":"    public void parse_emptyString_returnsInvalidCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"pohanson"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"pohanson"},"content":"    public void parse_whitespaceOnly_returnsInvalidCommand() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"pohanson"},"content":"        Command command \u003d Parser.parse(\"   \");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"pohanson"},"content":"        assertEquals(InvalidCommand.class, command.getClass());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-29T14:11:15","isFullCredit":false}],"authorContributionMap":{"pohanson":165}},{"path":"src/test/java/bob/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.storage;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"import bob.exception.InvalidInputException;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"import bob.task.Task;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"import bob.task.TaskList;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"public class StorageTest {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    @TempDir","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"    Path tempDir;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"    ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"    private String testFilePath;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"    public void setUp() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"        testFilePath \u003d tempDir.resolve(\"test_tasks.txt\").toString();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"    @AfterEach","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"    public void tearDown() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"        try {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"            Files.deleteIfExists(Paths.get(testFilePath));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"            // Ignore cleanup errors","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"        }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"    // File creation tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_nonExistentFile_createsEmptyTaskList() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"        // The storage constructor already creates the file","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"        assertTrue(Files.exists(Paths.get(testFilePath)));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_existingEmptyFile_returnsEmptyTaskList() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"    // Save functionality tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"    public void saveTaskList_emptyTaskList_createsEmptyFile() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d new TaskList(storage);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"        assertTrue(Files.exists(Paths.get(testFilePath)));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"        String content \u003d Files.readString(Paths.get(testFilePath));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"\", content);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pohanson"},"content":"    public void saveTaskList_taskListWithTodos_writesCorrectFormat() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d new TaskList(storage);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pohanson"},"content":"        taskList.add(Task.createFromString(\"todo read book\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pohanson"},"content":"        taskList.add(Task.createFromString(\"todo write code\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pohanson"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pohanson"},"content":"        String content \u003d Files.readString(Paths.get(testFilePath));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pohanson"},"content":"        assertTrue(content.contains(\"0 todo read book\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pohanson"},"content":"        assertTrue(content.contains(\"0 todo write code\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pohanson"},"content":"    public void saveTaskList_taskListWithMarkedTasks_writesCorrectFormat() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d new TaskList(storage);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pohanson"},"content":"        taskList.add(Task.createFromString(\"todo read book\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pohanson"},"content":"        taskList.markDone(0);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pohanson"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pohanson"},"content":"        String content \u003d Files.readString(Paths.get(testFilePath));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pohanson"},"content":"        assertTrue(content.contains(\"1 todo read book\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pohanson"},"content":"    // Load functionality tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_fileWithUnmarkedTodo_createsCorrectTask() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pohanson"},"content":"        String fileContent \u003d \"0 todo read book\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pohanson"},"content":"        Files.writeString(Paths.get(testFilePath), fileContent);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pohanson"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.get(0).isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"[T][ ] read book\", taskList.get(0).toString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_fileWithMarkedTodo_createsCorrectTask() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pohanson"},"content":"        String fileContent \u003d \"1 todo read book\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pohanson"},"content":"        Files.writeString(Paths.get(testFilePath), fileContent);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pohanson"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.get(0).isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"[T][X] read book\", taskList.get(0).toString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_fileWithDeadline_createsCorrectTask() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pohanson"},"content":"        String fileContent \u003d \"0 deadline submit report /by 01/01/2025 1200\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pohanson"},"content":"        Files.writeString(Paths.get(testFilePath), fileContent);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pohanson"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.get(0).isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.get(0).toString().contains(\"[D]\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.get(0).toString().contains(\"submit report\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_fileWithEvent_createsCorrectTask() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pohanson"},"content":"        String fileContent \u003d \"0 event meeting /from 01/01/2025 1000 /to 01/01/2025 1200\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pohanson"},"content":"        Files.writeString(Paths.get(testFilePath), fileContent);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pohanson"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.get(0).isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.get(0).toString().contains(\"[E]\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.get(0).toString().contains(\"meeting\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_fileWithMultipleTasks_createsAllTasks() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"pohanson"},"content":"        String fileContent \u003d \"0 todo read book\\n\" +","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"pohanson"},"content":"                           \"1 deadline submit report /by 01/01/2025 1200\\n\" +","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"pohanson"},"content":"                           \"0 event meeting /from 01/01/2025 1000 /to 01/01/2025 1200\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"pohanson"},"content":"        Files.writeString(Paths.get(testFilePath), fileContent);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"pohanson"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.get(0).isDone()); // todo","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.get(1).isDone());  // deadline","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.get(2).isDone()); // event","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"pohanson"},"content":"    // Error handling tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_invalidTaskFormat_throwsInvalidInputException() throws IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"pohanson"},"content":"        String fileContent \u003d \"0 invalidtask invalid format\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"pohanson"},"content":"        Files.writeString(Paths.get(testFilePath), fileContent);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"pohanson"},"content":"            storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_invalidCompletionStatus_treatAsUnmarked() throws IOException, InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"pohanson"},"content":"        String fileContent \u003d \"invalid todo read book\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"pohanson"},"content":"        Files.writeString(Paths.get(testFilePath), fileContent);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"pohanson"},"content":"        // The current implementation only checks for \"1\", so \"invalid\" would be treated as \"0\"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"pohanson"},"content":"        // But if the line has invalid format, it should throw InvalidInputException","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"pohanson"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.get(0).isDone()); // Should be treated as unmarked (not \"1\")","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_emptyLine_skipsLine() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"pohanson"},"content":"        String fileContent \u003d \"0 todo read book\\n\\n1 todo write code\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"pohanson"},"content":"        Files.writeString(Paths.get(testFilePath), fileContent);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"pohanson"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.get(0).isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.get(1).isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_whitespaceLine_skipsLine() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"pohanson"},"content":"        String fileContent \u003d \"0 todo read book\\n   \\n1 todo write code\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"pohanson"},"content":"        Files.writeString(Paths.get(testFilePath), fileContent);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"pohanson"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"pohanson"},"content":"    // Directory handling tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"pohanson"},"content":"    public void storage_nonExistentDirectory_createsDirectoryAndFile() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"pohanson"},"content":"        Path newDirPath \u003d tempDir.resolve(\"newdir\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"pohanson"},"content":"        String newFilePath \u003d newDirPath.resolve(\"tasks.txt\").toString();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"pohanson"},"content":"        Storage newStorage \u003d new Storage(newFilePath);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"pohanson"},"content":"        assertTrue(Files.exists(newDirPath));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"pohanson"},"content":"        assertTrue(Files.exists(Paths.get(newFilePath)));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d newStorage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"pohanson"},"content":"    // Round-trip tests (save then load)","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"pohanson"},"content":"    public void saveAndLoadTaskList_taskList_preservesAllData() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"pohanson"},"content":"        TaskList originalTaskList \u003d new TaskList(storage);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"pohanson"},"content":"        originalTaskList.add(Task.createFromString(\"todo read book\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"pohanson"},"content":"        originalTaskList.add(Task.createFromString(\"deadline submit report /by 01/01/2025 1200\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"pohanson"},"content":"        originalTaskList.add(Task.createFromString(\"event meeting /from 01/01/2025 1000 /to 01/01/2025 1200\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"pohanson"},"content":"        originalTaskList.markDone(1); // Mark deadline as done","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"pohanson"},"content":"        storage.saveTaskList(originalTaskList);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"pohanson"},"content":"        TaskList loadedTaskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"pohanson"},"content":"        assertEquals(originalTaskList.size(), loadedTaskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"pohanson"},"content":"        assertEquals(originalTaskList.get(0).toString(), loadedTaskList.get(0).toString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"pohanson"},"content":"        assertEquals(originalTaskList.get(1).toString(), loadedTaskList.get(1).toString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"pohanson"},"content":"        assertEquals(originalTaskList.get(2).toString(), loadedTaskList.get(2).toString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"pohanson"},"content":"        assertTrue(loadedTaskList.get(1).isDone()); // Deadline should still be marked","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"pohanson"},"content":"    // Edge case tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"pohanson"},"content":"    public void loadTaskList_fileWithTrailingNewlines_handlesCorrectly() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"pohanson"},"content":"        String fileContent \u003d \"0 todo read book\\n\\n\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"pohanson"},"content":"        Files.writeString(Paths.get(testFilePath), fileContent);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"pohanson"},"content":"        TaskList taskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"pohanson"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"[T][ ] read book\", taskList.get(0).toString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"pohanson"},"content":"    public void saveTaskList_overwriteExistingFile_replacesContent() throws InvalidInputException, IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"pohanson"},"content":"        // First save","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"pohanson"},"content":"        TaskList taskList1 \u003d new TaskList(storage);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"pohanson"},"content":"        taskList1.add(Task.createFromString(\"todo read book\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"pohanson"},"content":"        storage.saveTaskList(taskList1);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"pohanson"},"content":"        // Second save with different content","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"pohanson"},"content":"        TaskList taskList2 \u003d new TaskList(storage);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"pohanson"},"content":"        taskList2.add(Task.createFromString(\"todo write code\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"pohanson"},"content":"        storage.saveTaskList(taskList2);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"pohanson"},"content":"        // Load and verify only second content exists","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"pohanson"},"content":"        TaskList loadedTaskList \u003d storage.loadTaskList();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"pohanson"},"content":"        assertEquals(1, loadedTaskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"pohanson"},"content":"        assertTrue(loadedTaskList.get(0).toString().contains(\"write code\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"pohanson"},"content":"        assertFalse(loadedTaskList.get(0).toString().contains(\"read book\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"pohanson"},"content":"    // Constructor tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"pohanson"},"content":"    public void constructor_validFilePath_createsFileSuccessfully() throws IOException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"pohanson"},"content":"        String newFilePath \u003d tempDir.resolve(\"new_storage.txt\").toString();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"pohanson"},"content":"        Storage newStorage \u003d new Storage(newFilePath);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"pohanson"},"content":"        assertTrue(Files.exists(Paths.get(newFilePath)));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"pohanson"},"content":"    public void constructor_invalidFilePath_throwsRuntimeException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"pohanson"},"content":"        // Try to create a file in a path that contains an invalid character (on Windows)","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"pohanson"},"content":"        String invalidPath \u003d \"\\0invalid\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"pohanson"},"content":"        assertThrows(RuntimeException.class, () -\u003e new Storage(invalidPath));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false}],"authorContributionMap":{"pohanson":288}},{"path":"src/test/java/bob/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.task;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"import java.util.List;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"import bob.exception.InvalidInputException;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"public class TaskListTest {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"    public void setUp() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"        taskList \u003d new TaskList(null); // Using null storage for testing","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"    // Basic functionality tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"    public void add_singleTask_increasesSize() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.add(task));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"    public void add_multipleTasks_increasesSize() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"        Task task1 \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"        Task task2 \u003d Task.createFromString(\"deadline submit report /by 01/01/2025 1200\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"    public void isEmpty_newTaskList_returnsTrue() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"    public void isEmpty_taskListWithTasks_returnsFalse() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.isEmpty());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"    public void size_emptyTaskList_returnsZero() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"    public void get_validIndex_returnsCorrectTask() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"        Task retrieved \u003d taskList.get(0);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"        assertEquals(task, retrieved);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"    // Task manipulation tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"    public void markDone_validIndex_marksTaskAsDone() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pohanson"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pohanson"},"content":"        Task markedTask \u003d taskList.markDone(0);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pohanson"},"content":"        assertTrue(markedTask.isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.get(0).isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pohanson"},"content":"    public void unmarkDone_validIndex_unmarksTask() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pohanson"},"content":"        task.markDone(); // Mark it first","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pohanson"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pohanson"},"content":"        Task unmarkedTask \u003d taskList.unmarkDone(0);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pohanson"},"content":"        assertFalse(unmarkedTask.isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.get(0).isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pohanson"},"content":"    public void remove_validIndex_removesTaskAndDecreasesSize() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pohanson"},"content":"        Task task1 \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pohanson"},"content":"        Task task2 \u003d Task.createFromString(\"todo write code\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pohanson"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pohanson"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pohanson"},"content":"        Task removedTask \u003d taskList.remove(0);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pohanson"},"content":"        assertEquals(task1, removedTask);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pohanson"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pohanson"},"content":"        assertEquals(task2, taskList.get(0)); // task2 should now be at index 0","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pohanson"},"content":"    // Index validation tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pohanson"},"content":"    public void isValidTaskIndex_validIndex_returnsTrue() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pohanson"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pohanson"},"content":"        assertTrue(taskList.isValidTaskIndex(0));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pohanson"},"content":"    public void isValidTaskIndex_negativeIndex_returnsFalse() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pohanson"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.isValidTaskIndex(-1));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pohanson"},"content":"    public void isValidTaskIndex_indexTooLarge_returnsFalse() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pohanson"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.isValidTaskIndex(1)); // Only index 0 is valid","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pohanson"},"content":"    public void isValidTaskIndex_emptyTaskList_returnsFalse() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pohanson"},"content":"        assertFalse(taskList.isValidTaskIndex(0));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pohanson"},"content":"    // String representation tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pohanson"},"content":"    public void stringifyTasks_emptyTaskList_returnsNoTasksMessage() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"No tasks in list.\", taskList.stringifyTasks());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pohanson"},"content":"    public void stringifyTasks_singleTask_returnsFormattedTask() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pohanson"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pohanson"},"content":"        String expected \u003d \"\\n\\t1. [T][ ] read book\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"pohanson"},"content":"        assertEquals(expected, taskList.stringifyTasks());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"pohanson"},"content":"    public void stringifyTasks_multipleTasks_returnsAllTasksFormatted() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"pohanson"},"content":"        Task task1 \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"pohanson"},"content":"        Task task2 \u003d Task.createFromString(\"deadline submit report /by 01/01/2025 1200\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"pohanson"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"pohanson"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"pohanson"},"content":"        String result \u003d taskList.stringifyTasks();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"pohanson"},"content":"        assertTrue(result.contains(\"1. [T][ ] read book\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"pohanson"},"content":"        assertTrue(result.contains(\"2. [D][ ] submit report\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"pohanson"},"content":"    public void stringifyTasks_staticMethodWithEmptyList_returnsNoTasksMessage() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"No tasks in list.\", TaskList.stringifyTasks(List.of()));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"pohanson"},"content":"    public void stringifyTasks_staticMethodWithTasks_returnsFormattedTasks() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"pohanson"},"content":"        Task task1 \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"pohanson"},"content":"        Task task2 \u003d Task.createFromString(\"todo write code\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"pohanson"},"content":"        List\u003cTask\u003e tasks \u003d List.of(task1, task2);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"pohanson"},"content":"        String result \u003d TaskList.stringifyTasks(tasks);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"pohanson"},"content":"        assertTrue(result.contains(\"1. [T][ ] read book\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"pohanson"},"content":"        assertTrue(result.contains(\"2. [T][ ] write code\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"pohanson"},"content":"    // Filtering tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"pohanson"},"content":"    public void filterTasksByKeyword_matchingKeyword_returnsMatchingTasks() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"pohanson"},"content":"        Task task1 \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"pohanson"},"content":"        Task task2 \u003d Task.createFromString(\"todo write code\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"pohanson"},"content":"        Task task3 \u003d Task.createFromString(\"todo read article\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"pohanson"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"pohanson"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"pohanson"},"content":"        taskList.add(task3);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"pohanson"},"content":"        List\u003cTask\u003e filtered \u003d TaskList.filterTasksByKeyword(taskList.getTasks(), \"read\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"pohanson"},"content":"        assertEquals(2, filtered.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"pohanson"},"content":"        assertTrue(filtered.contains(task1));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"pohanson"},"content":"        assertTrue(filtered.contains(task3));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"pohanson"},"content":"        assertFalse(filtered.contains(task2));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"pohanson"},"content":"    public void filterTasksByKeyword_noMatchingKeyword_returnsEmptyList() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"pohanson"},"content":"        Task task1 \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"pohanson"},"content":"        Task task2 \u003d Task.createFromString(\"todo write code\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"pohanson"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"pohanson"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"pohanson"},"content":"        List\u003cTask\u003e filtered \u003d TaskList.filterTasksByKeyword(taskList.getTasks(), \"homework\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"pohanson"},"content":"        assertEquals(0, filtered.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"pohanson"},"content":"    public void filterTasksByKeyword_emptyKeyword_returnsAllTasks() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"pohanson"},"content":"        Task task1 \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"pohanson"},"content":"        Task task2 \u003d Task.createFromString(\"todo write code\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"pohanson"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"pohanson"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"pohanson"},"content":"        List\u003cTask\u003e filtered \u003d TaskList.filterTasksByKeyword(taskList.getTasks(), \"\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"pohanson"},"content":"        assertEquals(2, filtered.size());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"pohanson"},"content":"    // Storage string tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"pohanson"},"content":"    public void toStorageString_emptyTaskList_returnsEmptyString() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"\", taskList.toStorageString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"pohanson"},"content":"    public void toStorageString_taskListWithUnmarkedTask_returnsCorrectFormat() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"pohanson"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"pohanson"},"content":"        String expected \u003d \"0 todo read book\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"pohanson"},"content":"        assertEquals(expected, taskList.toStorageString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"pohanson"},"content":"    public void toStorageString_taskListWithMarkedTask_returnsCorrectFormat() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"pohanson"},"content":"        task.markDone();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"pohanson"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"pohanson"},"content":"        String expected \u003d \"1 todo read book\\n\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"pohanson"},"content":"        assertEquals(expected, taskList.toStorageString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"pohanson"},"content":"    public void toStorageString_taskListWithMixedTasks_returnsCorrectFormat() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"pohanson"},"content":"        Task task1 \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"pohanson"},"content":"        Task task2 \u003d Task.createFromString(\"deadline submit report /by 01/01/2025 1200\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"pohanson"},"content":"        task1.markDone();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"pohanson"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"pohanson"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"pohanson"},"content":"        String result \u003d taskList.toStorageString();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"pohanson"},"content":"        assertTrue(result.contains(\"1 todo read book\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"pohanson"},"content":"        assertTrue(result.contains(\"0 deadline submit report /by 01/01/2025 1200\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"pohanson"},"content":"    // toString tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"pohanson"},"content":"    public void toString_delegatesToStringifyTasks() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"pohanson"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"pohanson"},"content":"        assertEquals(taskList.stringifyTasks(), taskList.toString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false}],"authorContributionMap":{"pohanson":266}},{"path":"src/test/java/bob/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"package bob.task;","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"import bob.exception.InvalidInputException;","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"public class TaskTest {","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"    // Todo task creation tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"    public void createFromString_validTodoInput_returnsTodoTask() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"        String input \u003d \"todo read\";","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(input);","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"pohanson"},"content":"        assertEquals(Todo.class, task.getClass());","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"[T][ ] read\", task.toString());","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"pohanson"},"content":"    public void createFromString_emptyTodoDescription_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"todo \");","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"pohanson"},"content":"    public void createFromString_todoWithOnlySpaces_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"todo    \");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"pohanson"},"content":"    // Deadline task creation tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"pohanson"},"content":"    public void createFromString_validDeadlineInput_returnsDeadlineTask() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"pohanson"},"content":"        String input \u003d \"deadline return book /by 01/01/2025 1200\";","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(input);","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"pohanson"},"content":"        assertEquals(Deadline.class, task.getClass());","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"[D][ ] return book (due: 01 Jan 2025 12:00)\", task.toString());","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"pohanson"},"content":"    public void createFromString_deadlineWithoutBy_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"deadline return book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"pohanson"},"content":"    public void createFromString_deadlineWithEmptyDescription_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"deadline /by 01/01/2025 1200\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"pohanson"},"content":"    public void createFromString_deadlineWithEmptyDate_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"deadline return book /by \");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"pohanson"},"content":"    public void createFromString_deadlineWithInvalidDateFormat_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"deadline return book /by tomorrow\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"pohanson"},"content":"    // Event task creation tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"pohanson"},"content":"    public void createFromString_validEventInput_returnsEventTask() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"pohanson"},"content":"        String input \u003d \"event project meeting /from 01/01/2025 1200 /to 01/01/2025 1400\";","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(input);","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"pohanson"},"content":"        assertEquals(Event.class, task.getClass());","lastModifiedDate":"2025-09-10T16:58:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"[E][ ] project meeting (01 Jan 2025 12:00 - 01 Jan 2025 14:00)\", task.toString());","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"pohanson"},"content":"    public void createFromString_eventWithoutFrom_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"event project meeting /to 01/01/2025 1400\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"pohanson"},"content":"    public void createFromString_eventWithoutTo_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"event project meeting /from 01/01/2025 1200\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"pohanson"},"content":"    public void createFromString_eventWithEmptyDescription_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"event /from 01/01/2025 1200 /to 01/01/2025 1400\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"pohanson"},"content":"    public void createFromString_eventWithInvalidStartDate_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"event meeting /from yesterday /to 01/01/2025 1400\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"pohanson"},"content":"    public void createFromString_eventWithInvalidEndDate_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"event meeting /from 01/01/2025 1200 /to tomorrow\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"pohanson"},"content":"    // Invalid task type tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"pohanson"},"content":"    public void createFromString_unknownTaskType_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"unknown task description\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"pohanson"},"content":"    public void createFromString_emptyTaskType_throwsInvalidInputException() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"pohanson"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"pohanson"},"content":"            Task.createFromString(\"\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"pohanson"},"content":"        });","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"pohanson"},"content":"    // Task marking tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"pohanson"},"content":"    public void markDone_unmarkedTask_returnsMarkedTask() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"pohanson"},"content":"        Task markedTask \u003d task.markDone();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"pohanson"},"content":"        assertTrue(markedTask.isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"X\", markedTask.getStatusIcon());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"[T][X] read book\", markedTask.toString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"pohanson"},"content":"    public void markDone_alreadyMarkedTask_remainsMarked() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"pohanson"},"content":"        task.markDone();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"pohanson"},"content":"        Task remarkedTask \u003d task.markDone();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"pohanson"},"content":"        assertTrue(remarkedTask.isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"X\", remarkedTask.getStatusIcon());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"pohanson"},"content":"    public void unmarkDone_markedTask_returnsUnmarkedTask() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"pohanson"},"content":"        task.markDone();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"pohanson"},"content":"        Task unmarkedTask \u003d task.unmarkDone();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"pohanson"},"content":"        assertFalse(unmarkedTask.isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"pohanson"},"content":"        assertEquals(\" \", unmarkedTask.getStatusIcon());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"[T][ ] read book\", unmarkedTask.toString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"pohanson"},"content":"    public void unmarkDone_unmarkedTask_remainsUnmarked() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"pohanson"},"content":"        Task stillUnmarkedTask \u003d task.unmarkDone();","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"pohanson"},"content":"        ","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"pohanson"},"content":"        assertFalse(stillUnmarkedTask.isDone());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"pohanson"},"content":"        assertEquals(\" \", stillUnmarkedTask.getStatusIcon());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"pohanson"},"content":"    // Task description search tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"pohanson"},"content":"    public void containsDescription_taskWithMatchingKeyword_returnsTrue() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read programming book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"pohanson"},"content":"        assertTrue(task.containsDescription(\"book\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"pohanson"},"content":"        assertTrue(task.containsDescription(\"programming\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"pohanson"},"content":"        assertTrue(task.containsDescription(\"read\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"pohanson"},"content":"    public void containsDescription_taskWithoutMatchingKeyword_returnsFalse() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read programming book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"pohanson"},"content":"        assertFalse(task.containsDescription(\"movie\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"pohanson"},"content":"        assertFalse(task.containsDescription(\"homework\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"pohanson"},"content":"    public void containsDescription_partialMatch_returnsTrue() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo programming\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"pohanson"},"content":"        assertTrue(task.containsDescription(\"gram\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"pohanson"},"content":"        assertTrue(task.containsDescription(\"prog\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"pohanson"},"content":"    public void containsDescription_emptyKeyword_returnsTrue() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"pohanson"},"content":"        assertTrue(task.containsDescription(\"\"));","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"pohanson"},"content":"    // DateTime parsing tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"pohanson"},"content":"    public void parseDateTimeString_validFormat_returnsLocalDateTime() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"pohanson"},"content":"        String input \u003d \"01/01/2025 1200\";","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"pohanson"},"content":"        LocalDateTime result \u003d Task.parseDateTimeString(input);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"pohanson"},"content":"        assertEquals(2025, result.getYear());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"pohanson"},"content":"        assertEquals(1, result.getMonthValue());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"pohanson"},"content":"        assertEquals(1, result.getDayOfMonth());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"pohanson"},"content":"        assertEquals(12, result.getHour());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"pohanson"},"content":"        assertEquals(0, result.getMinute());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"pohanson"},"content":"    public void formatDateTime_validDateTime_returnsFormattedString() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"pohanson"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2025, 1, 1, 12, 0);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"pohanson"},"content":"        String result \u003d Task.formatDateTime(dateTime);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"01 Jan 2025 12:00\", result);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"pohanson"},"content":"    public void toInputStringDateTime_validDateTime_returnsInputFormat() {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"pohanson"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2025, 1, 1, 12, 0);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"pohanson"},"content":"        String result \u003d Task.toInputStringDateTime(dateTime);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"01/01/2025 1200\", result);","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"pohanson"},"content":"    // Task input string conversion tests","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"pohanson"},"content":"    public void toInputString_todoTask_returnsOriginalInput() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"todo read book\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"todo read book\", task.toInputString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"pohanson"},"content":"    public void toInputString_deadlineTask_returnsOriginalInput() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"deadline return book /by 01/01/2025 1200\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"deadline return book /by 01/01/2025 1200\", task.toInputString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"pohanson"},"content":"","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"pohanson"},"content":"    @Test","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"pohanson"},"content":"    public void toInputString_eventTask_returnsOriginalInput() throws InvalidInputException {","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"pohanson"},"content":"        Task task \u003d Task.createFromString(\"event meeting /from 01/01/2025 1200 /to 01/01/2025 1400\");","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"pohanson"},"content":"        assertEquals(\"event meeting /from 01/01/2025 1200 /to 01/01/2025 1400\", task.toInputString());","lastModifiedDate":"2025-09-17T21:34:04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"pohanson"},"content":"    }","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"pohanson"},"content":"}","lastModifiedDate":"2025-08-29T14:27:06","isFullCredit":false}],"authorContributionMap":{"pohanson":248}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pohanson"},"content":"list","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"pohanson"},"content":"todo borrow money","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"pohanson"},"content":"event lecture /from Thursday 2pm /to 4pm","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"pohanson"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"pohanson"},"content":"list","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"pohanson"},"content":"mark 8","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"pohanson"},"content":"mark 2","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"pohanson"},"content":"list","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"pohanson"},"content":"mark 1","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"pohanson"},"content":"unmark 2","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"pohanson"},"content":"list","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"pohanson"},"content":"event lec /from /to 1am","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"pohanson"},"content":"deadline /by sun","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"pohanson"},"content":"todo","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"pohanson"},"content":"blahblahblah","lastModifiedDate":"2025-08-21T00:04:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"pohanson"},"content":"delete 2","lastModifiedDate":"2025-08-21T00:17:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"pohanson"},"content":"list","lastModifiedDate":"2025-08-21T00:17:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"bye","lastModifiedDate":"2025-08-20T23:19:15","isFullCredit":false}],"authorContributionMap":{"pohanson":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"pohanson"},"content":"java -classpath ..\\bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-19T01:15:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"pohanson":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"pohanson"},"content":"java -classpath ../bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-19T01:15:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"pohanson":1,"-":37}}]
