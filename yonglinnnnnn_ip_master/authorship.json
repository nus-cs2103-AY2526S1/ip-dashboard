[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-31T19:49:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"checkstyle {","lastModifiedDate":"2025-08-31T19:49:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-08-31T19:49:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T19:49:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T19:49:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"//    mainClass.set(\"megabot.Megabot\")","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"    archiveBaseName \u003d \"megabot\"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":24,"-":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"T | 0 | read book","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"D | 0 | return book | 2023-12-01 0000","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"T | 0 | task","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":3}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    @FXML","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    @FXML","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"        try {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"    private void flip() {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"    public static DialogBox getMegaBotDialog(String text, Image img) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"        db.flip();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"        return db;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":58}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"public class Launcher {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.MegaBot;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"    private final MegaBot megabot \u003d new MegaBot(\"./data/duke.txt\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"    @Override","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"        try {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMegaBot(megabot); // inject the instance","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"            stage.show();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.MegaBot;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"    @FXML","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"    @FXML","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"    @FXML","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    @FXML","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"    private MegaBot megabot;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"    private Image megabotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"    @FXML","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"    /** Injects the MegaBot instance */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"    public void setMegaBot(MegaBot m) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"        megabot \u003d m;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"     * Creates two dialog boxes, one echoing user input and","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"     * the other containing MegaBot\u0027s reply and then appends them to","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"    @FXML","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"        String response \u003d megabot.getResponse(input);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"                DialogBox.getMegaBotDialog(response, megabotImage)","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"        );","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":53}},{"path":"src/main/java/megabot/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":" * Enumeration of all possible commands that can be executed in the MegaBot application.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":" * Each command has an associated text representation that users can type.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":" *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":" * @author Xu Yong Lin","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":" * @version 1.0","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"public enum Command {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"    LIST(\"list\"),","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"    FIND(\"find\"),","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    UNKNOWN(\"\");","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    private final String commandText;","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"     * Constructs a Command enum with the associated command text.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param commandText the text representation of the command","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"    Command(String commandText) {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"        this.commandText \u003d commandText;","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the text representation of the command.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the command text","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getCommandText() {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"        return this.commandText;","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"     * Parses a user input string and returns the corresponding Command.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles case-insensitive matching and commands with arguments.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param input the user input string to parse","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the corresponding Command enum, or UNKNOWN if no match is found","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"    public static Command fromString(String input) {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"            return UNKNOWN;","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"        String lowerInput \u003d input.toLowerCase().trim();","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"        // Check for exact match first (for commands like \"list\", \"bye\")","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"        if (lowerInput.equals(\"list\") || lowerInput.equals(\"bye\")) {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"            return fromExactMatch(lowerInput);","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"        // Check if input starts with command word followed by space","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"        for (Command cmd : Command.values()) {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"            if (cmd !\u003d UNKNOWN \u0026\u0026 cmd !\u003d LIST \u0026\u0026 cmd !\u003d BYE) {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"                if (lowerInput.startsWith(cmd.commandText + \" \") || lowerInput.equals(cmd.commandText)) {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"                    return cmd;","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"                }","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"            }","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"        return UNKNOWN;","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"     * Helper method to find exact command matches.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param input the normalized input string","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the matching Command or UNKNOWN if no exact match is found","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"    private static Command fromExactMatch(String input) {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"        for (Command cmd: Command.values()) {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"            if (input.equals(cmd.commandText)) {","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"                return cmd;","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"            }","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"        return UNKNOWN;","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-21T12:17:23","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":88}},{"path":"src/main/java/megabot/GuiUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Deadline;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Event;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Task;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.ToDo;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":" * GUI-adapted version of Ui that returns formatted strings instead of printing to console.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":" * Reuses all the formatting logic from the original Ui class.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"public class GuiUi {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the welcome message as a formatted string.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the welcome message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"Hello from MegaBot!\\n\" + \"\\nWhat can I do for you today?\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the goodbye message as a formatted string.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the goodbye message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns a formatted string when a task is successfully added.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param totalTasks the total number of tasks in the list after adding","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted confirmation message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getTaskAddedMessage(Task task, int totalTasks) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"                task.toString(), totalTasks);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns a formatted string when a task is marked as done.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task that was marked as done","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted confirmation message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getTaskMarkedMessage(Task task) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task.toString();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns a formatted string when a task is unmarked.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task that was unmarked","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted confirmation message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getTaskUnmarkedMessage(Task task) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task.toString();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns a formatted string showing the complete list of tasks.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param tasks the TaskList containing all tasks to display","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted task list","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getTaskListMessage(TaskList tasks) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"            return \"Your task list is empty!\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"            sb.append(String.format(\"%d. %s\\n\", i + 1, tasks.getTask(i).toString()));","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns a formatted string when a task is deleted.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param totalTasks the total number of tasks remaining in the list","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted confirmation message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getTaskDeletedMessage(Task task, int totalTasks) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"                task.toString(), totalTasks);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns a formatted error message for invalid commands.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return error message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getInvalidCommandMessage() {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns a formatted error message.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param message the error message to format","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted error message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getErrorMessage(String message) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"OOPS!!! \" + message;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns a formatted string for loading error.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return loading error message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getLoadingErrorMessage() {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"Error loading tasks from file. Starting with empty task list.\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns a formatted string showing matching tasks from find command.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param tasks the TaskList containing matching tasks","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted search results","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getFindResultsMessage(TaskList tasks) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yonglinnnnnn"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yonglinnnnnn"},"content":"            return \"No matching tasks found in your list.\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yonglinnnnnn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yonglinnnnnn"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yonglinnnnnn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yonglinnnnnn"},"content":"            sb.append(String.format(\"%d. %s\\n\", i + 1, tasks.getTask(i).toString()));","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yonglinnnnnn"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yonglinnnnnn"},"content":"     * Determines the display string for different task types.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task whose type string is needed","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return a string representing the task type for display purposes","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yonglinnnnnn"},"content":"    private String getTaskTypeString(Task task) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yonglinnnnnn"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yonglinnnnnn"},"content":"            return \"Todo\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yonglinnnnnn"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yonglinnnnnn"},"content":"            return \"Deadline\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yonglinnnnnn"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yonglinnnnnn"},"content":"            return \"Event\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"Task\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":146}},{"path":"src/main/java/megabot/MegaBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.exception.InvalidTaskException;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Deadline;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Event;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Task;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.ToDo;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":" * Main class for the MegaBot task management application.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":" * Manages the interaction between the user interface, task storage, and task operations.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":" *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":" * @author Xu Yong Lin","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":" * @version 1.0","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"public class MegaBot {","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-31T18:51:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-31T18:51:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"    private GuiUi guiUi;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"     * Constructs a MegaBot instance with the specified file path for task storage.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param filePath the path to the file where tasks are stored","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"    public MegaBot(String filePath) {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"        guiUi \u003d new GuiUi();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"        try {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"     * Default constructor that uses the default file path.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"    public MegaBot() {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"        this(\"data/duke.txt\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"     * Generates a response for the user\u0027s input (for GUI use).","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"     * This method processes user commands and returns appropriate responses.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param input the user input string","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the response message from MegaBot","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"        try {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"            return handleCommandForGui(input);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"            return e.getMessage();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"        } finally {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"            // Save tasks after each command (for GUI)","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"            saveTasksToFile();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles commands and returns response strings (for GUI use).","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input string","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the response message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if there\u0027s an error processing the command","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"    private String handleCommandForGui(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"            return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"        Command cmd \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"        switch (cmd) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"        case LIST:","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"            return getTaskListString();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"        case TODO:","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"            return handleTodoCommandForGui(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"        case DEADLINE:","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"            return handleDeadlineCommandForGui(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"        case EVENT:","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yonglinnnnnn"},"content":"            return handleEventCommandForGui(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yonglinnnnnn"},"content":"        case MARK:","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yonglinnnnnn"},"content":"            return handleMarkCommandForGui(userInput, true);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yonglinnnnnn"},"content":"        case UNMARK:","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yonglinnnnnn"},"content":"            return handleMarkCommandForGui(userInput, false);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yonglinnnnnn"},"content":"        case DELETE:","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yonglinnnnnn"},"content":"            return handleDeleteCommandForGui(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yonglinnnnnn"},"content":"        case FIND:","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yonglinnnnnn"},"content":"            return handleFindCommandForGui(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yonglinnnnnn"},"content":"        case UNKNOWN:","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yonglinnnnnn"},"content":"        default:","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! I can\u0027t create a task because \"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yonglinnnnnn"},"content":"                    + \"I don\u0027t understand what task you\u0027re talking about :-(\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns a formatted string of all tasks.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted task list string","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yonglinnnnnn"},"content":"    private String getTaskListString() {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yonglinnnnnn"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yonglinnnnnn"},"content":"            return \"You have no tasks in your list.\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yonglinnnnnn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yonglinnnnnn"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yonglinnnnnn"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yonglinnnnnn"},"content":"            sb.append((i + 1)).append(\".\").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yonglinnnnnn"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles the creation of a new todo task for GUI.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the todo command and description","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return response message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the todo description is empty","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yonglinnnnnn"},"content":"    private String handleTodoCommandForGui(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yonglinnnnnn"},"content":"        String taskDescription \u003d Parser.removeFirstWord(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yonglinnnnnn"},"content":"        if (taskDescription.trim().isEmpty()) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! The description of todo cannot be empty.\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yonglinnnnnn"},"content":"        ToDo todo \u003d new ToDo(taskDescription);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + todo + \"\\n\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yonglinnnnnn"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles the creation of a new deadline task for GUI.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the deadline command and parameters","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return response message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the deadline format is invalid","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yonglinnnnnn"},"content":"    private String handleDeadlineCommandForGui(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yonglinnnnnn"},"content":"        String taskContent \u003d Parser.removeFirstWord(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yonglinnnnnn"},"content":"        String[] parts \u003d Parser.parseDeadline(taskContent);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + deadline + \"\\n\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yonglinnnnnn"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles the creation of a new event task for GUI.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the event command and parameters","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return response message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the event format is invalid","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yonglinnnnnn"},"content":"    private String handleEventCommandForGui(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yonglinnnnnn"},"content":"        String taskContent \u003d Parser.removeFirstWord(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yonglinnnnnn"},"content":"        String[] parts \u003d Parser.parseEvent(taskContent);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yonglinnnnnn"},"content":"        Event event \u003d new Event(parts[0], parts[1], parts[2]);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.addTask(event);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + event + \"\\n\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yonglinnnnnn"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles marking or unmarking a task as done for GUI.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the mark/unmark command and task number","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param markAsDone true to mark as done, false to mark as undone","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return response message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the task number is invalid","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"yonglinnnnnn"},"content":"    private String handleMarkCommandForGui(String userInput, boolean markAsDone) throws InvalidTaskException {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yonglinnnnnn"},"content":"        int taskNumber \u003d Parser.parseTaskNumber(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yonglinnnnnn"},"content":"        int taskIndex \u003d taskNumber - 1; // Convert to 0-based index","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yonglinnnnnn"},"content":"        if (!tasks.isValidIndex(taskIndex)) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! Task number \" + taskNumber + \" does not exist.\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"yonglinnnnnn"},"content":"        if (markAsDone) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"yonglinnnnnn"},"content":"            tasks.markTask(taskIndex);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"yonglinnnnnn"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + tasks.getTask(taskIndex);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"yonglinnnnnn"},"content":"        } else {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"yonglinnnnnn"},"content":"            tasks.unmarkTask(taskIndex);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"yonglinnnnnn"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\" + tasks.getTask(taskIndex);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles the deletion of a task for GUI.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the delete command and task number","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return response message","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the task number is invalid","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"yonglinnnnnn"},"content":"    private String handleDeleteCommandForGui(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"yonglinnnnnn"},"content":"        int taskNumber \u003d Parser.parseTaskNumber(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"yonglinnnnnn"},"content":"        int taskIndex \u003d taskNumber - 1; // Convert to 0-based index","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"yonglinnnnnn"},"content":"        if (!tasks.isValidIndex(taskIndex)) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! Task number \" + taskNumber + \" does not exist.\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"yonglinnnnnn"},"content":"        Task deletedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.deleteTask(taskIndex);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + deletedTask + \"\\n\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"yonglinnnnnn"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list\";","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles the search for tasks containing a keyword for GUI.","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the find command and keyword","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return response message with found tasks","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if no keyword is provided","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"yonglinnnnnn"},"content":"    private String handleFindCommandForGui(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"yonglinnnnnn"},"content":"        String keyword \u003d Parser.parseFindKeyword(userInput);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"yonglinnnnnn"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"yonglinnnnnn"},"content":"            return \"No matching tasks found for keyword: \" + keyword;","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"yonglinnnnnn"},"content":"        } else {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"yonglinnnnnn"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"yonglinnnnnn"},"content":"            sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"yonglinnnnnn"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"yonglinnnnnn"},"content":"                sb.append((i + 1)).append(\".\").append(foundTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"yonglinnnnnn"},"content":"            }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"yonglinnnnnn"},"content":"            return sb.toString().trim();","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"yonglinnnnnn"},"content":"     * Runs the main application loop.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays welcome message, processes user commands, and handles cleanup.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"yonglinnnnnn"},"content":"    public void run() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"yonglinnnnnn"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"yonglinnnnnn"},"content":"        String userInput \u003d ui.readCommand();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"yonglinnnnnn"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"yonglinnnnnn"},"content":"            try {","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"yonglinnnnnn"},"content":"                ui.printDivider();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"yonglinnnnnn"},"content":"                handleCommand(userInput);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"yonglinnnnnn"},"content":"            } catch (InvalidTaskException e) {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"yonglinnnnnn"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"yonglinnnnnn"},"content":"            } finally {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"yonglinnnnnn"},"content":"                ui.printDivider();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"yonglinnnnnn"},"content":"                userInput \u003d ui.readCommand();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"yonglinnnnnn"},"content":"            }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"yonglinnnnnn"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"yonglinnnnnn"},"content":"        ui.close();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"yonglinnnnnn"},"content":"        saveTasksToFile();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles user command","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"yonglinnnnnn"},"content":"    public void handleCommand(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"yonglinnnnnn"},"content":"        Command cmd \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"yonglinnnnnn"},"content":"        switch (cmd) {","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"yonglinnnnnn"},"content":"        case LIST:","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"yonglinnnnnn"},"content":"            ui.showTaskList(tasks.getTasks());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"yonglinnnnnn"},"content":"        case TODO:","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"yonglinnnnnn"},"content":"            handleTodoCommand(userInput);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"yonglinnnnnn"},"content":"        case DEADLINE:","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"yonglinnnnnn"},"content":"            handleDeadlineCommand(userInput);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"yonglinnnnnn"},"content":"        case EVENT:","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"yonglinnnnnn"},"content":"            handleEventCommand(userInput);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"yonglinnnnnn"},"content":"        case MARK:","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"yonglinnnnnn"},"content":"            handleMarkCommand(userInput, true);","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"yonglinnnnnn"},"content":"        case UNMARK:","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"yonglinnnnnn"},"content":"            handleMarkCommand(userInput, false);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"yonglinnnnnn"},"content":"        case DELETE:","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"yonglinnnnnn"},"content":"            handleDeleteCommand(userInput);","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"yonglinnnnnn"},"content":"        case FIND:","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"yonglinnnnnn"},"content":"            handleFindCommand(userInput);","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"yonglinnnnnn"},"content":"        case UNKNOWN:","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"yonglinnnnnn"},"content":"        default:","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! I can\u0027t create a task because \"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"yonglinnnnnn"},"content":"                + \"I don\u0027t understand what task you\u0027re talking about :-(\");","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles the creation of a new todo task.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the todo command and description","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the todo description is empty","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"yonglinnnnnn"},"content":"    private void handleTodoCommand(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"yonglinnnnnn"},"content":"        String taskDescription \u003d Parser.removeFirstWord(userInput);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"yonglinnnnnn"},"content":"        if (taskDescription.trim().isEmpty()) {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! The description of todo cannot be empty.\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"yonglinnnnnn"},"content":"        ToDo todo \u003d new ToDo(taskDescription);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"yonglinnnnnn"},"content":"        ui.showTaskAdded(todo, tasks.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles the creation of a new deadline task.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the deadline command and parameters","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the deadline format is invalid","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"yonglinnnnnn"},"content":"    private void handleDeadlineCommand(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"yonglinnnnnn"},"content":"        String taskContent \u003d Parser.removeFirstWord(userInput);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"yonglinnnnnn"},"content":"        String[] parts \u003d Parser.parseDeadline(taskContent);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"yonglinnnnnn"},"content":"        ui.showTaskAdded(deadline, tasks.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles the creation of a new event task.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the event command and parameters","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the event format is invalid","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"yonglinnnnnn"},"content":"    private void handleEventCommand(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"yonglinnnnnn"},"content":"        String taskContent \u003d Parser.removeFirstWord(userInput);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"yonglinnnnnn"},"content":"        String[] parts \u003d Parser.parseEvent(taskContent);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"yonglinnnnnn"},"content":"        Event event \u003d new Event(parts[0], parts[1], parts[2]);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.addTask(event);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"yonglinnnnnn"},"content":"        ui.showTaskAdded(event, tasks.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles marking or unmarking a task as done.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the mark/unmark command and task number","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param markAsDone true to mark as done, false to mark as undone","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the task number is invalid","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"yonglinnnnnn"},"content":"    private void handleMarkCommand(String userInput, boolean markAsDone) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"yonglinnnnnn"},"content":"        int taskNumber \u003d Parser.parseTaskNumber(userInput);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"yonglinnnnnn"},"content":"        int taskIndex \u003d taskNumber - 1; // Convert to 0-based index","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"yonglinnnnnn"},"content":"        if (!tasks.isValidIndex(taskIndex)) {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! Task number \" + taskNumber + \" does not exist.\");","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"yonglinnnnnn"},"content":"        if (markAsDone) {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"yonglinnnnnn"},"content":"            tasks.markTask(taskIndex);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"yonglinnnnnn"},"content":"            ui.showTaskMarked(tasks.getTask(taskIndex));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"yonglinnnnnn"},"content":"        } else {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"yonglinnnnnn"},"content":"            tasks.unmarkTask(taskIndex);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"yonglinnnnnn"},"content":"            ui.showTaskUnmarked(tasks.getTask(taskIndex));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles the deletion of a task.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the delete command and task number","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the task number is invalid","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"yonglinnnnnn"},"content":"    private void handleDeleteCommand(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"yonglinnnnnn"},"content":"        int taskNumber \u003d Parser.parseTaskNumber(userInput);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"yonglinnnnnn"},"content":"        int taskIndex \u003d taskNumber - 1; // Convert to 0-based index","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"yonglinnnnnn"},"content":"        if (!tasks.isValidIndex(taskIndex)) {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! Task number \" + taskNumber + \" does not exist.\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"yonglinnnnnn"},"content":"        Task deletedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.deleteTask(taskIndex);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"yonglinnnnnn"},"content":"        ui.showTaskDeleted(deletedTask, tasks.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"yonglinnnnnn"},"content":"     * Handles the search for tasks containing a keyword.","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the find command and keyword","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if no keyword is provided","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"yonglinnnnnn"},"content":"    private void handleFindCommand(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"yonglinnnnnn"},"content":"        String keyword \u003d Parser.parseFindKeyword(userInput);","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"yonglinnnnnn"},"content":"        ui.showFoundTasks(foundTasks, keyword);","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"yonglinnnnnn"},"content":"     * Saves all tasks to the storage file.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"yonglinnnnnn"},"content":"    private void saveTasksToFile() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"yonglinnnnnn"},"content":"        try {","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"yonglinnnnnn"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"yonglinnnnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"yonglinnnnnn"},"content":"            ui.showError(\"An error occurred when writing to file: \" + e.getMessage());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"yonglinnnnnn"},"content":"     * Main entry point of the application.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param args command line arguments (not used)","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"yonglinnnnnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"yonglinnnnnn"},"content":"        new MegaBot(\"data/duke.txt\").run();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":433}},{"path":"src/main/java/megabot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.exception.InvalidTaskException;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":" * Parses user input and extracts meaningful components for command execution.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":" * Provides utility methods to parse commands, task numbers, and task parameters.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":" *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":" * @author Xu Yong Lin","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":" * @version 1.0","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"public class Parser {","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"     * Parses the user input to determine the command type.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the raw user input string","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the Command enum corresponding to the user input","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    public static Command parseCommand(String userInput) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"        return Command.fromString(userInput);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"     * Removes the first word from a string and returns the remainder.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"     * Used to extract command arguments from user input.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param str the input string","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the string with the first word removed, or empty string if no space found","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"    public static String removeFirstWord(String str) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        int index \u003d str.indexOf(\u0027 \u0027);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"            return \"\";","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"        return str.substring(index + 1);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"     * Parses and extracts a task number from user input.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"     * Expected format: \"command taskNumber\"","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing a command and task number","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the parsed task number","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if no task number is provided or if it\u0027s not a valid integer","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"    public static int parseTaskNumber(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"        String[] str \u003d userInput.split(\" \");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"        if (str.length \u003c 2) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! Please specify a task number.\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"        try {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"            return Integer.parseInt(str[1]);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! Please provide a valid task number.\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"     * Parses deadline command parameters.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"     * Expected format: \"description /by date\"","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task portion of the deadline command","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return a String array where [0] is description and [1] is the deadline","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the format is incorrect or components are empty","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"    public static String[] parseDeadline(String task) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"        String[] parts \u003d task.split(\" /(?:by) \");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"        if (parts.length !\u003d 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! Please use format: deadline \u003ctask\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"        return parts;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"     * Parses event command parameters.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"     * Expected format: \"description /from start /to end\"","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task portion of the event command","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return a String array where [0] is description, [1] is start, and [2] is end","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the format is incorrect or components are empty","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"    public static String[] parseEvent(String task) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"        if (task.trim().isEmpty()) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! The description of an event cannot be empty.\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yonglinnnnnn"},"content":"        String[] parts \u003d task.split(\" /(?:from|to) \");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yonglinnnnnn"},"content":"        if (parts.length !\u003d 3 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty() || parts[2].trim().isEmpty()) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! Please use format: event \u003ctask\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yonglinnnnnn"},"content":"        return parts;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yonglinnnnnn"},"content":"     * Parses the keyword from a find command.","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yonglinnnnnn"},"content":"     * Expected format: \"find keyword\"","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param userInput the user input containing the find command and keyword","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the keyword to search for","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if no keyword is provided","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yonglinnnnnn"},"content":"    public static String parseFindKeyword(String userInput) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yonglinnnnnn"},"content":"        String keyword \u003d removeFirstWord(userInput);","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yonglinnnnnn"},"content":"        if (keyword.trim().isEmpty()) {","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! Please specify a keyword to search for.\");","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yonglinnnnnn"},"content":"        return keyword.trim();","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":114}},{"path":"src/main/java/megabot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import java.io.File;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.exception.InvalidTaskException;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Deadline;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Event;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Task;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.ToDo;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":" * Handles the loading and saving of tasks to and from a file.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":" * Manages file I/O operations and task serialization/deserialization.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":" *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":" * @author Xu Yong Lin","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":" * @version 1.0","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"public class Storage {","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param filePath the path to the file where tasks are stored","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"     * If the file does not exist, returns an empty list.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return an ArrayList of tasks loaded from the file","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if there is an error parsing tasks from the file","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"    public ArrayList\u003cTask\u003e load() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"        try {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"                Task task \u003d parseTaskFromFile(line);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"                }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"            }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"            scanner.close();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"            // If file doesn\u0027t exist, return empty list","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"            // The file will be created when we save tasks","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"        return tasks;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"     * Creates the directory structure if it doesn\u0027t exist.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"        // Create directory if it doesn\u0027t exist","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"            writer.write(task.formatData());","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"            writer.write(\"\\n\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"        writer.close();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yonglinnnnnn"},"content":"     * Parses a task from a line of text in the file format.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yonglinnnnnn"},"content":"     * Expected format: \"TYPE | STATUS | DESCRIPTION [| ADDITIONAL_INFO]\"","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param line the line of text to parse","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the parsed Task object, or null if the line is invalid","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if there is an error creating the task","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yonglinnnnnn"},"content":"    private Task parseTaskFromFile(String line) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yonglinnnnnn"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yonglinnnnnn"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yonglinnnnnn"},"content":"            return null; // Skip invalid lines","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yonglinnnnnn"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yonglinnnnnn"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yonglinnnnnn"},"content":"        String taskDescription \u003d parts[2];","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yonglinnnnnn"},"content":"        switch (taskType) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yonglinnnnnn"},"content":"        case \"T\":","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yonglinnnnnn"},"content":"            task \u003d new ToDo(taskDescription);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yonglinnnnnn"},"content":"        case \"D\":","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yonglinnnnnn"},"content":"            if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yonglinnnnnn"},"content":"                task \u003d new Deadline(taskDescription, parts[3]);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yonglinnnnnn"},"content":"            }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yonglinnnnnn"},"content":"        case \"E\":","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yonglinnnnnn"},"content":"            if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yonglinnnnnn"},"content":"                // Parse the duration string (start-end format)","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yonglinnnnnn"},"content":"                String[] dateParts \u003d parts[3].split(\"-\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yonglinnnnnn"},"content":"                if (dateParts.length \u003e\u003d 2) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yonglinnnnnn"},"content":"                    task \u003d new Event(taskDescription, dateParts[0], dateParts[1]);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yonglinnnnnn"},"content":"                }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yonglinnnnnn"},"content":"            }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yonglinnnnnn"},"content":"        default:","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yonglinnnnnn"},"content":"            break;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yonglinnnnnn"},"content":"        if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yonglinnnnnn"},"content":"            task.markAsDone();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yonglinnnnnn"},"content":"        return task;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":138}},{"path":"src/main/java/megabot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.exception.InvalidTaskException;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Task;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":" * Represents a collection of tasks with operations to manage them.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":" * Provides methods to add, delete, mark, and retrieve tasks.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":" *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":" * @author Xu Yong Lin","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":" * @version 1.0","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"public class TaskList {","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param tasks the initial list of tasks","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task to be added","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"     * Deletes a task at the specified index.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param index the index of the task to delete (0-based)","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the index is out of bounds","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"    public void deleteTask(int index) throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"        if (index \u003c 0 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"Please give a valid number to delete the task from!!\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"        if (index \u003c tasks.size()) {","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"            tasks.remove(index);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param index the index of the task to retrieve (0-based)","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the task at the specified index, or null if index is invalid","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"            return tasks.get(index);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"        return null;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param index the index of the task to mark (0-based)","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"            task.markAsDone();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"     * Marks the task at the specified index as not done.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param index the index of the task to unmark (0-based)","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yonglinnnnnn"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yonglinnnnnn"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yonglinnnnnn"},"content":"            task.markAsUndone();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yonglinnnnnn"},"content":"    public int size() {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yonglinnnnnn"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yonglinnnnnn"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return true if the task list is empty, false otherwise","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yonglinnnnnn"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yonglinnnnnn"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the underlying ArrayList of tasks.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the list of tasks","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yonglinnnnnn"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yonglinnnnnn"},"content":"        return tasks;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yonglinnnnnn"},"content":"     * Checks if the given index is valid for the current task list.","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param index the index to check","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return true if the index is valid, false otherwise","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:18:20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yonglinnnnnn"},"content":"    public boolean isValidIndex(int index) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yonglinnnnnn"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yonglinnnnnn"},"content":"     * Finds all tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yonglinnnnnn"},"content":"     * The search is case-insensitive.","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param keyword the keyword to search for","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return an ArrayList of tasks that contain the keyword","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yonglinnnnnn"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yonglinnnnnn"},"content":"        String lowerKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yonglinnnnnn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yonglinnnnnn"},"content":"            if (task.getTask().toLowerCase().contains(lowerKeyword)) {","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yonglinnnnnn"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yonglinnnnnn"},"content":"            }","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yonglinnnnnn"},"content":"        return matchingTasks;","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":156}},{"path":"src/main/java/megabot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Task;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":" * Handles all user interface interactions for the MegaBot application.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":" * Manages input reading and output display for various application states.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":" *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":" * @author Xu Yong Lin","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":" * @version 1.0","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"public class Ui {","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"     * Constructs a Ui object and initializes the scanner for user input.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    public Ui() {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"        printDivider();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"        String intro \u003d \"Hello! I\u0027m MegaBot\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(intro);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"        printDivider();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays the goodbye message when the application exits.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"        printDivider();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"        printDivider();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"     * Reads a line of user input from the console.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the user input as a string","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(message);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays an error message when tasks cannot be loaded from file.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(\"Error loading tasks from file. Starting with empty task list.\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays a confirmation message when a task is successfully added.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param totalTasks the total number of tasks after addition","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"        showTaskCount(totalTasks);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays a confirmation message when a task is marked as done.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task that was marked","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays a confirmation message when a task is unmarked.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task that was unmarked","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yonglinnnnnn"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays a confirmation message when a task is deleted.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param totalTasks the total number of tasks after deletion","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yonglinnnnnn"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yonglinnnnnn"},"content":"        showTaskCount(totalTasks);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays all tasks in the task list with their indices.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param tasks the list of tasks to display","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yonglinnnnnn"},"content":"    public void showTaskList(java.util.ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yonglinnnnnn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yonglinnnnnn"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays the search results for tasks matching a keyword.","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param tasks the list of matching tasks to display","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param keyword the keyword that was searched for","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yonglinnnnnn"},"content":"    public void showFoundTasks(java.util.ArrayList\u003cTask\u003e tasks, String keyword) {","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yonglinnnnnn"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yonglinnnnnn"},"content":"            System.out.println(\"No matching tasks found for keyword: \" + keyword);","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yonglinnnnnn"},"content":"        } else {","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yonglinnnnnn"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yonglinnnnnn"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yonglinnnnnn"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yonglinnnnnn"},"content":"            }","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T19:09:28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yonglinnnnnn"},"content":"     * Displays the current number of tasks in the list.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param count the number of tasks","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yonglinnnnnn"},"content":"    private void showTaskCount(int count) {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.printf(\"Now you have %d tasks in the list%n\", count);","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yonglinnnnnn"},"content":"     * Prints a visual divider line to separate sections of output.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yonglinnnnnn"},"content":"    public void printDivider() {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yonglinnnnnn"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yonglinnnnnn"},"content":"     * Closes the scanner to release resources.","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:23:35","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yonglinnnnnn"},"content":"    public void close() {","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yonglinnnnnn"},"content":"        scanner.close();","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T10:44:51","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":165}},{"path":"src/main/java/megabot/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot.exception;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":" * Exception thrown when there is an error with task creation, parsing, or manipulation.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":" * This custom exception is used throughout the MegaBot application to handle","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":" * task-related errors in a consistent manner.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":" *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":" * @author Xu Yong Lin","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":" * @version 1.0","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2025-08-21T00:22:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"     * Constructs an InvalidTaskException with the specified error message.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param msg the error message describing what went wrong","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"    public InvalidTaskException(String msg) {","lastModifiedDate":"2025-08-21T00:22:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"        super(msg);","lastModifiedDate":"2025-08-21T00:22:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-21T00:22:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-21T00:22:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    @Override","lastModifiedDate":"2025-08-21T00:22:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T00:22:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"        return super.getMessage();","lastModifiedDate":"2025-08-21T00:22:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-21T00:22:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-21T00:22:11","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":25}},{"path":"src/main/java/megabot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot.task;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.exception.InvalidTaskException;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":" * A deadline task has a description and a specific date/time by which it should be completed.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":" * Supports two date formats: \"yyyy-MM-dd\" (date only) and \"yyyy-MM-dd HHmm\" (date with time).","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":" *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":" * @author Xu Yong Lin","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":" * @version 1.0","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-20T22:59:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    private final String stringDeadline;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"     * Constructs a Deadline task with the specified description and deadline.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the description of the deadline task","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param ddl the deadline in format \"yyyy-MM-dd\" or \"yyyy-MM-dd HHmm\"","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if the deadline format is invalid","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"    public Deadline(String task, String ddl) throws InvalidTaskException {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"        super(task);","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        this.stringDeadline \u003d ddl;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"        LocalDateTime parsedDueDate;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"        try {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"            parsedDueDate \u003d LocalDateTime.parse(ddl, dateTimeFormatter);","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"            try {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"                parsedDueDate \u003d LocalDateTime.of(LocalDate.parse(ddl, dateFormatter), LocalTime.MIDNIGHT);","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"                throw new InvalidTaskException(\"OOPSIE!! The deadline format is invalid. \"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"                        + \"Please use YYYY-MM-DD or YYYY-MM-DD HHMM format.\");","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"            }","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"        this.deadline \u003d parsedDueDate;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the original deadline string as provided by the user.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the original deadline string","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getStringDeadline() {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"        return this.stringDeadline;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the parsed deadline as a LocalDateTime object.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the deadline as LocalDateTime","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"        return this.deadline;","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"    @Override","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"[D]\" + this.getStatusIcon() + \" \" + super.getTask() + \" (by: \"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"                + this.getDeadline().format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the deadline task data in a format suitable for file storage.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"     * Format: \"D | STATUS | DESCRIPTION | DEADLINE\"","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted string for file storage","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"    public String formatData() {","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"D | \" + super.formatData() + \" | \" + this.getStringDeadline();","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":88}},{"path":"src/main/java/megabot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot.task;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.exception.InvalidTaskException;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":" * Represents a task that occurs during a specific time period.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":" * An event task extends Deadline and has both a start date and an end date.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":" * The start date format should be \"yyyy-MM-dd\" and end date follows the Deadline format.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":" *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":" * @author Xu Yong Lin","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":" * @version 1.0","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"public class Event extends Deadline {","lastModifiedDate":"2025-08-20T22:59:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"    private final String stringStartDateTime;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"    private final LocalDate startDateTime;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"     * Constructs an Event task with the specified description, start date, and end date.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the description of the event task","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param startDT the start date in format \"yyyy-MM-dd\"","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param ddl the end date in format \"yyyy-MM-dd\" or \"yyyy-MM-dd HHmm\"","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"     * @throws InvalidTaskException if either date format is invalid","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"    public Event(String task, String startDT, String ddl) throws InvalidTaskException {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"        super(task, ddl);","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"        this.stringStartDateTime \u003d startDT;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        try {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"            this.startDateTime \u003d LocalDate.parse(startDT, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"            throw new InvalidTaskException(\"OOPSIE!! The start date format is invalid. Please use YYYY-MM-DD format.\");","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"        }","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the original start date string as provided by the user.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the original start date string","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getStringStartDateTime() {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"        return this.stringStartDateTime;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the parsed start date as a LocalDate object.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the start date as LocalDate","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"    public LocalDate getStartDateTime() {","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"        return this.startDateTime;","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the task duration string combining start and end dates.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"     * Format: \"startDate-endDateTime\"","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the duration string for file storage","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getTaskDuration() {","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"        return this.startDateTime + \"-\" + super.getDeadline();","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"    @Override","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"        String startDatetimeFormat \u003d this.getStartDateTime().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"        String endDatetimeFormat \u003d super.getDeadline().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T16:13:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"[E]\" + this.getStatusIcon() + \" \" + super.getTask() + \" (from: \"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"                + startDatetimeFormat + \" to: \" + endDatetimeFormat + \")\";","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the event task data in a format suitable for file storage.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"     * Format: \"E | STATUS | DESCRIPTION | DURATION\"","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted string for file storage","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"    public String formatData() {","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"        String str \u003d (super.getIsDone()) ? \"1\" : \"0\" + \" | \" + getTask();","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"E | \" + str + \" | \" + getTaskDuration();","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":88}},{"path":"src/main/java/megabot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot.task;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":" * This is the base class for all types of tasks in the MegaBot application.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":" *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":" * @author Xu Yong Lin","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":" * @version 1.0","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"public class Task {","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"    private final String task;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"    private Boolean isDone;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param task the description of the task","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    public Task(String task) {","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T21:45:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-20T21:45:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-20T21:45:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-20T21:45:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-20T21:45:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-08-20T21:45:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T21:45:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-20T21:45:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-20T21:45:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the status icon representation of the task.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return \"[X]\" if task is done, \"[ ]\" if not done","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-20T21:45:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-08-20T21:45:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the task description.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return the task description","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"    public String getTask() {","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"        return this.task;","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"    @Override","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"        return getStatusIcon() + \" \" + this.getTask();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the task data in a format suitable for file storage.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"     * Format: \"STATUS | DESCRIPTION\" where STATUS is \"1\" for done, \"0\" for not done.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted string for file storage","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"    public String formatData() {","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"        String status \u003d this.getIsDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"        return status + \" | \" + this.getTask();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-20T21:25:07","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":81}},{"path":"src/main/java/megabot/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot.task;","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T12:04:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"/**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":" * Represents a simple todo task without any time constraints.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":" * A todo task only has a description and completion status.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":" *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":" * @author Xu Yong Lin","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":" * @version 1.0","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":" */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"     * @param todo the description of the todo task","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"    public ToDo(String todo) {","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"        super(todo);","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    @Override","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"[T]\" + this.getStatusIcon() + \" \" + super.getTask();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"    /**","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"     * Returns the todo task data in a format suitable for file storage.","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"     * Format: \"T | STATUS | DESCRIPTION\"","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"     *","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"     * @return formatted string for file storage","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"     */","lastModifiedDate":"2025-08-31T18:31:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"    public String formatData() {","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        return \"T | \" + super.formatData();","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-28T10:49:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-20T22:16:54","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"            fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-01T00:51:39","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":43}},{"path":"src/test/java/megabot/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"class CommandTest {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"    void getCommandText_allCommands_returnCorrectText() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"list\", Command.LIST.getCommandText());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"todo\", Command.TODO.getCommandText());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"deadline\", Command.DEADLINE.getCommandText());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"event\", Command.EVENT.getCommandText());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"mark\", Command.MARK.getCommandText());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"unmark\", Command.UNMARK.getCommandText());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"delete\", Command.DELETE.getCommandText());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"bye\", Command.BYE.getCommandText());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"\", Command.UNKNOWN.getCommandText());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"    void fromString_exactMatch_returnsCorrectCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.LIST, Command.fromString(\"list\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.BYE, Command.fromString(\"bye\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.TODO, Command.fromString(\"todo\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.DEADLINE, Command.fromString(\"deadline\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.EVENT, Command.fromString(\"event\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.MARK, Command.fromString(\"mark\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNMARK, Command.fromString(\"unmark\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.DELETE, Command.fromString(\"delete\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"    void fromString_caseInsensitive_returnsCorrectCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.LIST, Command.fromString(\"LIST\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.BYE, Command.fromString(\"BYE\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.TODO, Command.fromString(\"TODO\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.DEADLINE, Command.fromString(\"DEADLINE\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"    void fromString_withArguments_returnsCorrectCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.TODO, Command.fromString(\"todo read book\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.DEADLINE, Command.fromString(\"deadline submit /by Sunday\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.EVENT, Command.fromString(\"event meeting /from Mon /to Tue\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.MARK, Command.fromString(\"mark 1\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNMARK, Command.fromString(\"unmark 2\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.DELETE, Command.fromString(\"delete 3\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"    void fromString_withWhitespace_returnsCorrectCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.LIST, Command.fromString(\" list \"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.BYE, Command.fromString(\" bye \"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.TODO, Command.fromString(\" todo read book \"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"    void fromString_invalidInput_returnsUnknown() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Command.fromString(\"invalid\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Command.fromString(\"xyz\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Command.fromString(\"123\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Command.fromString(\"\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Command.fromString(null));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Command.fromString(\"   \"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"    void fromString_listCommandWithArguments_returnsUnknown() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"        // list and bye commands should not accept arguments","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Command.fromString(\"list something\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Command.fromString(\"bye something\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"    void fromString_partialMatch_returnsUnknown() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Command.fromString(\"tod\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Command.fromString(\"deadlin\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Command.fromString(\"lis\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":82}},{"path":"src/test/java/megabot/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"import java.io.File;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.exception.InvalidTaskException;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Deadline;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Task;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.ToDo;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"class StorageTest {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"    @TempDir","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"    private Path tempDir;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"    void setUp() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        File testFile \u003d tempDir.resolve(\"test_tasks.txt\").toFile();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"        storage \u003d new Storage(testFile.getAbsolutePath());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"    void load_nonExistentFile_returnsEmptyList() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(tasks.isEmpty());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"    void load_invalidLines_skipsInvalidLines() throws IOException, InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"        File testFile \u003d tempDir.resolve(\"test_invalid.txt\").toFile();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"        FileWriter writer \u003d new FileWriter(testFile);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"        writer.write(\"T | 0 | valid task\\n\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"        writer.write(\"invalid line\\n\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"        writer.write(\"D | 1 | another valid task | 2023-12-01\\n\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"        writer.close();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"        Storage testStorage \u003d new Storage(testFile.getAbsolutePath());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d testStorage.load();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"    void save_emptyList_createsEmptyFile() throws IOException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"        // Verify file exists and is empty","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"        File testFile \u003d tempDir.resolve(\"test_tasks.txt\").toFile();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(testFile.exists());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(0, testFile.length());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"    void save_taskList_writesCorrectFormat() throws IOException, InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\", \"2023-12-01\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"        // Verify by loading back","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(2, loadedTasks.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"read book\", loadedTasks.get(0).getTask());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(loadedTasks.get(0).getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"submit assignment\", loadedTasks.get(1).getTask());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(loadedTasks.get(1).getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yonglinnnnnn"},"content":"    void save_createsDirectoryIfNotExists() throws IOException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yonglinnnnnn"},"content":"        File nonExistentDir \u003d tempDir.resolve(\"new_dir\").resolve(\"test.txt\").toFile();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yonglinnnnnn"},"content":"        Storage newStorage \u003d new Storage(nonExistentDir.getAbsolutePath());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yonglinnnnnn"},"content":"        tasks.add(new ToDo(\"test task\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yonglinnnnnn"},"content":"        // Should not throw exception","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yonglinnnnnn"},"content":"        assertDoesNotThrow(() -\u003e newStorage.save(tasks));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(nonExistentDir.exists());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_validFilePath_createsStorage() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yonglinnnnnn"},"content":"        Storage newStorage \u003d new Storage(\"test/path/file.txt\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yonglinnnnnn"},"content":"        assertNotNull(newStorage);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":109}},{"path":"src/test/java/megabot/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.exception.InvalidTaskException;","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.Task;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.task.ToDo;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"class TaskListTest {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    private Task task1;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    private Task task2;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"    void setUp() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"        task1 \u003d new ToDo(\"task 1\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"        task2 \u003d new ToDo(\"task 2\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_empty_createsEmptyTaskList() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_withExistingList_createsTaskListCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e existingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"        existingTasks.add(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"        existingTasks.add(task2);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"        TaskList newTaskList \u003d new TaskList(existingTasks);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(2, newTaskList.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(newTaskList.isEmpty());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(task1, newTaskList.getTask(0));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(task2, newTaskList.getTask(1));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"    void addTask_validTask_addsTaskCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(taskList.isEmpty());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(task1, taskList.getTask(0));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"    void addTask_multipleTasks_addsAllTasksCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(task1, taskList.getTask(0));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(task2, taskList.getTask(1));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"    void deleteTask_validIndex_deletesTaskCorrectly() throws InvalidTaskException {","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(task2, taskList.getTask(0));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"    void deleteTask_invalidIndex_doesNotDeleteAnything() throws InvalidTaskException {","lastModifiedDate":"2025-09-09T15:01:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"        int originalSize \u003d taskList.size();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.deleteTask(-1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.deleteTask(5);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(originalSize, taskList.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"    void getTask_validIndex_returnsCorrectTask() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(task1, taskList.getTask(0));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(task2, taskList.getTask(1));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yonglinnnnnn"},"content":"    void getTask_invalidIndex_returnsNull() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yonglinnnnnn"},"content":"        assertNull(taskList.getTask(-1));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yonglinnnnnn"},"content":"        assertNull(taskList.getTask(5));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yonglinnnnnn"},"content":"    void markTask_validIndex_marksTaskCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(task1.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.markTask(0);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(task1.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yonglinnnnnn"},"content":"    void markTask_invalidIndex_doesNothing() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(task1.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.markTask(-1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.markTask(5);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(task1.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yonglinnnnnn"},"content":"    void unmarkTask_validIndex_unmarksTaskCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yonglinnnnnn"},"content":"        task1.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(task1.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(task1.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yonglinnnnnn"},"content":"    void unmarkTask_invalidIndex_doesNothing() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yonglinnnnnn"},"content":"        task1.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(task1.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.unmarkTask(-1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.unmarkTask(5);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(task1.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yonglinnnnnn"},"content":"    void isValidIndex_validIndices_returnsTrue() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(taskList.isValidIndex(0));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(taskList.isValidIndex(1));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yonglinnnnnn"},"content":"    void isValidIndex_invalidIndices_returnsFalse() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(taskList.isValidIndex(-1));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(taskList.isValidIndex(1));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(taskList.isValidIndex(5));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yonglinnnnnn"},"content":"    void getTasks_returnsCorrectList() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yonglinnnnnn"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yonglinnnnnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(tasks.contains(task1));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(tasks.contains(task2));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":172}},{"path":"src/test/java/megabot/exception/InvalidTaskExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot.exception;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"class InvalidTaskExceptionTest {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_validMessage_createsExceptionCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"        String message \u003d \"Test error message\";","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"        InvalidTaskException exception \u003d new InvalidTaskException(message);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(message, exception.getMessage());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(message, exception.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_emptyMessage_createsExceptionCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"        String message \u003d \"\";","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"        InvalidTaskException exception \u003d new InvalidTaskException(message);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(message, exception.getMessage());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(message, exception.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_nullMessage_createsExceptionCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"        InvalidTaskException exception \u003d new InvalidTaskException(null);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        assertNull(exception.getMessage());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"        assertNull(exception.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"    void toString_returnsMessageCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"        String message \u003d \"OOPSIE!! Something went wrong\";","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"        InvalidTaskException exception \u003d new InvalidTaskException(message);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(message, exception.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"    void isInstanceOfException_returnsTrue() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"        InvalidTaskException exception \u003d new InvalidTaskException(\"test\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(exception instanceof Exception);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":50}},{"path":"src/test/java/megabot/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot.task;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.exception.InvalidTaskException;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"class DeadlineTest {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_validDateTimeFormat_createsDeadlineCorrectly() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\", \"2023-12-01 1400\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"submit assignment\", deadline.getTask());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"2023-12-01 1400\", deadline.getStringDeadline());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(LocalDateTime.of(2023, 12, 1, 14, 0), deadline.getDeadline());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_validDateOnlyFormat_createsDeadlineCorrectly() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\", \"2023-12-01\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"submit assignment\", deadline.getTask());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"2023-12-01\", deadline.getStringDeadline());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(LocalDateTime.of(2023, 12, 1, 0, 0), deadline.getDeadline());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_invalidDateFormat_throwsException() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"                new Deadline(\"submit assignment\", \"invalid date\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"                new Deadline(\"submit assignment\", \"2023-13-01\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"                new Deadline(\"submit assignment\", \"01-12-2023\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_emptyTask_createsDeadlineCorrectly() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(\"\", \"2023-12-01\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"\", deadline.getTask());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"    void toString_unmarkedDeadline_returnsCorrectFormat() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\", \"2023-12-01 1400\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[D][ ] submit assignment (by: Dec 1 2023 14:00)\", deadline.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"    void toString_markedDeadline_returnsCorrectFormat() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\", \"2023-12-01 1400\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[D][X] submit assignment (by: Dec 1 2023 14:00)\", deadline.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"    void formatData_unmarkedDeadline_returnsCorrectFormat() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\", \"2023-12-01 1400\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"D | 0 | submit assignment | 2023-12-01 1400\", deadline.formatData());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"    void formatData_markedDeadline_returnsCorrectFormat() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(\"submit assignment\", \"2023-12-01 1400\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"D | 1 | submit assignment | 2023-12-01 1400\", deadline.formatData());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"    void getDeadline_returnsCorrectLocalDateTime() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(\"test task\", \"2023-12-25 0900\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 12, 25, 9, 0);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(expected, deadline.getDeadline());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"    void getStringDeadline_returnsOriginalString() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"        String dateString \u003d \"2023-12-01 1400\";","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(\"test task\", dateString);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(dateString, deadline.getStringDeadline());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yonglinnnnnn"},"content":"    void markAsDone_deadline_worksCorrectly() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yonglinnnnnn"},"content":"        Deadline deadline \u003d new Deadline(\"test task\", \"2023-12-01\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yonglinnnnnn"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(deadline.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(deadline.toString().contains(\"[D][X]\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":97}},{"path":"src/test/java/megabot/task/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot.task;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.Command;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.Parser;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"import megabot.exception.InvalidTaskException;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"class ParserTest {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseCommand_todoCommand_returnsTodoCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.TODO, Parser.parseCommand(\"todo read book\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.TODO, Parser.parseCommand(\"TODO READ BOOK\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.TODO, Parser.parseCommand(\"todo\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseCommand_listCommand_returnsListCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.LIST, Parser.parseCommand(\"list\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.LIST, Parser.parseCommand(\"LIST\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.LIST, Parser.parseCommand(\" list \"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseCommand_deadlineCommand_returnsDeadlineCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.DEADLINE, Parser.parseCommand(\"deadline submit assignment /by Sunday\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.DEADLINE, Parser.parseCommand(\"deadline\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseCommand_eventCommand_returnsEventCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.EVENT, Parser.parseCommand(\"event project meeting /from Mon /to Tue\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.EVENT, Parser.parseCommand(\"event\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseCommand_markCommand_returnsMarkCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.MARK, Parser.parseCommand(\"mark 1\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.MARK, Parser.parseCommand(\"mark\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseCommand_unmarkCommand_returnsUnmarkCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNMARK, Parser.parseCommand(\"unmark 1\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNMARK, Parser.parseCommand(\"unmark\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseCommand_deleteCommand_returnsDeleteCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.DELETE, Parser.parseCommand(\"delete 1\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.DELETE, Parser.parseCommand(\"delete\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseCommand_byeCommand_returnsByeCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.BYE, Parser.parseCommand(\"bye\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.BYE, Parser.parseCommand(\"BYE\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseCommand_unknownCommand_returnsUnknownCommand() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Parser.parseCommand(\"unknown\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Parser.parseCommand(\"xyz\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Parser.parseCommand(\"\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(Command.UNKNOWN, Parser.parseCommand(null));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"    void removeFirstWord_normalString_returnsRestOfString() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"read book\", Parser.removeFirstWord(\"todo read book\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"submit assignment /by Sunday\", Parser.removeFirstWord(\"deadline submit assignment /by Sunday\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"1\", Parser.removeFirstWord(\"mark 1\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"    void removeFirstWord_singleWord_returnsEmptyString() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"\", Parser.removeFirstWord(\"todo\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"\", Parser.removeFirstWord(\"list\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"\", Parser.removeFirstWord(\"bye\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yonglinnnnnn"},"content":"    void removeFirstWord_emptyString_returnsEmptyString() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"\", Parser.removeFirstWord(\"\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseTaskNumber_validInput_returnsCorrectNumber() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(1, Parser.parseTaskNumber(\"mark 1\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(5, Parser.parseTaskNumber(\"delete 5\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(10, Parser.parseTaskNumber(\"unmark 10\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseTaskNumber_invalidInput_throwsException() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseTaskNumber(\"mark\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseTaskNumber(\"delete\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseTaskNumber(\"mark abc\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseDeadline_validInput_returnsCorrectParts() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yonglinnnnnn"},"content":"        String[] result \u003d Parser.parseDeadline(\"submit assignment /by Sunday\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(2, result.length);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"submit assignment\", result[0]);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"Sunday\", result[1]);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseDeadline_invalidInput_throwsException() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseDeadline(\"submit assignment\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseDeadline(\"/by Sunday\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseDeadline(\"submit assignment /by\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseDeadline(\"\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseEvent_validInput_returnsCorrectParts() throws InvalidTaskException {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yonglinnnnnn"},"content":"        String[] result \u003d Parser.parseEvent(\"project meeting /from Mon /to Tue\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(3, result.length);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"project meeting\", result[0]);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"Mon\", result[1]);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"Tue\", result[2]);","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yonglinnnnnn"},"content":"    void parseEvent_invalidInput_throwsException() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseEvent(\"project meeting\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseEvent(\"project meeting /from Mon\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseEvent(\"/from Mon /to Tue\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseEvent(\"project meeting /from /to Tue\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yonglinnnnnn"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e Parser.parseEvent(\"\"));","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":138}},{"path":"src/test/java/megabot/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot.task;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"class TaskTest {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_validTask_createsTaskCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d new Task(\"test task\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"test task\", task.getTask());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(task.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[ ]\", task.getStatusIcon());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"    void markAsDone_unmarkedTask_marksTaskAsDone() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d new Task(\"test task\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(task.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[X]\", task.getStatusIcon());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"    void markAsUndone_markedTask_marksTaskAsUndone() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d new Task(\"test task\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"        task.markAsUndone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(task.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[ ]\", task.getStatusIcon());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"    void getStatusIcon_unmarkedTask_returnsEmptyBrackets() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d new Task(\"test task\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[ ]\", task.getStatusIcon());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"    void getStatusIcon_markedTask_returnsXBrackets() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d new Task(\"test task\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[X]\", task.getStatusIcon());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"    void toString_unmarkedTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d new Task(\"test task\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[ ] test task\", task.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"    void toString_markedTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d new Task(\"test task\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[X] test task\", task.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yonglinnnnnn"},"content":"    void formatData_unmarkedTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d new Task(\"test task\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"0 | test task\", task.formatData());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yonglinnnnnn"},"content":"    void formatData_markedTask_returnsCorrectFormat() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d new Task(\"test task\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yonglinnnnnn"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"1 | test task\", task.formatData());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_emptyTask_createsTaskCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yonglinnnnnn"},"content":"        Task task \u003d new Task(\"\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"\", task.getTask());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(task.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":81}},{"path":"src/test/java/megabot/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"package megabot.task;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-09-09T15:20:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"class ToDoTest {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_validTodo_createsCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"read book\", todo.getTask());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"        assertFalse(todo.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yonglinnnnnn"},"content":"    void toString_unmarkedTodo_returnsCorrectFormat() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yonglinnnnnn"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yonglinnnnnn"},"content":"    void toString_markedTodo_returnsCorrectFormat() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yonglinnnnnn"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yonglinnnnnn"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[T][X] read book\", todo.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yonglinnnnnn"},"content":"    void formatData_unmarkedTodo_returnsCorrectFormat() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yonglinnnnnn"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"T | 0 | read book\", todo.formatData());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yonglinnnnnn"},"content":"    void formatData_markedTodo_returnsCorrectFormat() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yonglinnnnnn"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yonglinnnnnn"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"T | 1 | read book\", todo.formatData());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yonglinnnnnn"},"content":"    void constructor_emptyTodo_createsCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yonglinnnnnn"},"content":"        ToDo todo \u003d new ToDo(\"\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"\", todo.getTask());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[T][ ] \", todo.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yonglinnnnnn"},"content":"","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yonglinnnnnn"},"content":"    @Test","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yonglinnnnnn"},"content":"    void markAsDone_todo_worksCorrectly() {","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yonglinnnnnn"},"content":"        ToDo todo \u003d new ToDo(\"test\");","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yonglinnnnnn"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yonglinnnnnn"},"content":"        assertTrue(todo.getIsDone());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yonglinnnnnn"},"content":"        assertEquals(\"[T][X] test\", todo.toString());","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yonglinnnnnn"},"content":"    }","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yonglinnnnnn"},"content":"}","lastModifiedDate":"2025-08-31T17:36:24","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":58}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yonglinnnnnn"},"content":"todo read book","lastModifiedDate":"2025-08-20T23:25:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yonglinnnnnn"},"content":"todo","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yonglinnnnnn"},"content":"deadline submit assignment /by 2025-08-26 1800","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yonglinnnnnn"},"content":"mark 3","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yonglinnnnnn"},"content":"deadline finish project","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yonglinnnnnn"},"content":"event project meeting /from 2025-08-26 /to 2025-09-30","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yonglinnnnnn"},"content":"event","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yonglinnnnnn"},"content":"list","lastModifiedDate":"2025-08-20T23:25:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yonglinnnnnn"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yonglinnnnnn"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2025-08-20T23:25:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yonglinnnnnn"},"content":"deadline","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yonglinnnnnn"},"content":"mark 2","lastModifiedDate":"2025-08-20T23:25:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yonglinnnnnn"},"content":"unmark 2","lastModifiedDate":"2025-08-20T23:25:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yonglinnnnnn"},"content":"delete 1","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yonglinnnnnn"},"content":"unknown command","lastModifiedDate":"2025-08-31T10:37:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yonglinnnnnn"},"content":"bye","lastModifiedDate":"2025-08-20T23:25:46","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yonglinnnnnn"},"content":"java -classpath ../bin MegaBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T23:25:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"yonglinnnnnn":1,"-":37}}]
