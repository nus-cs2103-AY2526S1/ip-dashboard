[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-02T00:13:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-09-02T00:13:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-09-02T00:13:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"checkstyle {","lastModifiedDate":"2025-09-02T00:13:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-02T00:13:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"    mainClass.set(\"johnny.Johnny\")  ","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"    archiveBaseName \u003d \"johnny\"","lastModifiedDate":"2025-08-23T19:46:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"ndhhh":7}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"T|1|Touch","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"D|0|CS2103T|29/08/2025","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"E|1|Tiktok hackathon meetup|25/08/2025 12:00|17:00","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"T|1|Smell","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"D|0|2103T Week 4|07/09/2025","lastModifiedDate":"2025-09-02T00:13:52","isFullCredit":false}],"authorContributionMap":{"ndhhh":5}},{"path":"src/main/java/johnny/Johnny.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.Command;","lastModifiedDate":"2025-08-28T22:57:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import johnny.parser.Parser;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-17T17:51:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":" * This class is the main class of the bot, starts the bot process by running it","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"public class Johnny {","lastModifiedDate":"2025-08-17T17:16:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"     * Creates a new instance of Johnny with the specified file path to read and","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"     * write from storage","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"     * @param filePath File path of storage text file","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"    public Johnny(String filePath) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"        this.tasks \u003d new TaskList(this.storage.load(this.ui));","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"     * Runs the bot, starts by printing a greeting. The other packages like Ui","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"     * handle the reading of commands","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"     * or parsing and storing and saving tasks","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"    public void run() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"        this.ui.printGreeting();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"        while (!isBye) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"            // ui.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"            Command command \u003d Parser.read(fullCommand, this.storage, this.tasks, this.ui);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"            if (command !\u003d null) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"                command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"                isBye \u003d command.isBye();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"            }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"            // ui.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"        ui.closeScanner();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ndhhh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-17T17:16:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ndhhh"},"content":"        System.out.println(\"Working directory: \" + System.getProperty(\"user.dir\"));","lastModifiedDate":"2025-09-02T00:13:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ndhhh"},"content":"        Johnny johnny \u003d new Johnny(\"data/tasks.txt\");","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ndhhh"},"content":"        johnny.run();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-17T17:16:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-17T17:16:09","isFullCredit":false}],"authorContributionMap":{"ndhhh":57}},{"path":"src/main/java/johnny/JohnnyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":" * Exception class for any exceptions generated by Johnny","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"public class JohnnyException extends Exception {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"     * Creates a new JohnnyException with a specified message.","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"     * @param message Message to be output when a JohnnyException is caught","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"    public JohnnyException(String message) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"        super(message);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":15}},{"path":"src/main/java/johnny/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.commands;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":" * A command that saves all tasks in the current TaskList inside the save file","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":" * and exits the program.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"        ui.printByeMessage();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"    public boolean isBye() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"        return true;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":22}},{"path":"src/main/java/johnny/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.commands;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":" * An abstract class used to refer to a command that can be executed to make","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":" * changes to Johnny","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"     * Executes the command, editing the tasklist, printing messages, or saving to","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"     * storage","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"     * @param tasks   The task list of Johnny","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"     * @param ui      The ui class for printing messages and errors","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"     * @param storage The storage instance to save tasks","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"     * Returns true if the command is a ByeCommand","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"     * @return boolean whether the command is a bye command","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"    public abstract boolean isBye();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":28}},{"path":"src/main/java/johnny/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.commands;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.DeadlineTask;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":" * A command that adds a deadline task to the TaskList.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"    protected String name;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"     * Creates a new DeadlineCommand instance with the task name and date of","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"     * deadline","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"     * @param name     Name of task","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"     * @param deadline Date of deadline","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"    public DeadlineCommand(String name, LocalDate deadline) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"    public String getName() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"        return this.name;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"        return this.deadline;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"        Task newTask \u003d new DeadlineTask(this.name, this.deadline);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"        ui.printAddTaskMessage(tasks, newTask);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"    public boolean isBye() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"        return false;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":49}},{"path":"src/main/java/johnny/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.commands;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":" * A command that deletes a particular task in the TaskList at a given index.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"    protected int index;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"     * Creates a new DeleteCommand instance with the particular index to delete at.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"     * @param index The index to delete at","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"            ui.printInvalidNumberError();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"            return;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"        Task deleted \u003d tasks.deleteTask(this.index);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"        ui.printDeleteMessage(tasks, deleted);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"    public boolean isBye() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"        return false;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":38}},{"path":"src/main/java/johnny/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.commands;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.EventTask;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":" * A command that adds an event to the TaskList.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":" * This event has falls on a particular date and has a start and end time.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"    protected String name;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"    protected LocalTime end;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"     * Creates an EventCommand with the name of the event, the start date and time,","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"     * and the end date and time.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"     * @param name  Name of event","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"     * @param start Start date and time","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"     * @param end   End time","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"    public EventCommand(String name, LocalDateTime start, LocalTime end) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"    public String getName() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"        return this.name;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"        return this.start;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"    public LocalTime getEnd() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"        return this.end;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"        Task newTask \u003d new EventTask(this.name, this.start, this.end);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ndhhh"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ndhhh"},"content":"        ui.printAddTaskMessage(tasks, newTask);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ndhhh"},"content":"    public boolean isBye() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ndhhh"},"content":"        return false;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":58}},{"path":"src/main/java/johnny/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.commands;","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":" * A command that searches for a list of tasks in the TaskList whose","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":" * descriptions match a sub string.","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":" * This list of matching tasks is printed out.","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"    protected String subString;","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"     * Creates a new FindCommand instance with the given sub string to search for","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"     * @param subString Substring to search for in TaskList","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"    public FindCommand(String subString) {","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"        this.subString \u003d subString;","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"        String tasksString \u003d tasks.findTasksToString(subString);","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"        if (tasksString.length() \u003d\u003d 0) {","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"            ui.printMessage(\"No matching tasks found!\");","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"        } else {","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"            ui.printMessage(tasksString);","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"    public boolean isBye() {","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"        return false;","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false}],"authorContributionMap":{"ndhhh":38}},{"path":"src/main/java/johnny/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.commands;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":" * A command that prints out the list of tasks stored in the TaskList.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"    public ListCommand() {","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"        ui.printTaskList(tasks);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"    public boolean isBye() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"        return false;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":23}},{"path":"src/main/java/johnny/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.commands;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":" * A command that marks a task at the specified index in the TaskList as","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":" * completed.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"    protected int index;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"     * Creates a new MarkCommand instance with a specified index","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"     * @param index Index of command to mark at","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"            ui.printInvalidNumberError();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"            return;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"        tasks.markComplete(this.index);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"        ui.printMarkMessage(tasks, this.index);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"    public boolean isBye() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"        return false;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":37}},{"path":"src/main/java/johnny/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.commands;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.TodoTask;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":" * A command that adds a Todo task to the TaskList.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"    protected String name;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"     * Creates a new TodoCommand with the specified task name.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"     * @param name Name of task to be added.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"    public TodoCommand(String name) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"    public String getName() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"        return this.name;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"        Task newTask \u003d new TodoTask(this.name);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"        ui.printAddTaskMessage(tasks, newTask);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"    public boolean isBye() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"        return false;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":39}},{"path":"src/main/java/johnny/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.commands;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":" * A command that marks a task at the specified index in the TaskList as","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":" * uncompleted.","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"    protected int index;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"     * Creates a new MarkCommand instance with a specified index","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"     * @param index Index of command to unmark at","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"            ui.printInvalidNumberError();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"            return;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"        tasks.markIncomplete(this.index);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"        ui.printMarkMessage(tasks, this.index);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"    public boolean isBye() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"        return false;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":38}},{"path":"src/main/java/johnny/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.parser;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.ByeCommand;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.Command;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.DeadlineCommand;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.DeleteCommand;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.EventCommand;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.FindCommand;","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.ListCommand;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.MarkCommand;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.TodoCommand;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.UnmarkCommand;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":" * A helper class that provides useful methods to parse a command/date","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"public class Parser {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"    private static final String LINE \u003d \"__________________________________________________\";","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"     * Returns a Command based off the user input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"     * @param input   User input read","lastModifiedDate":"2025-08-29T17:41:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"     * @param storage Storage for reading and writing into the save file","lastModifiedDate":"2025-08-29T17:41:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"     * @param tasks   Task List for editing","lastModifiedDate":"2025-08-29T17:41:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"     * @param ui      UI object that prints out messages","lastModifiedDate":"2025-08-29T17:41:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"     * @return A command that can be executed, or null otherwise if the input cannot","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"     *         be parsed","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"    public static Command read(String input, Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"            return new ByeCommand();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"        } else if (input.startsWith(\"mark \") || input.startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"            return Parser.parseMark(input, ui);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"        } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ndhhh"},"content":"            return Parser.parseTodo(input, ui);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ndhhh"},"content":"        } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ndhhh"},"content":"            return Parser.parseDeadline(input, ui);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ndhhh"},"content":"        } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ndhhh"},"content":"            return Parser.parseEvent(input, ui);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ndhhh"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ndhhh"},"content":"            return Parser.parseDelete(input, ui);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ndhhh"},"content":"        } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ndhhh"},"content":"            return Parser.parseFind(input, ui);","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ndhhh"},"content":"        } else {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ndhhh"},"content":"            System.out.println(LINE + \"\\n\" + \"Invalid command.\" + \"\\n\" + LINE);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ndhhh"},"content":"     * Returns a find command after parsing the user input","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ndhhh"},"content":"     * @param input","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ndhhh"},"content":"     * @param ui","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ndhhh"},"content":"     * @return A find command if it can be parsed, null otherwise","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ndhhh"},"content":"    public static Command parseFind(String input, Ui ui) {","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ndhhh"},"content":"        String[] strings \u003d input.split(\" \");","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ndhhh"},"content":"        if (strings.length \u003c 2) {","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ndhhh"},"content":"            ui.printNoTaskNameError();","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ndhhh"},"content":"        String searchString \u003d input.substring(5);","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ndhhh"},"content":"        return new FindCommand(searchString);","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ndhhh"},"content":"     * Returns a delete command after parsing the user input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ndhhh"},"content":"     * @param input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ndhhh"},"content":"     * @param ui","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ndhhh"},"content":"     * @return A delete commmand if it can be parsed, null otherwise","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ndhhh"},"content":"    public static Command parseDelete(String input, Ui ui) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ndhhh"},"content":"        String[] strings \u003d input.split(\" \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ndhhh"},"content":"        if (strings.length !\u003d 2) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ndhhh"},"content":"            ui.printNoNumberError();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ndhhh"},"content":"        int num \u003d 0;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ndhhh"},"content":"        try {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ndhhh"},"content":"            num \u003d Integer.parseInt(strings[1]);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ndhhh"},"content":"            num \u003d num - 1;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ndhhh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ndhhh"},"content":"            ui.printInvalidNumberError();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ndhhh"},"content":"        return new DeleteCommand(num);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ndhhh"},"content":"     * Returns a event command after parsing the user input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ndhhh"},"content":"     * @param input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ndhhh"},"content":"     * @param ui","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ndhhh"},"content":"     * @return A event commmand if it can be parsed, null otherwise","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ndhhh"},"content":"    public static Command parseEvent(String input, Ui ui) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ndhhh"},"content":"        String[] firstParse \u003d input.split(\"/to \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ndhhh"},"content":"        if (firstParse.length !\u003d 2) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ndhhh"},"content":"            System.out.println(LINE","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ndhhh"},"content":"                    + \"\\nThere is no/more than 1 event end time provided.\\nPlease use the format: event [task name] /from [start time] /to [end time]\\n\"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ndhhh"},"content":"                    + LINE);","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ndhhh"},"content":"        String[] secondParse \u003d firstParse[0].split(\"/from \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ndhhh"},"content":"        if (secondParse.length !\u003d 2) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ndhhh"},"content":"            System.out.println(LINE","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ndhhh"},"content":"                    + \"\\nThere is no/more than 1 event start time provided.\\nPlease use the format: event [task name] /from [start time] /to [end time]\\n\"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ndhhh"},"content":"                    + LINE);","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ndhhh"},"content":"        String[] eventName \u003d secondParse[0].split(\" \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ndhhh"},"content":"        if (eventName.length \u003c 2) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ndhhh"},"content":"            System.out.println(LINE","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ndhhh"},"content":"                    + \"\\nThere is no/more than 1 event name provided.\\nPlease use the format: event [task name] /from [start time] /to [end time]\\n\"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ndhhh"},"content":"                    + LINE);","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ndhhh"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ndhhh"},"content":"        for (int i \u003d 1; i \u003c eventName.length; i++) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ndhhh"},"content":"            taskName.append(eventName[i]);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ndhhh"},"content":"            if (i \u003c eventName.length - 1) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ndhhh"},"content":"                taskName.append(\" \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ndhhh"},"content":"            }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ndhhh"},"content":"        try {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ndhhh"},"content":"            DateTimeFormatter dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ndhhh"},"content":"            DateTimeFormatter tFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ndhhh"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(secondParse[1].trim(), dtFormatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ndhhh"},"content":"            LocalTime end \u003d LocalTime.parse(firstParse[1].trim(), tFormatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ndhhh"},"content":"            return new EventCommand(taskName.toString(), start, end);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ndhhh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ndhhh"},"content":"            ui.printDateTimeException(e);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ndhhh"},"content":"     * Returns a deadline command after parsing the user input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ndhhh"},"content":"     * @param input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ndhhh"},"content":"     * @param ui","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ndhhh"},"content":"     * @return A deadline commmand if it can be parsed, null otherwise","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ndhhh"},"content":"    public static Command parseDeadline(String input, Ui ui) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ndhhh"},"content":"        String[] strings \u003d input.split(\"/by \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ndhhh"},"content":"        if (strings.length !\u003d 2) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ndhhh"},"content":"            ui.printDeadlineError();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ndhhh"},"content":"        String[] firstHalf \u003d strings[0].split(\" \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ndhhh"},"content":"        if (firstHalf.length \u003c 2) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ndhhh"},"content":"            ui.printNoTaskNameError();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ndhhh"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ndhhh"},"content":"        for (int i \u003d 1; i \u003c firstHalf.length; i++) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ndhhh"},"content":"            taskName.append(firstHalf[i]);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ndhhh"},"content":"            if (i \u003c firstHalf.length - 1) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ndhhh"},"content":"                taskName.append(\" \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ndhhh"},"content":"            }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ndhhh"},"content":"        String[] secondHalf \u003d strings[1].trim().split(\"/\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ndhhh"},"content":"        if (secondHalf.length !\u003d 3) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ndhhh"},"content":"            ui.printDateError();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ndhhh"},"content":"        try {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ndhhh"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ndhhh"},"content":"            LocalDate deadline \u003d LocalDate.parse(strings[1].trim(), formatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ndhhh"},"content":"            return new DeadlineCommand(taskName.toString(), deadline);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ndhhh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ndhhh"},"content":"            ui.printDateTimeException(e);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ndhhh"},"content":"     * Returns a todo command after parsing the user input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ndhhh"},"content":"     * @param input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ndhhh"},"content":"     * @param ui","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ndhhh"},"content":"     * @return A todo commmand if it can be parsed, null otherwise","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ndhhh"},"content":"    public static Command parseTodo(String input, Ui ui) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ndhhh"},"content":"        String[] strings \u003d input.split(\" \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ndhhh"},"content":"        if (strings.length \u003c 2) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ndhhh"},"content":"            ui.printNoTaskNameError();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ndhhh"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ndhhh"},"content":"        for (int i \u003d 1; i \u003c strings.length; i++) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ndhhh"},"content":"            taskName.append(strings[i]);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ndhhh"},"content":"            if (i \u003c strings.length - 1) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ndhhh"},"content":"                taskName.append(\" \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ndhhh"},"content":"            }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ndhhh"},"content":"        return new TodoCommand(taskName.toString());","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ndhhh"},"content":"     * Returns a mark or unmark command after parsing the user input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ndhhh"},"content":"     * @param input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ndhhh"},"content":"     * @param ui","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ndhhh"},"content":"     * @return A mark or unmark commmand if it can be parsed, null otherwise","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ndhhh"},"content":"    public static Command parseMark(String input, Ui ui) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ndhhh"},"content":"        String[] strings \u003d input.split(\" \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ndhhh"},"content":"        if (strings.length !\u003d 2) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ndhhh"},"content":"            ui.printNoNumberError();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ndhhh"},"content":"        int num \u003d 0;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ndhhh"},"content":"        try {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ndhhh"},"content":"            num \u003d Integer.parseInt(strings[1]);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ndhhh"},"content":"            num \u003d num - 1;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ndhhh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ndhhh"},"content":"            ui.printInvalidNumberError();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ndhhh"},"content":"        if (strings[0].equals(\"mark\")) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ndhhh"},"content":"            return new MarkCommand(num);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ndhhh"},"content":"        } else {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ndhhh"},"content":"            return new UnmarkCommand(num);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"ndhhh"},"content":"     * Returns a LocalDate from the string input. If the input cannot be parsed,","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"ndhhh"},"content":"     * returns null","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"ndhhh"},"content":"     * @param input String representation of the date","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"ndhhh"},"content":"     * @param ui","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"ndhhh"},"content":"     * @return date","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"ndhhh"},"content":"    public static LocalDate parseDate(String input, Ui ui) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"ndhhh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"ndhhh"},"content":"        try {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"ndhhh"},"content":"            LocalDate date \u003d LocalDate.parse(input, formatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"ndhhh"},"content":"            return date;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"ndhhh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"ndhhh"},"content":"            ui.printDateTimeException(e);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"ndhhh"},"content":"     * Returns a LocalDateTime from the string input. If the input cannot be parsed,","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"ndhhh"},"content":"     * returns null","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"ndhhh"},"content":"     * @param input String representation of the datetime","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"ndhhh"},"content":"     * @param ui","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"ndhhh"},"content":"     * @return date and time","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"ndhhh"},"content":"    public static LocalDateTime parseDateTime(String input, Ui ui) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"ndhhh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"ndhhh"},"content":"        try {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"ndhhh"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"ndhhh"},"content":"            return dateTime;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"ndhhh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"ndhhh"},"content":"            ui.printDateTimeException(e);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"ndhhh"},"content":"     * Returns a LocalTime from the string input. If the input cannot be parsed,","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"ndhhh"},"content":"     * returns null","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"ndhhh"},"content":"     * @param input String representation of the time","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"ndhhh"},"content":"     * @param ui","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"ndhhh"},"content":"     * @return time","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"ndhhh"},"content":"    public static LocalTime parseTime(String input, Ui ui) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"ndhhh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"ndhhh"},"content":"        try {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"ndhhh"},"content":"            LocalTime time \u003d LocalTime.parse(input, formatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"ndhhh"},"content":"            return time;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"ndhhh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"ndhhh"},"content":"            ui.printDateTimeException(e);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":321}},{"path":"src/main/java/johnny/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.storage;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:50:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import java.io.File;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T17:28:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T17:28:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-24T17:28:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T17:28:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-08-24T17:28:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"import johnny.parser.Parser;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.DeadlineTask;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.EventTask;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.TodoTask;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":" * A class used in storing and loading tasks from the save file.","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"public class Storage {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"    // Done","lastModifiedDate":"2025-08-22T15:17:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"     * Constructs a new instance of Storage using the specified String, which is a","lastModifiedDate":"2025-08-28T16:50:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"     * file path.","lastModifiedDate":"2025-08-28T16:50:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T16:50:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"     * @param filePath String to the path of the save file","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"     * Returns an ArrayList of Task that is populated from reading the filePath of","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"     * the storage object.","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-09-02T00:29:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"     * The ui argument refers to a Ui object that prints any errors from parsing the","lastModifiedDate":"2025-08-28T16:57:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"     * text file.","lastModifiedDate":"2025-08-28T16:57:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"     * @param ui Ui object that prints any errors from parsing the text file / text","lastModifiedDate":"2025-08-28T16:57:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"     *           interactions with the user","lastModifiedDate":"2025-08-28T16:57:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"     * @return an ArrayList\u003cTask\u003e that is passed into a TaskList","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"     * @see TaskList","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ndhhh"},"content":"    public ArrayList\u003cTask\u003e load(Ui ui) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ndhhh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ndhhh"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ndhhh"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ndhhh"},"content":"            // if the file doesn\u0027t exist, i.e. on first run of program,","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ndhhh"},"content":"            // create a new file","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ndhhh"},"content":"            try {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ndhhh"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ndhhh"},"content":"                file.createNewFile();","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ndhhh"},"content":"            } catch (SecurityException | IOException e) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ndhhh"},"content":"                System.out.println(\"Error creating task file: \" + e.getMessage());","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ndhhh"},"content":"            }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ndhhh"},"content":"            return tasks; // return empty arraylist as no initial file was present","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ndhhh"},"content":"        try (Scanner sc \u003d new Scanner(file)) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ndhhh"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ndhhh"},"content":"                // While there are still lines to read, parse the lines into tasks","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ndhhh"},"content":"                String nextLine \u003d sc.nextLine();","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ndhhh"},"content":"                String[] strings \u003d nextLine.split(\"\\\\|\");","lastModifiedDate":"2025-08-22T15:12:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ndhhh"},"content":"                String typeOfTask \u003d strings[0];","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ndhhh"},"content":"                boolean completed \u003d strings[1].equals(\"1\");","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ndhhh"},"content":"                String taskName \u003d strings[2];","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ndhhh"},"content":"                switch (typeOfTask) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ndhhh"},"content":"                    case \"T\":","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ndhhh"},"content":"                        tasks.add(new TodoTask(taskName, completed));","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ndhhh"},"content":"                        break;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ndhhh"},"content":"                    case \"D\":","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ndhhh"},"content":"                        String deadline \u003d strings[3];","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ndhhh"},"content":"                        LocalDate date \u003d Parser.parseDate(deadline, ui);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ndhhh"},"content":"                        if (date !\u003d null) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ndhhh"},"content":"                            tasks.add(new DeadlineTask(taskName, completed, date));","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ndhhh"},"content":"                        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ndhhh"},"content":"                        break;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ndhhh"},"content":"                    case \"E\":","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ndhhh"},"content":"                        String start \u003d strings[3];","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ndhhh"},"content":"                        LocalDateTime startDateTime \u003d Parser.parseDateTime(start, ui);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ndhhh"},"content":"                        String end \u003d strings[4];","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ndhhh"},"content":"                        LocalTime endTime \u003d Parser.parseTime(end, ui);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ndhhh"},"content":"                        if (startDateTime !\u003d null \u0026\u0026 endTime !\u003d null) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ndhhh"},"content":"                            tasks.add(new EventTask(taskName, completed, startDateTime, endTime));","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ndhhh"},"content":"                        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ndhhh"},"content":"                        break;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ndhhh"},"content":"                }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ndhhh"},"content":"            }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ndhhh"},"content":"            sc.close();","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ndhhh"},"content":"        } catch (IOException | NoSuchElementException e) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ndhhh"},"content":"            System.out.println(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ndhhh"},"content":"        return tasks;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ndhhh"},"content":"     * Takes a TaskList object and writes the Task objects as text","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ndhhh"},"content":"     * form into the filePath of the storage object.","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ndhhh"},"content":"     * @param tasks A TaskList object that provides the tasks to be saved into the","lastModifiedDate":"2025-08-28T16:57:08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ndhhh"},"content":"     *              file path","lastModifiedDate":"2025-08-28T16:57:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ndhhh"},"content":"     * @see TaskList","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ndhhh"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ndhhh"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ndhhh"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ndhhh"},"content":"            // if the file doesn\u0027t exist, i.e. on first run of program,","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ndhhh"},"content":"            // create a new file","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ndhhh"},"content":"            try {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ndhhh"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ndhhh"},"content":"                file.createNewFile();","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ndhhh"},"content":"            } catch (SecurityException | IOException e) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ndhhh"},"content":"                System.out.println(\"Error creating task file: \" + e.getMessage());","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ndhhh"},"content":"            }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ndhhh"},"content":"        try (FileWriter fw \u003d new FileWriter(file)) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ndhhh"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ndhhh"},"content":"                String storedTask \u003d tasks.getStoredString(i);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ndhhh"},"content":"                if (i \u003d\u003d tasks.size() - 1) {","lastModifiedDate":"2025-08-23T18:29:38","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ndhhh"},"content":"                    fw.write(storedTask);","lastModifiedDate":"2025-08-23T18:29:38","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ndhhh"},"content":"                } else {","lastModifiedDate":"2025-08-23T18:29:38","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ndhhh"},"content":"                    fw.write(storedTask + \"\\n\");","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ndhhh"},"content":"                }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ndhhh"},"content":"            }","lastModifiedDate":"2025-08-23T18:29:38","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ndhhh"},"content":"            fw.close();","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ndhhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ndhhh"},"content":"            System.out.println(\"Unable to write to saved task file: \" + e.getMessage());","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false}],"authorContributionMap":{"ndhhh":147}},{"path":"src/main/java/johnny/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.tasklist;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":" * A class that wraps an ArrayList\u003cTask\u003e. ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":" * This class provides many operations to edit the nested ArrayList","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"public class TaskList {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"     * Constructs a new TaskList instance using the ArrayList\u003cTask\u003e passed in","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"     * @param tasks ArrayList\u003cTask\u003e to be wrapped in the instance","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"     * Constucts a new TaskList instance with an empty ArrayList","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"    /** ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"     * Gets a Task at the given index of the wrapped ArrayList","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"     * @param index The index to search at","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"     * @return The task at that index","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-24T18:40:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"        Task deleted \u003d this.tasks.get(index);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"        return deleted;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"    public void markComplete(int index) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"        this.tasks.get(index).markComplete();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ndhhh"},"content":"    public void markIncomplete(int index) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ndhhh"},"content":"        this.tasks.get(index).markIncomplete();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ndhhh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ndhhh"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ndhhh"},"content":"    public int size() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ndhhh"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ndhhh"},"content":"     * Returns the string format of the task that is used to store in the saved file","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ndhhh"},"content":"     * @param index The index to search at","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ndhhh"},"content":"     * @return The stored string format","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ndhhh"},"content":"    public String getStoredString(int index) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ndhhh"},"content":"        return this.tasks.get(index).getStoredString();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ndhhh"},"content":"     * Returns an ArrayList of tasks that have their name containing the given substring","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ndhhh"},"content":"     * @param subString ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ndhhh"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ndhhh"},"content":"    public ArrayList\u003cTask\u003e findTasks(String subString) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ndhhh"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ndhhh"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ndhhh"},"content":"            if (t.contains(subString)) {","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ndhhh"},"content":"                result.add(t);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ndhhh"},"content":"            }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ndhhh"},"content":"        return result;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ndhhh"},"content":"     * Returns a String of tasks that have their name containing the given substring","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ndhhh"},"content":"     * @param subString","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ndhhh"},"content":"     * @return String describing all matching tasks","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ndhhh"},"content":"    public String findTasksToString(String subString) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ndhhh"},"content":"        ArrayList\u003cTask\u003e matching \u003d this.findTasks(subString);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ndhhh"},"content":"        TaskList temp \u003d new TaskList(matching);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ndhhh"},"content":"        return temp.toString();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ndhhh"},"content":"    public String toString() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ndhhh"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ndhhh"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ndhhh"},"content":"            return \"No tasks in list\";","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ndhhh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++)","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ndhhh"},"content":"        {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ndhhh"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ndhhh"},"content":"            String str \u003d String.format(\". %s\", tasks.get(i).toString());","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ndhhh"},"content":"            result.append(num);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ndhhh"},"content":"            result.append(str);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ndhhh"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ndhhh"},"content":"        return result.toString();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":118}},{"path":"src/main/java/johnny/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.tasks;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":" * A task that has a deadline date","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"    protected String formattedDate;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"    protected static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"     * Creates a new DeadlineTask instance with the given name and deadline","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"     * @param name","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"     * @param deadline","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"    public DeadlineTask(String name, LocalDate deadline) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"        super(name);","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"        this.formattedDate \u003d deadline.format(formatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"     * Creates a new DeadlineTask with the given completed boolean","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"     * @param name","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"     * @param completed Whether task is done","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"     * @param deadline","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"    public DeadlineTask(String name, boolean completed, LocalDate deadline) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"        super(name, completed);","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"        this.formattedDate \u003d deadline.format(formatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"        return this.deadline;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"    @Override ","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"    public String getStoredString() {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"        if (completed) return \"D|1|\" + this.name + \"|\" + formattedDate;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"        return \"D|0|\" + this.name + \"|\" + formattedDate;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"        if (this.completed) {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ndhhh"},"content":"            return \"[D][X] \" + super.name + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ndhhh"},"content":"        } else {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ndhhh"},"content":"            return \"[D][ ] \" + super.name + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false}],"authorContributionMap":{"ndhhh":55}},{"path":"src/main/java/johnny/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.tasks;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":" * A Task that refers to a particular event that falls on a day with a start and end time.","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"    protected LocalTime end;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"    protected String formattedStart;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"    protected String formattedEnd;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"    protected static DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"    protected static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"     * Creates a new EventTask with the given name, start date and time, and the end time","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"     * @param name","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"     * @param start","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"     * @param end","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"    public EventTask(String name, LocalDateTime start, LocalTime end) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"        super(name);","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"        this.formattedStart \u003d start.format(dateTimeFormatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"        this.formattedEnd \u003d end.format(timeFormatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"    }  ","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"     * Creates a new EventTask with the given boolean on whether it is done","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"     * @param name","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"     * @param completed","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"     * @param start","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"     * @param end","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"    public EventTask(String name, boolean completed, LocalDateTime start, LocalTime end) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"        super(name, completed);","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"        this.formattedStart \u003d start.format(dateTimeFormatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"        this.formattedEnd \u003d end.format(timeFormatter);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"        return this.start;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ndhhh"},"content":"    public LocalTime getEnd() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ndhhh"},"content":"        return this.end;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ndhhh"},"content":"    @Override ","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ndhhh"},"content":"    public String getStoredString() {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ndhhh"},"content":"        if (completed) return \"E|1|\" + this.name + \"|\" + this.formattedStart + \"|\" + this.formattedEnd;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ndhhh"},"content":"        return \"E|0|\" + this.name + \"|\" + this.formattedStart + \"|\" + this.formattedEnd;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ndhhh"},"content":"    @Override ","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ndhhh"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ndhhh"},"content":"        if (this.completed) {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ndhhh"},"content":"            return \"[D][X] \" + super.name + \" (from: \" + this.formattedStart + \" to: \" + this.formattedEnd + \")\";","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ndhhh"},"content":"        } else {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ndhhh"},"content":"            return \"[D][ ] \" + super.name + \" (from: \" + this.formattedStart + \" to: \" + this.formattedEnd + \")\";","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false}],"authorContributionMap":{"ndhhh":68}},{"path":"src/main/java/johnny/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.tasks;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":" * Represents a task that the user wishes to store and keep note of","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"public class Task {","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"    protected String name;","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"    protected boolean completed;","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"     * Creates a new Task with the given name","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"     * @param name","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"    public Task(String name) {","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"        this.completed \u003d false;","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"     * Creates a new Task with the given name and boolean","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"     * @param name","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"     * @param completed Whether task is done","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"    public Task(String name, boolean completed) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"    public String getName() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"        return this.name;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"        return this.completed;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"    public void markComplete() {","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"        this.completed \u003d true;","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"    public void markIncomplete() {","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"        this.completed \u003d false;","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"     * Returns the string format used in storing the task in the save file","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"     * @return String format","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"    public String getStoredString() {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ndhhh"},"content":"        if (completed) return \"T-1-\" + this.name;","lastModifiedDate":"2025-08-22T15:12:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ndhhh"},"content":"        return \"T|0|\" + this.name;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ndhhh"},"content":"    public boolean contains(String subString) {","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ndhhh"},"content":"        return this.name.contains(subString);","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ndhhh"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ndhhh"},"content":"        if (this.completed) {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ndhhh"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ndhhh"},"content":"        } else {","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ndhhh"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-17T21:36:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-17T18:19:57","isFullCredit":false}],"authorContributionMap":{"ndhhh":66}},{"path":"src/main/java/johnny/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.tasks;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":" * A task that does not have any deadline or timing requirement","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"    public TodoTask(String name) {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"        super(name);","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"    public TodoTask(String name, boolean completed) {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"        super(name, completed);","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"    public String getStoredString() {","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"        if (completed)","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"            return \"T|1|\" + this.name;","lastModifiedDate":"2025-08-28T22:53:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"        return \"T|0|\" + this.name;","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-22T02:18:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"    @Override","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"        if (this.completed) {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"            return \"[T][X] \" + super.name;","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"        } else {","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"            return \"[T][ ] \" + super.name;","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-17T23:13:11","isFullCredit":false}],"authorContributionMap":{"ndhhh":30}},{"path":"src/main/java/johnny/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.ui;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:50:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"/**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":" * Ui class for handling interactions with the user, such as reading user input","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":" * and printing messages","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":" */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"public class Ui {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"    private static final String LINE \u003d \"__________________________________________________\";","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"    private static final String NAME \u003d \"Johnny\";","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"    private Scanner sc;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"     * Creates a new Ui object with a scanner to detect user input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"    public Ui() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"     * Prints a new line","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"    public void printLine() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"     * Reads from the user\u0027s input in System.in and returns the string read","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"     * @return String read from user input","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"        try {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"            String fullCommand \u003d sc.nextLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"            return fullCommand;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"        } catch (IllegalStateException | NoSuchElementException e) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"            System.out.println(\"Error reading command: \" + e.getMessage());","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"            return null;","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"        }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"    public void closeScanner() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"        sc.close();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ndhhh"},"content":"    public void printMessage(String string) {","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ndhhh"},"content":"        System.out.println(string);","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ndhhh"},"content":"    public void printGreeting() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ndhhh"},"content":"        System.out.println(\"Hello! I\u0027m \" + NAME + \"\\nWhat can I do for you?\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ndhhh"},"content":"    public void printByeMessage() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ndhhh"},"content":"        System.out.println(LINE + \"\\nBye. Hope to see you again!\\n\" + LINE);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ndhhh"},"content":"    public void printNumberOfTasks(TaskList tasks) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ndhhh"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in your list.\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ndhhh"},"content":"    public void printAddTaskMessage(TaskList tasks, Task t) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ndhhh"},"content":"        System.out.println(\"Task added: \\n\" + t.toString() + \"\\n\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ndhhh"},"content":"        this.printNumberOfTasks(tasks);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ndhhh"},"content":"    public void printMarkMessage(TaskList tasks, int index) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ndhhh"},"content":"        System.out.println(\"Marked task as done: \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ndhhh"},"content":"        System.out.println(tasks.getTask(index).toString());","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ndhhh"},"content":"    public void printUnmarkMessage(TaskList tasks, int index) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ndhhh"},"content":"        System.out.println(\"Marked task as undone: \");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ndhhh"},"content":"        System.out.println(tasks.getTask(index).toString());","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ndhhh"},"content":"    public void printDeleteMessage(TaskList tasks, Task t) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ndhhh"},"content":"        System.out.println(\"Task deleted successfully\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ndhhh"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ndhhh"},"content":"        this.printNumberOfTasks(tasks);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ndhhh"},"content":"    public void printTaskList(TaskList tasks) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ndhhh"},"content":"        System.out.println(tasks.toString());","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ndhhh"},"content":"    public void printInvalidNumberError() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ndhhh"},"content":"        System.out.println(\"You inputted an invalid number after your command.\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ndhhh"},"content":"    public void printNoNumberError() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ndhhh"},"content":"        System.out.println(LINE + \"\\nYour command should be accompanied by a number.\\n\" + LINE);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ndhhh"},"content":"    public void printNoTaskNameError() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ndhhh"},"content":"        System.out.println(LINE + \"\\nThe description of a task cannot be empty\\n\" + LINE);","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ndhhh"},"content":"    public void printNoFindDescriptionError() {","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ndhhh"},"content":"        System.out.println(LINE + \"\\nThe description of a task you are finding cannot be empty\\n\" + LINE);","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ndhhh"},"content":"    public void printDeadlineError() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ndhhh"},"content":"        System.out.println(LINE","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ndhhh"},"content":"                + \"\\nThere is no/more than 1 deadline provided.\\nPlease use the format: deadline [task name] /by [deadline]\\n\"","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ndhhh"},"content":"                + LINE);","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ndhhh"},"content":"    public void printDateError() {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ndhhh"},"content":"        System.out.println(\"Invalid date format used. Please follow this format: [dd/MM/yyyy]\");","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ndhhh"},"content":"    /**","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ndhhh"},"content":"     * Prints the exception message when a date or time cannot be parsed","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ndhhh"},"content":"     * ","lastModifiedDate":"2025-08-28T23:16:41","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ndhhh"},"content":"     * @param e The exception thrown by the parser","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ndhhh"},"content":"     */","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ndhhh"},"content":"    public void printDateTimeException(Exception e) {","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ndhhh"},"content":"        System.out.println(\"Problem with parsing date/time: \" + e.getMessage());","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ndhhh"},"content":"        this.printLine();","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T18:22:33","isFullCredit":false}],"authorContributionMap":{"ndhhh":146}},{"path":"src/test/java/johnny/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.parser;","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.*;","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"import johnny.commands.*;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"    @Test","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"    public void testDateParse() {","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"        LocalDate date \u003d Parser.parseDate(\"29/03/2024\", ui);","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"        assertEquals(LocalDate.of(2024, 3, 29), date);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"    @Test ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"    public void testDelete_validInput() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"        String input \u003d \"delete 4\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"        Command c \u003d Parser.parseDelete(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"        assertTrue(c instanceof DeleteCommand);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"    @Test ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"    public void testDelete_invalidInput() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"        String input \u003d \"delete 4.\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"        Command c \u003d Parser.parseDelete(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"        assertNull(c);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"    @Test ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"    public void testDelete_invalidInputFloat() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"        String input \u003d \"delete 0.4\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"        Command c \u003d Parser.parseDelete(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"        assertNull(c);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ndhhh"},"content":"    @Test ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ndhhh"},"content":"    public void testMark_validInput() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ndhhh"},"content":"        String input \u003d \"mark 4\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ndhhh"},"content":"        Command c \u003d Parser.parseMark(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ndhhh"},"content":"        assertTrue(c instanceof MarkCommand);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ndhhh"},"content":"    @Test ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ndhhh"},"content":"    public void testMark_invalidInput() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ndhhh"},"content":"        String input \u003d \"mark 4.\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ndhhh"},"content":"        Command c \u003d Parser.parseMark(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ndhhh"},"content":"        assertNull(c);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ndhhh"},"content":"    @Test ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ndhhh"},"content":"    public void testMark_invalidInputFloat() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ndhhh"},"content":"        String input \u003d \"mark 4.0\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ndhhh"},"content":"        Command c \u003d Parser.parseMark(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ndhhh"},"content":"        assertNull(c);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ndhhh"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ndhhh"},"content":"    public void testEvent_validInput() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ndhhh"},"content":"        String input \u003d  \"event Project meeting /from 25/08/2025 14:00 /to 16:00\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ndhhh"},"content":"        Command command \u003d Parser.parseEvent(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ndhhh"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ndhhh"},"content":"        assertTrue(command instanceof EventCommand);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ndhhh"},"content":"        EventCommand c \u003d (EventCommand) command;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ndhhh"},"content":"        assertEquals(\"Project meeting\", c.getName());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ndhhh"},"content":"        assertEquals(LocalDateTime.of(2025, 8, 25, 14, 0), c.getStart());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ndhhh"},"content":"        assertEquals(LocalTime.of(16, 0), c.getEnd());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ndhhh"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ndhhh"},"content":"    public void testEvent_missingEnd() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ndhhh"},"content":"        String input \u003d \"event Project meeting /from 25/08/2025 14:00\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ndhhh"},"content":"        Command command \u003d Parser.parseEvent(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ndhhh"},"content":"        assertNull(command);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ndhhh"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ndhhh"},"content":"    void testParseDeadline_validInput() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ndhhh"},"content":"        String input \u003d \"deadline Submit report /by 30/08/2025\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ndhhh"},"content":"        Command command \u003d Parser.parseDeadline(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ndhhh"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ndhhh"},"content":"        assertTrue(command instanceof DeadlineCommand);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ndhhh"},"content":"        DeadlineCommand deadlineCommand \u003d (DeadlineCommand) command;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ndhhh"},"content":"        assertEquals(\"Submit report\", deadlineCommand.getName());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ndhhh"},"content":"        assertEquals(LocalDate.of(2025, 8, 30), deadlineCommand.getDeadline());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ndhhh"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ndhhh"},"content":"    void testParseDeadline_invalidDateFormat() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ndhhh"},"content":"        String input \u003d \"deadline Submit report /by 2025-08-30\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ndhhh"},"content":"        Command command \u003d Parser.parseDeadline(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ndhhh"},"content":"        assertNull(command);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ndhhh"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ndhhh"},"content":"    void testParseTodo_validInput() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ndhhh"},"content":"        String input \u003d \"todo Buy groceries\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ndhhh"},"content":"        Command command \u003d Parser.parseTodo(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ndhhh"},"content":"        assertNotNull(command);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ndhhh"},"content":"        assertTrue(command instanceof TodoCommand);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ndhhh"},"content":"        TodoCommand todoCommand \u003d (TodoCommand) command;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ndhhh"},"content":"        assertEquals(\"Buy groceries\", todoCommand.getName());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ndhhh"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ndhhh"},"content":"    void testParseTodo_missingTaskName() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ndhhh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ndhhh"},"content":"        String input \u003d \"todo\";","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ndhhh"},"content":"        Command command \u003d Parser.parseTodo(input, ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ndhhh"},"content":"        assertNull(command);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false}],"authorContributionMap":{"ndhhh":147}},{"path":"src/test/java/johnny/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"package johnny.storage;","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ndhhh"},"content":"import johnny.tasklist.TaskList;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.DeadlineTask;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.EventTask;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ndhhh"},"content":"import johnny.tasks.TodoTask;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ndhhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ndhhh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ndhhh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ndhhh"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ndhhh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ndhhh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ndhhh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ndhhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ndhhh"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ndhhh"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ndhhh"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ndhhh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ndhhh"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ndhhh"},"content":"    private Path tempDir;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ndhhh"},"content":"    private Ui ui \u003d new Ui(); // assume Ui has no-arg constructor","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ndhhh"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ndhhh"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ndhhh"},"content":"        tempDir \u003d Files.createTempDirectory(\"storagetest\");","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ndhhh"},"content":"    @AfterEach","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ndhhh"},"content":"    void tearDown() throws IOException {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ndhhh"},"content":"        Files.walk(tempDir)","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ndhhh"},"content":"             .sorted(Comparator.reverseOrder())","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ndhhh"},"content":"             .map(Path::toFile)","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ndhhh"},"content":"             .forEach(File::delete);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ndhhh"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ndhhh"},"content":"    void testLoad_createsFileIfNotExists() {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ndhhh"},"content":"        Path filePath \u003d tempDir.resolve(\"tasks.txt\");","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ndhhh"},"content":"        Storage storage \u003d new Storage(filePath.toString());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ndhhh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load(ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ndhhh"},"content":"        assertTrue(tasks.isEmpty(), \"File not present → should return empty list\");","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ndhhh"},"content":"        assertTrue(Files.exists(filePath), \"File should be created automatically\");","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ndhhh"},"content":"    ","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ndhhh"},"content":"    @Test","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ndhhh"},"content":"    void testLoad_withDeadlineTask() throws IOException {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ndhhh"},"content":"        Path filePath \u003d tempDir.resolve(\"tasks.txt\");","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ndhhh"},"content":"        Files.write(filePath, Arrays.asList(\"D|0|Submit report|25/12/2025\"));","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ndhhh"},"content":"        Storage storage \u003d new Storage(filePath.toString());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ndhhh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load(ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ndhhh"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ndhhh"},"content":"        Task t \u003d tasks.get(0);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ndhhh"},"content":"        assertTrue(t instanceof DeadlineTask);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ndhhh"},"content":"        assertEquals(\"Submit report\", t.getName());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ndhhh"},"content":"        assertFalse(t.isDone());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ndhhh"},"content":"        assertEquals(LocalDate.of(2025, 12, 25), ((DeadlineTask) t).getDeadline());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ndhhh"},"content":"    @Test","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ndhhh"},"content":"    void testLoad_withEventTask() throws IOException {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ndhhh"},"content":"        Path filePath \u003d tempDir.resolve(\"tasks.txt\");","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ndhhh"},"content":"        Files.write(filePath, Arrays.asList(\"E|0|Concert|25/12/2025 18:00|20:00\"));","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ndhhh"},"content":"        Storage storage \u003d new Storage(filePath.toString());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ndhhh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load(ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ndhhh"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ndhhh"},"content":"        Task t \u003d tasks.get(0);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ndhhh"},"content":"        assertTrue(t instanceof EventTask);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ndhhh"},"content":"        EventTask e \u003d (EventTask) t;","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ndhhh"},"content":"        assertEquals(\"Concert\", e.getName());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ndhhh"},"content":"        assertEquals(LocalDateTime.of(2025, 12, 25, 18, 0), e.getStart());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ndhhh"},"content":"        assertEquals(LocalTime.of(20, 0), e.getEnd());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ndhhh"},"content":"    @Test","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ndhhh"},"content":"    void testSaveAndReload_tasksPersist() throws IOException {","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ndhhh"},"content":"        Path filePath \u003d tempDir.resolve(\"tasks.txt\");","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ndhhh"},"content":"        Storage storage \u003d new Storage(filePath.toString());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ndhhh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ndhhh"},"content":"        taskList.addTask(new TodoTask(\"Laundry\", false));","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ndhhh"},"content":"        taskList.addTask(new DeadlineTask(\"Project\", false, LocalDate.of(2025, 1, 1)));","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ndhhh"},"content":"        taskList.addTask(new EventTask(\"Party\", true,","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ndhhh"},"content":"                LocalDateTime.of(2025, 2, 2, 18, 0),","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ndhhh"},"content":"                LocalTime.of(23, 0)));","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ndhhh"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ndhhh"},"content":"        ArrayList\u003cTask\u003e reloaded \u003d storage.load(ui);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ndhhh"},"content":"","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ndhhh"},"content":"        assertEquals(3, reloaded.size());","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ndhhh"},"content":"        assertTrue(reloaded.get(0) instanceof TodoTask);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ndhhh"},"content":"        assertTrue(reloaded.get(1) instanceof DeadlineTask);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ndhhh"},"content":"        assertTrue(reloaded.get(2) instanceof EventTask);","lastModifiedDate":"2025-08-28T16:48:03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ndhhh"},"content":"    }","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ndhhh"},"content":"}","lastModifiedDate":"2025-08-23T19:38:14","isFullCredit":false}],"authorContributionMap":{"ndhhh":112}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ndhhh"},"content":"todo suck cock","lastModifiedDate":"2025-08-17T23:32:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ndhhh"},"content":"event heheho /from Tuesday 1am /to Wednesday 5pm","lastModifiedDate":"2025-08-17T23:32:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ndhhh"},"content":"list","lastModifiedDate":"2025-08-17T23:32:45","isFullCredit":false}],"authorContributionMap":{"ndhhh":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ndhhh"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Johnny.java","lastModifiedDate":"2025-08-17T23:32:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ndhhh"},"content":"java -classpath ..\\bin Johnny \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-17T23:32:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":19,"ndhhh":2}}]
