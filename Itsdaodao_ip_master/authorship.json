[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"# george.George project template","lastModifiedDate":"2025-09-09T12:45:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"1. After that, locate the `src/main/java/george.George.java` file, right-click it, and choose `Run george.George.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-09-09T12:45:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-16T09:21:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"java {","lastModifiedDate":"2025-09-09T15:21:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"    toolchain {","lastModifiedDate":"2025-09-09T15:21:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"        languageVersion \u003d JavaLanguageVersion.of(17)","lastModifiedDate":"2025-09-09T15:21:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T15:21:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T15:21:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T15:21:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"    mainClass.set(\"george.Launcher\")","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"    archiveBaseName \u003d \"george\"","lastModifiedDate":"2025-09-16T09:21:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-09-09T15:21:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-16T09:21:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"checkstyle{","lastModifiedDate":"2025-09-16T09:21:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-16T09:21:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-16T09:21:31","isFullCredit":false}],"authorContributionMap":{"-":39,"Itsdaodao":30}},{"path":"src/main/java/george/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"    @FXML","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"    @FXML","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"        try {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"    private void flip() {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"        db.flip();","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"        return db;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":60}},{"path":"src/main/java/george/George.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george;","lastModifiedDate":"2025-09-09T11:54:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:54:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-21T17:08:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"import george.command.Command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import george.command.CommandParser;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"import george.command.ExitCommand;","lastModifiedDate":"2025-09-09T11:54:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-09T11:54:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"import george.ui.Ui;","lastModifiedDate":"2025-09-09T11:54:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-21T17:08:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":" * Main class for the George task management application.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":" * Coordinates the user interface, command parsing, and task management.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"public class George {","lastModifiedDate":"2025-08-21T16:48:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    private static final String fileName \u003d \"george.txt\";","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"    private final Ui ui;","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    private TaskManager manager;","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"    private boolean isInitialised \u003d false;","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T11:56:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a George application instance.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    public George() {","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-21T23:15:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"     * Main entry point for the George application.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"     * @param args Command line arguments (not used)","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-21T16:48:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"        George george \u003d new George();","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"        george.run();","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"     * Runs the main application loop, handling initialization and user interaction.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"    private void run() {","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"        try {","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"            TaskManager manager \u003d start();","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"            echo(manager);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"            ui.showError(\"Error starting taskmanager: \" + e.getMessage());","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-21T23:15:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-21T17:08:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"     * Initializes the task manager and loads existing tasks from storage.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"     * @return An initialized TaskManager instance","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"     * @throws IOException If an error occurs during task loading","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"    private TaskManager start() throws IOException {","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"        TaskManager manager \u003d new TaskManager(fileName);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"        manager.load();","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"        isInitialised \u003d true;","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"        return manager;","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"     * @param input The input given by the user.","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"     * @return A string that is the response of the chatbot to the user.","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"        try {","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"            // Initialize TaskManager if not already done","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"            if (!isInitialised) {","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"                initializeTaskManager();","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"            }","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"            Command command \u003d CommandParser.parse(input);","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"            String response \u003d command.execute(manager);","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Itsdaodao"},"content":"            return response;","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Itsdaodao"},"content":"        } catch (GeorgeException e) {","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Itsdaodao"},"content":"            return e.toString();","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Itsdaodao"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Itsdaodao"},"content":"            return \"Please provide a valid task number!\";","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Itsdaodao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Itsdaodao"},"content":"            return \"Error loading tasks: \" + e.getMessage();","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Itsdaodao"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Itsdaodao"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Itsdaodao"},"content":"     * Initializes the task manager and loads existing tasks from storage.","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Itsdaodao"},"content":"     * @throws IOException If an error occurs during task loading","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Itsdaodao"},"content":"    private void initializeTaskManager() throws IOException {","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Itsdaodao"},"content":"        manager \u003d new TaskManager(fileName);","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Itsdaodao"},"content":"        manager.load();","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Itsdaodao"},"content":"        isInitialised \u003d true;","lastModifiedDate":"2025-09-19T17:25:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Itsdaodao"},"content":"     * Main command loop that reads user input, parses commands, and executes them.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Itsdaodao"},"content":"     * @param manager The TaskManager instance to operate on","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Itsdaodao"},"content":"    private void echo(TaskManager manager) {","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Itsdaodao"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-21T23:15:43","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T01:20:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Itsdaodao"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2025-08-22T11:56:32","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Itsdaodao"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-08-21T22:57:25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Itsdaodao"},"content":"            try {","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Itsdaodao"},"content":"                Command command \u003d CommandParser.parse(input);","lastModifiedDate":"2025-09-09T10:49:03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Itsdaodao"},"content":"                command.execute(manager);","lastModifiedDate":"2025-09-09T10:49:03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:49:03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Itsdaodao"},"content":"                if (command instanceof ExitCommand) {","lastModifiedDate":"2025-09-09T10:49:03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Itsdaodao"},"content":"                    break;","lastModifiedDate":"2025-08-21T22:57:25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Itsdaodao"},"content":"                }","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Itsdaodao"},"content":"            } catch (GeorgeException e) {","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Itsdaodao"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Itsdaodao"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-09T10:49:03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Itsdaodao"},"content":"                System.out.println(\"Please provide a valid task number!\");","lastModifiedDate":"2025-09-09T10:49:03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Itsdaodao"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-09T10:49:03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Itsdaodao"},"content":"                System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2025-09-09T10:49:03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Itsdaodao"},"content":"            }","lastModifiedDate":"2025-08-21T22:57:25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-08-21T22:57:25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Itsdaodao"},"content":"        scanner.close();","lastModifiedDate":"2025-08-21T23:15:43","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-21T16:48:34","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-08-21T16:48:34","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":132}},{"path":"src/main/java/george/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"public class Launcher {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":12}},{"path":"src/main/java/george/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":" * A GUI for George using FXML.","lastModifiedDate":"2025-09-19T17:28:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"    private George george \u003d new George();","lastModifiedDate":"2025-09-19T17:28:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"        try {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"            MainWindow controller \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"            controller.setGeorge(george);","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"            controller.setStage(stage); // Pass the stage reference","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"            stage.setTitle(\"George\"); // Optional: set a title for the window","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"            stage.show();","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":36}},{"path":"src/main/java/george/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"    @FXML","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"    @FXML","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"    @FXML","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    @FXML","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    private George george;","lastModifiedDate":"2025-09-19T17:28:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"    private Stage stage;","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"    @FXML","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"    public void setGeorge(George g) {","lastModifiedDate":"2025-09-19T17:28:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"        george \u003d g;","lastModifiedDate":"2025-09-19T17:28:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"    /** Sets the stage for closing the application */","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"    @FXML","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"        String response \u003d george.getResponse(input);","lastModifiedDate":"2025-09-19T17:28:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"        );","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"        // Check if the user entered the exit command","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"            // Add a slight delay before closing to show the response","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"            new Thread(() -\u003e {","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"                try {","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"                    Thread.sleep(1000); // Wait 1 second to show the response","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"                    Platform.runLater(() -\u003e {","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"                        if (stage !\u003d null) {","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"                            stage.close();","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"                        }","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"                        Platform.exit();","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"                    });","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"                    Thread.currentThread().interrupt();","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"                }","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"            }).start();","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-20T11:29:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":79}},{"path":"src/main/java/george/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T15:46:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * Represents an abstract command that can be executed by the George chatbot.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" * This is the base class for all other specific command implementations.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":" * Each command knows how to execute itself and provide its command word identifier.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-05T15:46:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"     * Executes the command using the provided TaskManager.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"     * @param manager The TaskManager that handles task operations and state","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"     * @return The response text that will be sent to the GUI.","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If an error occurs during command execution","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"    public abstract String execute(TaskManager manager) throws GeorgeException;","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the command word that identifies this specific command type.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"     * This is typically the first word entered by the user that triggers this command.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"     * @return The command word as a String","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    public abstract String getCommandWord();","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-05T15:46:17","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":27}},{"path":"src/main/java/george/command/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":" * Parses user input strings into corresponding Command objects.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * This class handles the interpretation of user commands and converts them","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" * into executable command objects that can perform the requested operations.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"public class CommandParser {","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"     * Parses the user input string and returns the corresponding Command object.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"     * @param input The raw input string entered by the user","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"     * @return The Command object corresponding to the user input","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the input format is invalid or cannot be parsed","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    public static Command parse(String input) throws GeorgeException {","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"        String commandWord \u003d input.contains(\" \") ? input.substring(0, input.indexOf(\" \")) : input;","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"        commandWord \u003d commandWord.toLowerCase();","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"        return switch (commandWord) {","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"        case \"bye\" -\u003e new ExitCommand();","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"        case \"list\" -\u003e new ListCommand();","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"        case \"help\" -\u003e new HelpCommand();","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"        case \"format\" -\u003e new FormatCommand();","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"        case \"mark\" -\u003e parseMarkCommand(input);","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"        case \"unmark\" -\u003e parseUnmarkCommand(input);","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"        case \"todo\" -\u003e parseTodoCommand(input);","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"        case \"deadline\" -\u003e parseDeadlineCommand(input);","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"        case \"event\" -\u003e parseEventCommand(input);","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"        case \"delete\" -\u003e parseDeleteCommand(input);","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"        default -\u003e new InvalidCommand();","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"        };","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"    private static MarkCommand parseMarkCommand(String input) {","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"        int taskNumber \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"        return new MarkCommand(taskNumber);","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"    private static UnmarkCommand parseUnmarkCommand(String input) {","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"        int taskNumber \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"        return new UnmarkCommand(taskNumber);","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"    private static ToDoCommand parseTodoCommand(String input) {","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"        String description \u003d input.substring(5);","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"        return new ToDoCommand(description);","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"    private static DeleteCommand parseDeleteCommand(String input) {","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"        int taskNumber \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"        return new DeleteCommand(taskNumber);","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"    private static DeadlineCommand parseDeadlineCommand(String input) throws GeorgeException {","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"        String content \u003d input.substring(9);","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"        String[] parts \u003d content.split(\"/by\");","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"            throw new GeorgeException(\"Deadline format should be: deadline description /by date\");","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"        String date \u003d parts[1].trim();","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"        return new DeadlineCommand(description, date);","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"    private static EventCommand parseEventCommand(String input) throws GeorgeException {","lastModifiedDate":"2025-09-12T15:17:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"        String content \u003d input.substring(6);","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"        String[] splits \u003d content.split(\"/from |/to \");","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"        if (splits.length \u003c 3) {","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"            throw new GeorgeException(\"Event format should be: event description /from start /to end\");","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"        String description \u003d splits[0].trim();","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"        String start \u003d splits[1].trim();","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"        String end \u003d splits[2].trim();","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"        return new EventCommand(description, start, end);","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T10:44:59","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":79}},{"path":"src/main/java/george/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * Represents a command to add a deadline task to the task manager.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" * A deadline task consists of a description and a specific due date.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    private final String description;","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"    private final String date;","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a DeadlineCommand with the specified description and due date.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"     * @param date The due date of the deadline task","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    public DeadlineCommand(String description, String date) {","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) throws GeorgeException {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"        return manager.addDeadlineTask(description, date);","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"        return \"deadline\";","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":34}},{"path":"src/main/java/george/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * Represents a command to delete a task from the task manager.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" * The task to be deleted is identified by its task number.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a DeleteCommand with the specified task number.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"     * @param taskNumber The number of the task to be deleted","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) throws GeorgeException {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"        return manager.deleteTask(taskNumber);","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"        return \"delete\";","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":31}},{"path":"src/main/java/george/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * Represents a command to add an event task to the task manager.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" * An event task consists of a description, start time, and end time.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    private final String description;","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"    private final String start;","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"    private final String end;","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs an EventCommand with the specified description, start time, and end time.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the event task","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"     * @param start The start time of the event","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"     * @param end The end time of the event","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"    public EventCommand(String description, String start, String end) {","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) throws GeorgeException {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"        return manager.addEventTask(description, start, end);","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"        return \"event\";","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T10:16:13","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":37}},{"path":"src/main/java/george/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":" * Represents a command to exit the George application.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * This command displays a farewell message and terminates the program.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"        String exit \u003d \"I love bananas \"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"                + \"\\nplease bring bananas next time\";","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"        return exit;","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"        return \"bye\";","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":23}},{"path":"src/main/java/george/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import java.util.List;","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"import george.task.Task;","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":" * Represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"    private String keyword;","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"     * Executes the find command by searching for tasks containing the keyword.","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"     * @param manager The TaskManager containing all tasks.","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"     * @return the output text for the GUI.","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If there\u0027s an error during execution.","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) throws GeorgeException {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"        if (keyword \u003d\u003d null || keyword.trim().isEmpty()) {","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"            throw new GeorgeException(\"Please provide a keyword to search for.\");","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"        List\u003cTask\u003e matchingTasks \u003d manager.findTasks(keyword);","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"            return \"No matching tasks found for: \" + keyword;","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"        } else {","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"            StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"                response.append((i + 1) + \".\" + matchingTasks.get(i).getDisplayText() + \"\\n\");","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"            }","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"            return response.toString();","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"        return \"find\";","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":53}},{"path":"src/main/java/george/command/FormatCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * Represents a command to display supported date/time formats.","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" * Shows examples of valid date formats that can be used with the application.","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"public class FormatCommand extends Command {","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a FormatCommand.","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"    public FormatCommand() {","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"        // No parameters needed for format command","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) throws GeorgeException {","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"        return getFormatMessage();","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"        return \"format\";","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the date format help message based on actual supported formats.","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"     * @return A formatted string with exact date format examples","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"    private String getFormatMessage() {","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"        return \"Supported Date/Time Formats:\\n\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"                + \"**Date Formats:**\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"                + \"yyyy-MM-dd (e.g. 2024-12-25)\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"                + \"yyyy/MM/dd (e.g. 2024/12/25)\\n\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"                + \"**DateTime Formats:**\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"                + \"yyyy-MM-dd HHmm (e.g. 2024-12-25 1430)\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"                + \"yyyy-MM-dd HH:mm (e.g. 2024-12-25 14:30)\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"                + \"yyyy/MM/dd HHmm (e.g. 2024/12/25 1430)\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"                + \"yyyy/MM/dd HH:mm (e.g. 2024/12/25 14:30)\\n\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"                + \"**Note:** Dates without time will default to start of day (00:00)\";","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":45}},{"path":"src/main/java/george/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * Represents a command to display help information about available commands.","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" * Shows a concise list of all supported commands and their usage.","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a HelpCommand.","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"    public HelpCommand() {","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"        // No parameters needed for help command","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) throws GeorgeException {","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"        return getHelpMessage();","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"        return \"help\";","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the help message containing all available commands.","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"     * @return A formatted string with command information","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"    private String getHelpMessage() {","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"        return \"Here are the commands I understand:\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"                + \"1. todo \u003cdescription\u003e - Add a todo task\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"                + \"2. deadline \u003cdescription\u003e /by \u003cdatetime\u003e - Add a deadline task\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"                + \"3. event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e - Add an event task\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"                + \"4. list - Show all tasks\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"                + \"5. mark \u003cnumber\u003e - Mark task as done\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"                + \"6. unmark \u003cnumber\u003e - Mark task as not done\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"                + \"7. delete \u003cnumber\u003e - Remove a task\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"                + \"8. find \u003ckeyword\u003e - Search for tasks\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"                + \"9. format - Show date/time formats\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"                + \"10. help - Show this message\\n\"","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"                + \"11. bye - Exit the application\";","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-20T17:38:08","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":47}},{"path":"src/main/java/george/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * Represents an invalid or unrecognized command.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" * This command is used when user input does not match any known command format.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) throws GeorgeException {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"        throw new GeorgeException(\"What are you saying???\");","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"        return \"invalid\";","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T10:19:55","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":20}},{"path":"src/main/java/george/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":" * Represents a command to list all tasks in the task manager.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * This command displays all currently stored tasks to the user.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"        return manager.listTasks();","lastModifiedDate":"2025-09-19T17:29:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"        return \"list\";","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T08:53:00","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":19}},{"path":"src/main/java/george/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * Represents a command to mark a task as done in the task manager.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" * The task to be marked is identified by its task number.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a MarkCommand with the specified task number.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"     * @param taskNumber The number of the task to be marked as done","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) throws GeorgeException {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"        return manager.markTaskAsDone(taskNumber);","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"        return \"mark\";","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":31}},{"path":"src/main/java/george/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * Represents a command to add a todo task to the task manager.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" * A todo task consists of a description without any date or time constraints.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    private final String description;","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a ToDoCommand with the specified description.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) throws GeorgeException {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"        return manager.addToDoTask(description);","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"        return \"todo\";","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":31}},{"path":"src/main/java/george/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.command;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import george.task.TaskManager;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * Represents a command to unmark a task as not done in the task manager.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" * The task to be unmarked is identified by its task number.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    private final int taskNumber;","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs an UnmarkCommand with the specified task number.","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"     * @param taskNumber The number of the task to be marked as not done","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:31:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    public String execute(TaskManager manager) throws GeorgeException {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"        return manager.markTaskAsNotDone(taskNumber);","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    public String getCommandWord() {","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"        return \"unmark\";","lastModifiedDate":"2025-09-09T09:59:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T09:55:23","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":31}},{"path":"src/main/java/george/exceptions/GeorgeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.exceptions;","lastModifiedDate":"2025-09-09T11:40:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":" * Represents a custom exception specific to the George application.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":" * This exception is thrown when George encounters invalid input or operations.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"public class GeorgeException extends Exception {","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a GeorgeException with the specified error message.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"     * @param message The detail message explaining the exception","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"    public GeorgeException(String message) {","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"        super(message);","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"        return \"ARE YOU BANANAS?! \" + getMessage();","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":21}},{"path":"src/main/java/george/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.task;","lastModifiedDate":"2025-09-09T11:48:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:48:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"import george.utils.DateTimeParser;","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":" * Extends the base Task class with deadline-specific functionality.","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a DeadlineTask with description and deadline string.","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"     * @param deadline The deadline time string to be parsed","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the description is invalid or deadline time cannot be parsed","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"    public DeadlineTask(String description, String deadline) throws GeorgeException {","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"        this(description, deadline, false);","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a DeadlineTask with description, deadline string, and completion status.","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"     * @param deadline The deadline time string to be parsed","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"     * @param isDone The completion status of the task","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the description is invalid or deadline time cannot be parsed","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"    public DeadlineTask(String description, String deadline, boolean isDone) throws GeorgeException {","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"        super(description);","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"        assert deadline !\u003d null : \"Deadline string cannot be null\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"        assert !deadline.trim().isEmpty() : \"Deadline string cannot be empty\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"        this.deadline \u003d DateTimeParser.parseDateTime(deadline);","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"        assert this.deadline !\u003d null : \"Deadline should be properly parsed and set\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"        assert this.deadline.isAfter(LocalDateTime.MIN) : \"Deadline should be a valid date\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a DeadlineTask with description, deadline as LocalDateTime object, and completion status.","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"     * This constructor is used when the deadline datetime is already parsed and available.","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"     * @param deadline The deadline time as a LocalDateTime object","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"     * @param isDone The completion status of the task","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"    public DeadlineTask(String description, LocalDateTime deadline, boolean isDone) throws GeorgeException {","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"        super(description);","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"        assert deadline !\u003d null : \"Deadline LocalDateTime cannot be null\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"        assert deadline.isAfter(LocalDateTime.MIN) : \"Deadline should be a valid date\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"    public String getType() {","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"        return \"[D]\";","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the formatted deadline string.","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"     * @return The deadline formatted as \"MMM dd yyyy\" (e.g., \"Jan 15 2024\")","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"    public String getDeadline() {","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"        assert deadline !\u003d null : \"Deadline should not be null when calling getDeadline()\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Itsdaodao"},"content":"        String formattedDeadline \u003d deadline.format(formatter);","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Itsdaodao"},"content":"        assert formattedDeadline !\u003d null : \"Formatted deadline cannot be null\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Itsdaodao"},"content":"        assert formattedDeadline.length() \u003e\u003d 11","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Itsdaodao"},"content":"                : \"Formatted deadline should be at least 11 characters (e.g., \u0027Jan 15 2024\u0027)\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Itsdaodao"},"content":"        assert formattedDeadline.matches(\"[A-Za-z]{3} \\\\d{1,2} \\\\d{4}\")","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Itsdaodao"},"content":"                : \"Formatted deadline should match pattern \u0027MMM dd yyyy\u0027\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Itsdaodao"},"content":"        return formattedDeadline;","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Itsdaodao"},"content":"    public String getDisplayText() {","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Itsdaodao"},"content":"        assert deadline !\u003d null : \"Deadline should not be null when generating display text\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Itsdaodao"},"content":"        String displayText \u003d this.getType() + this.getStatus()","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Itsdaodao"},"content":"                + \" \" + this.getDescription() + \" (by: \" + this.getDeadline() + \")\";","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Itsdaodao"},"content":"        assert displayText !\u003d null : \"Display text cannot be null\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Itsdaodao"},"content":"        assert displayText.contains(\"[D]\") : \"Display text should contain task type\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Itsdaodao"},"content":"        assert displayText.contains(this.getDescription()) : \"Display text should contain description\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Itsdaodao"},"content":"        assert displayText.contains(\"(by:\") : \"Display text should contain deadline indicator\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Itsdaodao"},"content":"        assert displayText.contains(this.getDeadline()) : \"Display text should contain formatted deadline\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Itsdaodao"},"content":"        return displayText;","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Itsdaodao"},"content":"    public String toString() {","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Itsdaodao"},"content":"        return getType().charAt(1) + \" | \" + (isDone() ? 1 : 0) + \" | \" + getDescription() + \" | \" + getDeadline();","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":111}},{"path":"src/main/java/george/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.task;","lastModifiedDate":"2025-09-09T11:48:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:48:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import george.utils.DateTimeParser;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":" * Represents an event task with specific start and end times.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":" * Extends the base Task class with event-specific functionality.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs an EventTask with description, start time, and end time strings.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the event task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"     * @param startTime The start time string to be parsed","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"     * @param endTime The end time string to be parsed","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the description is invalid or times cannot be parsed","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    public EventTask(String description, String startTime, String endTime) throws GeorgeException {","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"        this(description, startTime, endTime, false);","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs an EventTask with description, start time, and end time as LocalDateTime objects.","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"     * This constructor is used when datetime objects are already parsed and available.","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the event task","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"     * @param startTime The start time as a LocalDateTime object","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"     * @param endTime The end time as a LocalDateTime object","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"    public EventTask(String description, LocalDateTime startTime, LocalDateTime endTime, boolean isDone)","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"            throws GeorgeException {","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"        super(description);","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"        assert startTime !\u003d null : \"Start time cannot be null\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"        assert endTime !\u003d null : \"End time cannot be null\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"        assert !startTime.isAfter(endTime) : \"Start time must be before or equal to end time\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs an EventTask with description, start time, end time, and completion status.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the event task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"     * @param startTime The start time string to be parsed","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"     * @param endTime The end time string to be parsed","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"     * @param isDone The completion status of the task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the description is invalid or times cannot be parsed","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"    public EventTask(String description, String startTime, String endTime, boolean isDone) throws GeorgeException {","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"        super(description);","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"        assert startTime !\u003d null \u0026\u0026 !startTime.trim().isEmpty() : \"Start time string cannot be null or empty\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"        assert endTime !\u003d null \u0026\u0026 !endTime.trim().isEmpty() : \"End time string cannot be null or empty\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"        this.startTime \u003d DateTimeParser.parseDateTime(startTime);","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"        this.endTime \u003d DateTimeParser.parseDateTime(endTime);","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"        assert this.startTime !\u003d null : \"Parsed start time cannot be null\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"        assert this.endTime !\u003d null : \"Parsed end time cannot be null\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"        assert !this.startTime.isAfter(this.endTime) : \"Start time must be before or equal to end time\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the type identifier for event tasks.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"     * @return The string \"[E]\" representing an event task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"    public String getType() {","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"        return \"[E]\";","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the formatted display text for the event task.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Itsdaodao"},"content":"     * @return A formatted string containing task type, status, description, and time range","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Itsdaodao"},"content":"    public String getDisplayText() {","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Itsdaodao"},"content":"        assert startTime !\u003d null : \"Start time must be initialized before calling getDisplayText\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Itsdaodao"},"content":"        assert endTime !\u003d null : \"End time must be initialized before calling getDisplayText\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Itsdaodao"},"content":"        return this.getType() + this.getStatus() + \" \" + this.getDescription()","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Itsdaodao"},"content":"                + \" (from: \" + this.getStartTime() + \" to: \" + this.getEndTime() + \")\";","lastModifiedDate":"2025-09-09T19:32:55","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:32:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:32:55","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the formatted start time string.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Itsdaodao"},"content":"     * @return The start time formatted as \"MMM dd yyyy HH:mm\"","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Itsdaodao"},"content":"    public String getStartTime() {","lastModifiedDate":"2025-09-09T19:32:55","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Itsdaodao"},"content":"        assert startTime !\u003d null : \"Start time cannot be null when formatting\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Itsdaodao"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-09-09T19:32:55","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Itsdaodao"},"content":"        return startTime.format(formatter);","lastModifiedDate":"2025-09-09T19:32:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:32:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:32:55","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the formatted end time string.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Itsdaodao"},"content":"     * @return The end time formatted as \"MMM dd yyyy HH:mm\"","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Itsdaodao"},"content":"    public String getEndTime() {","lastModifiedDate":"2025-09-09T19:32:55","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Itsdaodao"},"content":"        assert endTime !\u003d null : \"End time cannot be null when formatting\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Itsdaodao"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-09-09T19:32:55","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Itsdaodao"},"content":"        return endTime.format(formatter);","lastModifiedDate":"2025-09-09T19:32:55","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Itsdaodao"},"content":"     * Returns a string representation for storage purposes.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Itsdaodao"},"content":"     * @return A pipe-separated string containing task type, status, description, and times","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Itsdaodao"},"content":"    public String toString() {","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Itsdaodao"},"content":"        assert startTime !\u003d null : \"Start time must be initialized for toString\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Itsdaodao"},"content":"        assert endTime !\u003d null : \"End time must be initialized for toString\";","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-20T10:27:50","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Itsdaodao"},"content":"        return getType().charAt(1) + \" | \" + (isDone() ? 1 : 0) + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Itsdaodao"},"content":"                + getStartTime() + \" | \" + getEndTime();","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":128}},{"path":"src/main/java/george/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.task;","lastModifiedDate":"2025-09-09T11:48:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:48:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":" * Represents an abstract task with basic properties and behaviors.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * This serves as the base class for all specific task types in the application.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"public abstract class Task {","lastModifiedDate":"2025-09-09T11:48:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"    protected String description;","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the description is null or empty","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"    public Task(String description) throws GeorgeException {","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"            throw new GeorgeException(\"You can\u0027t have an empty task. Please do something!\");","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"        return description;","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"        return isDone;","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"     * @return [X] if done, [ ] if not done","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"    public String getStatus() {","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the type identifier of the task.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"     * @return The task type as a String","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"    abstract String getType();","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the formatted display text of the task.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"     * @return The formatted task information for display","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"    public abstract String getDisplayText();","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-08-22T01:20:09","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":64}},{"path":"src/main/java/george/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.task;","lastModifiedDate":"2025-09-09T11:48:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:48:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-22T01:20:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:20:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"import george.utils.Storage;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T01:20:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":" * Manages the collection of tasks including adding, deleting, marking, and listing tasks.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":" * Handles persistence of tasks through the Storage class.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"public class TaskManager {","lastModifiedDate":"2025-08-22T01:20:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"    private List\u003cTask\u003e tasksList;","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a TaskManager with the specified data file name for storage.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"     * @param dataFileName The name of the file to store tasks data","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    public TaskManager(String dataFileName) {","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"        this.tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"        this.storage \u003d new Storage(dataFileName);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T01:20:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"     * Adds a new todo task to the task list.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"     * @return The display text of adding To Do Task","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the task creation fails","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"    public String addToDoTask(String description) throws GeorgeException {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"        Task task \u003d new ToDoTask(description);","lastModifiedDate":"2025-08-22T10:05:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"        tasksList.add(task);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"        saveTasks();","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"        return addTask(task.getDisplayText());","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T10:05:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T10:05:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"     * Adds a new deadline task to the task list.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"     * @param date The deadline date string","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"     * @return The display text of adding Deadline Task.","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the task creation fails","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"    public String addDeadlineTask(String description, String date) throws GeorgeException {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"        Task task \u003d new DeadlineTask(description, date);","lastModifiedDate":"2025-08-22T10:05:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"        tasksList.add(task);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"        saveTasks();","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"        return addTask(task.getDisplayText());","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T10:05:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T10:05:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"     * Adds a new event task to the task list.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the event task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"     * @param startTime The start time string of the event","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"     * @param endTime The end time string of the event","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"     * @return The display text of adding Event Task.","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the task creation fails","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"    public String addEventTask(String description, String startTime, String endTime) throws GeorgeException {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"        Task task \u003d new EventTask(description, startTime, endTime);","lastModifiedDate":"2025-08-22T10:05:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"        tasksList.add(task);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"        saveTasks();","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"        return addTask(task.getDisplayText());","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T10:05:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T10:05:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"     * Handles the common operations after adding any task.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"     * @param displayText The formatted display text of the added task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"     * @return The display message for adding a task.","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"    public String addTask(String displayText) {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Itsdaodao"},"content":"        String message \u003d \"You get a task. I get a banana!\\n\"","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Itsdaodao"},"content":"                + displayText + \"\\nYou now have \"","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Itsdaodao"},"content":"                + tasksList.size() + \" things to do!!!\\n\"","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Itsdaodao"},"content":"                + \"Remember to do them NOW!!!\\n\";","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Itsdaodao"},"content":"        return message;","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T15:50:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T15:50:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Itsdaodao"},"content":"     * Deletes a task from the task list by its number.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Itsdaodao"},"content":"     * @param taskNumber The number of the task to delete (1-based index)","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Itsdaodao"},"content":"     * @return The display message of deleting a task.","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Itsdaodao"},"content":"    public String deleteTask(int taskNumber) {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Itsdaodao"},"content":"        Task removedTask \u003d tasksList.remove(taskNumber - 1);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Itsdaodao"},"content":"        saveTasks();","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Itsdaodao"},"content":"        String message \u003d \"george.George will turn this task into a banana:\\n\"","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Itsdaodao"},"content":"                + removedTask.getDisplayText() + \"\\nYou now have \"","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Itsdaodao"},"content":"                + tasksList.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Itsdaodao"},"content":"        return message;","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T01:20:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T01:20:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Itsdaodao"},"content":"     * Lists all tasks in the task list with their status and descriptions.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Itsdaodao"},"content":"     * @return A formatted string containing all tasks or a message if the list is empty","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Itsdaodao"},"content":"    public String listTasks() {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Itsdaodao"},"content":"        if (tasksList.isEmpty()) {","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Itsdaodao"},"content":"            return \"Wow you have no tasks! Here is a banana!\";","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-08-22T02:52:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T02:52:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Itsdaodao"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Itsdaodao"},"content":"        result.append(\"OOO OOO AAA AAA here is all your tasks\\n\");","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Itsdaodao"},"content":"        for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Itsdaodao"},"content":"            Task task \u003d tasksList.get(i);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Itsdaodao"},"content":"            result.append((i + 1) + \".\" + task.getDisplayText() + \"\\n\");","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-08-22T01:20:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Itsdaodao"},"content":"        result.append(\"EEE EEE AAA AAA remember to do them all\");","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Itsdaodao"},"content":"        return result.toString();","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T01:20:09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T02:56:51","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Itsdaodao"},"content":"     * Marks a task as done by its number.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Itsdaodao"},"content":"     * @param taskNumber The number of the task to mark as done (1-based index)","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Itsdaodao"},"content":"     * @return A success message with the marked task details","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Itsdaodao"},"content":"    public String markTaskAsDone(int taskNumber) {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Itsdaodao"},"content":"        Task task \u003d tasksList.get(taskNumber - 1);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-22T02:56:51","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Itsdaodao"},"content":"        saveTasks();","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Itsdaodao"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Itsdaodao"},"content":"        result.append(\"Good job! Here is a banana for you!\\n\");","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Itsdaodao"},"content":"        result.append(\"[X] \" + task.getDescription());","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Itsdaodao"},"content":"        return result.toString();","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T02:56:51","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T02:56:51","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Itsdaodao"},"content":"     * Marks a task as not done by its number.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Itsdaodao"},"content":"     * @param taskNumber The number of the task to mark as not done (1-based index)","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Itsdaodao"},"content":"     * @return An encouragement message with the unmarked task details","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Itsdaodao"},"content":"    public String markTaskAsNotDone(int taskNumber) {","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Itsdaodao"},"content":"        Task task \u003d tasksList.get(taskNumber - 1);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-08-22T02:56:51","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Itsdaodao"},"content":"        saveTasks();","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Itsdaodao"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Itsdaodao"},"content":"        result.append(\"Come on! You can do it!\\n\");","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Itsdaodao"},"content":"        result.append(\"[ ] \" + task.getDescription());","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Itsdaodao"},"content":"        return result.toString();","lastModifiedDate":"2025-09-19T17:15:44","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T02:56:51","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Itsdaodao"},"content":"     * Saves the current task list to storage.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Itsdaodao"},"content":"    private void saveTasks() {","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Itsdaodao"},"content":"        try {","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Itsdaodao"},"content":"            storage.saveTasks(tasksList);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Itsdaodao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Itsdaodao"},"content":"            System.out.println(\"Error while saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Itsdaodao"},"content":"     * Finds tasks containing the specified keyword in their description.","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Itsdaodao"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Itsdaodao"},"content":"     * @return A list of matching tasks.","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Itsdaodao"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Itsdaodao"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Itsdaodao"},"content":"        for (Task task : tasksList) {","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Itsdaodao"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Itsdaodao"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Itsdaodao"},"content":"            }","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Itsdaodao"},"content":"        return matchingTasks;","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:32:57","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Itsdaodao"},"content":"     * Loads tasks from storage into the task list.","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Itsdaodao"},"content":"     * @throws IOException If an I/O error occurs during loading","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Itsdaodao"},"content":"    public void load() throws IOException {","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Itsdaodao"},"content":"        tasksList \u003d storage.loadTasks();","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-08-22T01:20:09","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":195}},{"path":"src/main/java/george/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.task;","lastModifiedDate":"2025-09-09T11:48:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:48:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":" * Represents a todo task without any date or time constraints.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":" * Extends the base Task class for basic task functionality.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a ToDoTask with the specified description.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the description is invalid","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"    public ToDoTask(String description) throws GeorgeException {","lastModifiedDate":"2025-08-22T15:43:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"        this(description, false);","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a ToDoTask with description and completion status.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"     * @param isDone The completion status of the task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the description is invalid","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"    public ToDoTask(String description, boolean isDone) throws GeorgeException {","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"        super(description);","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"        assert description !\u003d null : \"Description cannot be null - should be caught by super()\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"        assert !description.trim().isEmpty() : \"Description cannot be empty - should be caught by super()\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"        assert this.getDescription().equals(description) : \"Description should be properly set\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the type identifier for todo tasks.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"     * @return The string \"[T]\" representing a todo task","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"    public String getType() {","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"        return \"[T]\";","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"     * Returns the formatted display text for the todo task.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"     * @return A formatted string containing task type, status, and description","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"    public String getDisplayText() {","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"        String displayText \u003d this.getType() + this.getStatus() + \" \"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"                + this.getDescription();","lastModifiedDate":"2025-08-22T09:43:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"        assert displayText !\u003d null : \"Display text cannot be null\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"        assert displayText.contains(\"[T]\") : \"Display text should contain task type\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"        assert displayText.contains(this.getDescription()) : \"Display text should contain description\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"        assert displayText.contains(\"[\") \u0026\u0026 displayText.contains(\"]\") : \"Display text should contain status brackets\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"        return displayText;","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"     * Returns a string representation for storage purposes.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"     * @return A pipe-separated string containing task type, status, and description","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"    @Override","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"    public String toString() {","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"        String tempString \u003d getType().charAt(1) + \" | \" + (isDone() ? 1 : 0) + \" | \" + getDescription();","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"        assert tempString !\u003d null : \"Storage string cannot be null\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"        assert tempString.startsWith(\"T | \") : \"Storage string should start with \u0027T | \u0027\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"        assert tempString.contains(\" | \") : \"Storage string should contain pipe separators\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"        assert tempString.contains(isDone() ? \" | 1 | \" : \" | 0 | \") : \"Storage string should contain correct status\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"        assert tempString.endsWith(getDescription()) : \"Storage string should end with description\";","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"        return tempString;","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T22:11:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-08-22T09:25:47","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":81}},{"path":"src/main/java/george/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.ui;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":" * Handles user interface interactions for the George application.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":" * Manages displaying messages, greetings, errors, and formatting output.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"public class Ui {","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"    private static final String newLine \u003d \"\"\"","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"            GEORGE the monkey LOVES to eat bananas!\\","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"            \"\"\";","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"    private static final String greeting \u003d \"\"\"","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"            Ooo eee ooo aaa aaa\\s","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"            I am George the Monkey\\","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"            George can help you with?\"\"\";","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"     * Displays the welcome message and introduction when the application starts.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"        System.out.println(greeting);","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"        System.out.println(newLine);","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"     * @param errorMessage The error message to display","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"        System.out.println(\"OOPS!!! \" + errorMessage);","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T11:26:00","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":33}},{"path":"src/main/java/george/utils/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.utils;","lastModifiedDate":"2025-09-09T11:53:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"import java.util.List;","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-12T15:20:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":" * Utility class for parsing date and time strings into LocalDateTime objects.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":" * Supports multiple common datetime formats and provides flexible parsing.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    private static final List\u003cDateTimeFormatter\u003e TIME_FORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"),","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\")","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    );","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    );","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"     * Parses a datetime string into a LocalDateTime object.","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"     * Tries multiple common formats until one succeeds.","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"     * @param dateTimeString the input datetime string","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"     * @return LocalDateTime object representing the parsed datetime","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException if the string cannot be parsed with any known format","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws GeorgeException {","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"        if (dateTimeString \u003d\u003d null || dateTimeString.trim().isEmpty()) {","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"            throw new GeorgeException(\"DateTime string cannot be null or empty\");","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"        String trimmedInput \u003d dateTimeString.trim();","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"        for (DateTimeFormatter formatter : TIME_FORMATTERS) {","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"            try {","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"                return LocalDateTime.parse(trimmedInput, formatter);","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"                continue;","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"            }","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATTERS) {","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"            try {","lastModifiedDate":"2025-09-09T19:03:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"                LocalDate date \u003d LocalDate.parse(trimmedInput, formatter);","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"                continue;","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"            }","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"        throw new GeorgeException(","lastModifiedDate":"2025-09-05T15:32:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"                \"Unable to parse datetime string: \u0027\" + dateTimeString","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"                        + \"\u0027. Supported formats include (yyyy/MM/dd), \"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"                        + \"(yyyy/MM/dd hh:mm).\"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"        );","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"     * Parses a date string in the format \"MMM dd yyyy\" (e.g., \"Apr 25 2025\") into a LocalDateTime object.","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"     * This is specifically for parsing dates that were stored in the file.","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"     * @param dateString the input date string in \"MMM dd yyyy\" format","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"     * @return LocalDateTime object representing the parsed date at start of day","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException if the string cannot be parsed with the expected format","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"    public static LocalDateTime parseStoredDate(String dateString) throws GeorgeException {","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"        if (dateString \u003d\u003d null || dateString.trim().isEmpty()) {","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"            throw new GeorgeException(\"Date string cannot be null or empty\");","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Itsdaodao"},"content":"        try {","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Itsdaodao"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Itsdaodao"},"content":"            LocalDate date \u003d LocalDate.parse(dateString.trim(), formatter);","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Itsdaodao"},"content":"            return date.atStartOfDay();","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Itsdaodao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Itsdaodao"},"content":"            throw new GeorgeException(","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Itsdaodao"},"content":"                    \"Unable to parse stored date string: \u0027\" + dateString","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Itsdaodao"},"content":"                    + \"\u0027. Expected format: MMM dd yyyy (e.g., \u0027Apr 25 2025\u0027)\"","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Itsdaodao"},"content":"            );","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-05T13:53:29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Itsdaodao"},"content":"     * Parses a datetime string in the format \"MMM dd yyyy HH:mm\" (e.g., \"Dec 05 2025 15:00\")","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Itsdaodao"},"content":"     * into a LocalDateTime object. This is specifically for parsing datetime strings that","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Itsdaodao"},"content":"     * were stored in the file for events.","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Itsdaodao"},"content":"     * @param dateTimeString the input datetime string in \"MMM dd yyyy HH:mm\" format","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Itsdaodao"},"content":"     * @return LocalDateTime object representing the parsed datetime","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException if the string cannot be parsed with the expected format","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Itsdaodao"},"content":"    public static LocalDateTime parseStoredDateTime(String dateTimeString) throws GeorgeException {","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Itsdaodao"},"content":"        if (dateTimeString \u003d\u003d null || dateTimeString.trim().isEmpty()) {","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Itsdaodao"},"content":"            throw new GeorgeException(\"DateTime string cannot be null or empty\");","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Itsdaodao"},"content":"        try {","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Itsdaodao"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Itsdaodao"},"content":"            return LocalDateTime.parse(dateTimeString.trim(), formatter);","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Itsdaodao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Itsdaodao"},"content":"            throw new GeorgeException(","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Itsdaodao"},"content":"                    \"Unable to parse stored datetime string: \u0027\" + dateTimeString","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Itsdaodao"},"content":"                            + \"\u0027. Expected format: MMM dd yyyy HH:mm (e.g., \u0027Dec 05 2025 15:00\u0027)\"","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Itsdaodao"},"content":"            );","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":116}},{"path":"src/main/java/george/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.utils;","lastModifiedDate":"2025-09-09T11:53:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:53:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T11:53:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-09T11:39:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"import george.task.DeadlineTask;","lastModifiedDate":"2025-09-09T11:53:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"import george.task.EventTask;","lastModifiedDate":"2025-09-09T11:53:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"import george.task.Task;","lastModifiedDate":"2025-09-09T11:53:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"import george.task.ToDoTask;","lastModifiedDate":"2025-09-09T11:53:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"/**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":" * Handles file storage operations for tasks, including loading and saving tasks","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":" * to a persistent data file. Manages file creation and directory structure.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":" */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"public class Storage {","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"    private static final String FILE_DIRECTORY \u003d \"./data/\";","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"    private final String fileName;","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"    private final Path dataPath;","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"     * Constructs a Storage object with the specified file name.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"     * @param fileName The name of the file to store tasks data","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"        this.dataPath \u003d Paths.get(FILE_DIRECTORY + fileName);","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"     * @return A list of tasks loaded from the file","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"     * @throws IOException If an I/O error occurs during file reading","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"    public List\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"        if (!Files.exists(dataPath)) {","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"            System.out.println(\"File does not exist yet!\");","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"            System.out.println(\"Creating new file\");","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"            ensureDirectoryExists();","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"            return tasks;","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"        try {","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(dataPath);","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"                if (line.trim().isEmpty()) {","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"                    continue;","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"                }","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"                try {","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"                    Task task \u003d parseTaskFromLine(line);","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"                } catch (GeorgeException e) {","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"                    System.out.println(\"Failed to parse this line: \" + line);","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"                }","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"            }","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"            System.out.println(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"        return tasks;","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"     * Saves the list of tasks to the storage file.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"     * @param tasks The list of tasks to be saved","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"     * @throws IOException If an I/O error occurs during file writing","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Itsdaodao"},"content":"        ensureDirectoryExists();","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T09:15:34","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Itsdaodao"},"content":"        try {","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Itsdaodao"},"content":"            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Itsdaodao"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Itsdaodao"},"content":"                lines.add(task.toString());","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Itsdaodao"},"content":"            }","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Itsdaodao"},"content":"            Files.write(dataPath, lines);","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Itsdaodao"},"content":"            System.out.println(\"Saved \" + tasks.size() + \" tasks to \" + dataPath);","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Itsdaodao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Itsdaodao"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Itsdaodao"},"content":"            throw e;","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Itsdaodao"},"content":"     * Parses a single line from the storage file into a Task object.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Itsdaodao"},"content":"     * @param line The line from the storage file","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Itsdaodao"},"content":"     * @return The parsed Task object","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Itsdaodao"},"content":"     * @throws GeorgeException If the line format is invalid or cannot be parsed","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Itsdaodao"},"content":"    private Task parseTaskFromLine(String line) throws GeorgeException {","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Itsdaodao"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Itsdaodao"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Itsdaodao"},"content":"        boolean isCompleted \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Itsdaodao"},"content":"        switch (type) {","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Itsdaodao"},"content":"        case \"D\":","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Itsdaodao"},"content":"            // For deadlines, parts[3] is the date string like \"Apr 25 2025\"","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Itsdaodao"},"content":"            LocalDateTime deadlineDate \u003d DateTimeParser.parseStoredDate(parts[3].trim());","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Itsdaodao"},"content":"            return new DeadlineTask(parts[2], deadlineDate, isCompleted);","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Itsdaodao"},"content":"        case \"E\":","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Itsdaodao"},"content":"            // For events, parts[3] is start datetime and parts[4] is end datetime","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Itsdaodao"},"content":"            // Both are in format like \"Dec 05 2025 15:00\"","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Itsdaodao"},"content":"            LocalDateTime startDateTime \u003d DateTimeParser.parseStoredDateTime(parts[3].trim());","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Itsdaodao"},"content":"            LocalDateTime endDateTime \u003d DateTimeParser.parseStoredDateTime(parts[4].trim());","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Itsdaodao"},"content":"            return new EventTask(parts[2], startDateTime, endDateTime, isCompleted);","lastModifiedDate":"2025-09-19T20:23:32","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Itsdaodao"},"content":"        default:","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Itsdaodao"},"content":"            return new ToDoTask(parts[2], isCompleted);","lastModifiedDate":"2025-08-29T09:22:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Itsdaodao"},"content":"    /**","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Itsdaodao"},"content":"     * Ensures that the data directory and file exist, creating them if necessary.","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Itsdaodao"},"content":"     *","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Itsdaodao"},"content":"     * @throws IOException If an I/O error occurs during directory/file creation","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Itsdaodao"},"content":"     */","lastModifiedDate":"2025-09-12T11:48:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Itsdaodao"},"content":"    private void ensureDirectoryExists() throws IOException {","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Itsdaodao"},"content":"        if (!Files.exists(dataPath.getParent())) {","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Itsdaodao"},"content":"            Files.createDirectories(dataPath.getParent());","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Itsdaodao"},"content":"        if (!Files.exists(dataPath)) {","lastModifiedDate":"2025-09-19T19:05:10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Itsdaodao"},"content":"            Files.createFile(dataPath);","lastModifiedDate":"2025-08-29T11:31:41","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Itsdaodao"},"content":"            System.out.println(\"Created file at: \" + dataPath);","lastModifiedDate":"2025-08-29T08:50:37","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-08-29T01:19:30","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":138}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"            fx:controller\u003d\"george.MainWindow\"\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-19T14:17:46","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":44}},{"path":"src/test/java/george/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.task;","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"class DeadlineTaskTest {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_validDescriptionAndDeadline_createsTask() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange \u0026 Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Submit report\", \"2023-12-31 2359\");","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"Submit report\", task.getDescription());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[D]\", task.getType());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"        assertNotNull(task.getDeadline());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_withIsDoneTrue_createsDoneTask() throws GeorgeException {","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange \u0026 Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Pay bills\", \"2023-12-15 1800\", true);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"Pay bills\", task.getDescription());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"        assertNotNull(task.getDeadline());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_withIsDoneFalse_createsNotDoneTask() throws GeorgeException {","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange \u0026 Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Study for exam\", \"2023-12-20 1400\", false);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"Study for exam\", task.getDescription());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"        assertNotNull(task.getDeadline());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_nullDescription_throwsGeorgeException() {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange, Act \u0026 Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"        assertThrows(GeorgeException.class, () -\u003e {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"            new DeadlineTask(null, \"2023-12-31 2359\");","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"        });","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_invalidDeadlineFormat_throwsGeorgeException() {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange, Act \u0026 Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"        assertThrows(GeorgeException.class, () -\u003e {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"            new DeadlineTask(\"Valid task\", \"invalid-date-format\");","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"        });","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"    void getType_returnsCorrectType() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Test task\", \"2023-12-31 2359\");","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"        String type \u003d task.getType();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[D]\", type);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"    void getDeadline_returnsFormattedDate() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Test task\", \"2023-12-25 1200\");","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Itsdaodao"},"content":"        String deadline \u003d task.getDeadline();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Itsdaodao"},"content":"        assertNotNull(deadline);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(deadline.matches(\"[A-Za-z]{3} \\\\d{2} \\\\d{4}\")); // Matches \"MMM dd yyyy\" format","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Itsdaodao"},"content":"    void getDisplayText_notDone_returnsCorrectFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Submit assignment\", \"2023-12-31 2359\");","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Itsdaodao"},"content":"        String displayText \u003d task.getDisplayText();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[D]\"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[ ]\"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"Submit assignment\"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"(by:\"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\")\"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Itsdaodao"},"content":"    void getDisplayText_done_returnsCorrectFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Submit assignment\", \"2023-12-31 2359\", true);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Itsdaodao"},"content":"        String displayText \u003d task.getDisplayText();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[D]\"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[X]\"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"Submit assignment\"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"(by:\"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\")\"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Itsdaodao"},"content":"    void toString_notDone_returnsCorrectSerializationFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Finish project\", \"2023-12-15 1700\");","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Itsdaodao"},"content":"        String result \u003d task.toString();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"D | 0 | Finish project | \" + task.getDeadline(), result);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(result.startsWith(\"D | 0 | Finish project | \"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Itsdaodao"},"content":"    void toString_done_returnsCorrectSerializationFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Finish project\", \"2023-12-15 1700\", true);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Itsdaodao"},"content":"        String result \u003d task.toString();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"D | 1 | Finish project | \" + task.getDeadline(), result);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(result.startsWith(\"D | 1 | Finish project | \"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Itsdaodao"},"content":"    void markAsDone_changesStatusToDone() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Clean room\", \"2023-12-10 1500\");","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[X]\", task.getStatus());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Itsdaodao"},"content":"    void markAsNotDone_changesStatusToNotDone() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Clean room\", \"2023-12-10 1500\", true);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Itsdaodao"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[ ]\", task.getStatus());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Itsdaodao"},"content":"    void getStatus_afterMarkingDone_returnsDoneStatus() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Test task\", \"2023-12-31 2359\");","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Itsdaodao"},"content":"        String status \u003d task.getStatus();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[X]\", status);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Itsdaodao"},"content":"    void getStatus_afterMarkingNotDone_returnsNotDoneStatus() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Test task\", \"2023-12-31 2359\", true);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Itsdaodao"},"content":"        String status \u003d task.getStatus();","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[ ]\", status);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Itsdaodao"},"content":"    void differentDeadlineFormats_parsedCorrectly() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Itsdaodao"},"content":"        // Test various valid date formats","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Itsdaodao"},"content":"        String[] testDates \u003d {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Itsdaodao"},"content":"            \"2023-12-31 2359\",","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Itsdaodao"},"content":"            \"2023-12-31 1200\",","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Itsdaodao"},"content":"            \"2023-01-01 0000\",","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Itsdaodao"},"content":"            \"2023-06-15 1430\"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Itsdaodao"},"content":"        };","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Itsdaodao"},"content":"        for (String date : testDates) {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Itsdaodao"},"content":"            DeadlineTask task \u003d new DeadlineTask(\"Test with \" + date, date);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Itsdaodao"},"content":"            assertNotNull(task.getDeadline());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Itsdaodao"},"content":"            assertTrue(task.getDeadline().matches(\"[A-Za-z]{3} \\\\d{2} \\\\d{4}\"));","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Itsdaodao"},"content":"    void equals_sameDescriptionAndDeadline_returnsSameDisplay() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task1 \u003d new DeadlineTask(\"Same task\", \"2023-12-31 2359\", true);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task2 \u003d new DeadlineTask(\"Same task\", \"2023-12-31 2359\", true);","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Itsdaodao"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(task1.toString(), task2.toString());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(task1.getDisplayText(), task2.getDisplayText());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Itsdaodao"},"content":"    void equals_differentDeadline_returnsDifferentDisplay() throws GeorgeException {","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task1 \u003d new DeadlineTask(\"Same task\", \"2023-12-31 2359\");","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Itsdaodao"},"content":"        DeadlineTask task2 \u003d new DeadlineTask(\"Same task\", \"2023-12-30 1800\");","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Itsdaodao"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Itsdaodao"},"content":"        assertNotEquals(task1.getDisplayText(), task2.getDisplayText());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Itsdaodao"},"content":"        assertNotEquals(task1.toString(), task2.toString());","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T18:02:10","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":239}},{"path":"src/test/java/george/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.task;","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"class EventTaskTest {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_validDescriptionAndTimes_createsTask() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange \u0026 Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Team meeting\", \"2023-12-15 1400\", \"2023-12-15 1600\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"Team meeting\", task.getDescription());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[E]\", task.getType());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"        assertNotNull(task.toString());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_withIsDoneTrue_createsDoneTask() throws GeorgeException {","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange \u0026 Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Birthday party\", \"2023-12-25 1800\", \"2023-12-25 2200\", true);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"Birthday party\", task.getDescription());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"        assertNotNull(task.toString());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_withIsDoneFalse_createsNotDoneTask() throws GeorgeException {","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange \u0026 Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Conference\", \"2023-12-20 0900\", \"2023-12-20 1700\", false);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"Conference\", task.getDescription());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"        assertNotNull(task.toString());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_nullDescription_throwsGeorgeException() {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange, Act \u0026 Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"        assertThrows(GeorgeException.class, () -\u003e {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"            new EventTask(null, \"2023-12-15 1400\", \"2023-12-15 1600\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"        });","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_invalidStartTimeFormat_throwsGeorgeException() {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange, Act \u0026 Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"        assertThrows(GeorgeException.class, () -\u003e {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"            new EventTask(\"Valid event\", \"invalid-time\", \"2023-12-15 1600\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"        });","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_invalidEndTimeFormat_throwsGeorgeException() {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange, Act \u0026 Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"        assertThrows(GeorgeException.class, () -\u003e {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"            new EventTask(\"Valid event\", \"2023-12-15 1400\", \"invalid-time\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"        });","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"    void getType_returnsCorrectType() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Test event\", \"2023-12-15 1400\", \"2023-12-15 1600\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Itsdaodao"},"content":"        String type \u003d task.getType();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[E]\", type);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Itsdaodao"},"content":"    void getDisplayText_notDone_returnsCorrectFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Team meeting\", \"2023-12-15 1400\", \"2023-12-15 1600\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Itsdaodao"},"content":"        String displayText \u003d task.getDisplayText();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[E]\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[ ]\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"Team meeting\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"(from:\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"to:\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\")\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Itsdaodao"},"content":"    void getDisplayText_done_returnsCorrectFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Team meeting\", \"2023-12-15 1400\", \"2023-12-15 1600\", true);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Itsdaodao"},"content":"        String displayText \u003d task.getDisplayText();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[E]\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[X]\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"Team meeting\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"(from:\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"to:\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\")\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Itsdaodao"},"content":"    void toString_notDone_returnsCorrectSerializationFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Project review\", \"2023-12-18 1000\", \"2023-12-18 1200\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Itsdaodao"},"content":"        String result \u003d task.toString();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"E | 0 | Project review | Dec 18 2023 10:00 | Dec 18 2023 12:00\", result);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Itsdaodao"},"content":"    void toString_done_returnsCorrectSerializationFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Project review\", \"2023-12-18 1000\", \"2023-12-18 1200\", true);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Itsdaodao"},"content":"        String result \u003d task.toString();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"E | 1 | Project review | Dec 18 2023 10:00 | Dec 18 2023 12:00\", result);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Itsdaodao"},"content":"    void markAsDone_changesStatusToDone() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Workshop\", \"2023-12-10 0900\", \"2023-12-10 1700\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[X]\", task.getStatus());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Itsdaodao"},"content":"    void markAsNotDone_changesStatusToNotDone() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Workshop\", \"2023-12-10 0900\", \"2023-12-10 1700\", true);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Itsdaodao"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[ ]\", task.getStatus());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Itsdaodao"},"content":"    void getStatus_afterMarkingDone_returnsDoneStatus() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Seminar\", \"2023-12-12 1300\", \"2023-12-12 1500\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Itsdaodao"},"content":"        String status \u003d task.getStatus();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[X]\", status);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Itsdaodao"},"content":"    void getStatus_afterMarkingNotDone_returnsNotDoneStatus() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Seminar\", \"2023-12-12 1300\", \"2023-12-12 1500\", true);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Itsdaodao"},"content":"        String status \u003d task.getStatus();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[ ]\", status);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Itsdaodao"},"content":"    void differentTimeFormats_parsedCorrectly() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Itsdaodao"},"content":"        // Test various valid time formats","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Itsdaodao"},"content":"        String[][] testTimePairs \u003d {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Itsdaodao"},"content":"                {\"2023-12-15 0900\", \"2023-12-15 1700\"},","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Itsdaodao"},"content":"                {\"2023-12-31 1400\", \"2023-12-31 1600\"},","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Itsdaodao"},"content":"                {\"2024-01-01 0000\", \"2024-01-01 2359\"},","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Itsdaodao"},"content":"                {\"2023-06-15 0830\", \"2023-06-15 1730\"}","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Itsdaodao"},"content":"        };","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Itsdaodao"},"content":"        for (String[] times : testTimePairs) {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Itsdaodao"},"content":"            EventTask task \u003d new EventTask(\"Test event\", times[0], times[1]);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Itsdaodao"},"content":"            // Test that the task was created successfully (no exception)","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Itsdaodao"},"content":"            assertNotNull(task);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Itsdaodao"},"content":"            // Test that toString doesn\u0027t throw exception and returns something","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Itsdaodao"},"content":"            String result \u003d task.toString();","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Itsdaodao"},"content":"            assertNotNull(result);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Itsdaodao"},"content":"            assertFalse(result.isEmpty());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Itsdaodao"},"content":"            // Test that the result follows the expected pattern","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Itsdaodao"},"content":"            assertTrue(result.matches(\"E \\\\| [01] \\\\| Test event \\\\| \"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Itsdaodao"},"content":"                    + \"[A-Za-z]{3} \\\\d{1,2} \\\\d{4} \\\\d{1,2}:\\\\d{2} \\\\| \"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Itsdaodao"},"content":"                    + \"[A-Za-z]{3} \\\\d{1,2} \\\\d{4} \\\\d{1,2}:\\\\d{2}\"));","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Itsdaodao"},"content":"        }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Itsdaodao"},"content":"    void equals_sameDescriptionAndTimes_returnsSameDisplay() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task1 \u003d new EventTask(\"Same event\", \"2023-12-15 1400\", \"2023-12-15 1600\", true);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task2 \u003d new EventTask(\"Same event\", \"2023-12-15 1400\", \"2023-12-15 1600\", true);","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Itsdaodao"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(task1.toString(), task2.toString());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(task1.getDisplayText(), task2.getDisplayText());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Itsdaodao"},"content":"    void equals_differentStartTime_returnsDifferentDisplay() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task1 \u003d new EventTask(\"Same event\", \"2023-12-15 1400\", \"2023-12-15 1600\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task2 \u003d new EventTask(\"Same event\", \"2023-12-15 1500\", \"2023-12-15 1600\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Itsdaodao"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Itsdaodao"},"content":"        assertNotEquals(task1.getDisplayText(), task2.getDisplayText());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Itsdaodao"},"content":"        assertNotEquals(task1.toString(), task2.toString());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Itsdaodao"},"content":"    void equals_differentEndTime_returnsDifferentDisplay() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task1 \u003d new EventTask(\"Same event\", \"2023-12-15 1400\", \"2023-12-15 1600\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task2 \u003d new EventTask(\"Same event\", \"2023-12-15 1400\", \"2023-12-15 1700\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Itsdaodao"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Itsdaodao"},"content":"        assertNotEquals(task1.getDisplayText(), task2.getDisplayText());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Itsdaodao"},"content":"        assertNotEquals(task1.toString(), task2.toString());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Itsdaodao"},"content":"    void eventWithSameStartEndTime_createsSuccessfully() throws GeorgeException {","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange \u0026 Act - Edge case: start and end time are the same","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Itsdaodao"},"content":"        EventTask task \u003d new EventTask(\"Quick call\", \"2023-12-15 1500\", \"2023-12-15 1500\");","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"Quick call\", task.getDescription());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Itsdaodao"},"content":"        assertNotNull(task.toString());","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Itsdaodao"},"content":"        // Check for the formatted time output (e.g., \"Dec 15 2023 15:00\")","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(task.toString().contains(\"Dec 15 2023 15:00\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Itsdaodao"},"content":"        // Or check that both times are the same in the output","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(task.toString().contains(\"15:00 | Dec 15 2023 15:00\"));","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T19:01:25","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":272}},{"path":"src/test/java/george/task/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"package george.task;","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"import george.exceptions.GeorgeException;","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Itsdaodao"},"content":"class ToDoTaskTest {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_validDescription_createsTask() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange \u0026 Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Buy bananas\");","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"Buy bananas\", task.getDescription());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Itsdaodao"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[T]\", task.getType());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_withIsDoneTrue_createsDoneTask() throws GeorgeException {","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange \u0026 Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Complete assignment\", true);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"Complete assignment\", task.getDescription());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_withIsDoneFalse_createsNotDoneTask() throws GeorgeException {","lastModifiedDate":"2025-09-16T09:41:11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange \u0026 Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Read book\", false);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"Read book\", task.getDescription());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Itsdaodao"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Itsdaodao"},"content":"    void constructor_nullDescription_throwsGeorgeException() {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange, Act \u0026 Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Itsdaodao"},"content":"        assertThrows(GeorgeException.class, () -\u003e {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Itsdaodao"},"content":"            new ToDoTask(null);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Itsdaodao"},"content":"        });","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Itsdaodao"},"content":"    void getType_returnsCorrectType() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Test task\");","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Itsdaodao"},"content":"        String type \u003d task.getType();","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[T]\", type);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Itsdaodao"},"content":"    void getDisplayText_notDone_returnsCorrectFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Buy milk\");","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Itsdaodao"},"content":"        String displayText \u003d task.getDisplayText();","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[T][ ] Buy milk\", displayText);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[T]\"));","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[ ]\"));","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"Buy milk\"));","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Itsdaodao"},"content":"    void getDisplayText_done_returnsCorrectFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Buy milk\", true);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Itsdaodao"},"content":"        String displayText \u003d task.getDisplayText();","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[T][X] Buy milk\", displayText);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[T]\"));","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"[X]\"));","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(displayText.contains(\"Buy milk\"));","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Itsdaodao"},"content":"    void toString_notDone_returnsCorrectSerializationFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Study for exam\");","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Itsdaodao"},"content":"        String result \u003d task.toString();","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"T | 0 | Study for exam\", result);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Itsdaodao"},"content":"    void toString_done_returnsCorrectSerializationFormat() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Study for exam\", true);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Itsdaodao"},"content":"        String result \u003d task.toString();","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"T | 1 | Study for exam\", result);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Itsdaodao"},"content":"    void markAsDone_changesStatusToDone() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Clean room\");","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Itsdaodao"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[X]\", task.getStatus());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Itsdaodao"},"content":"    void markAsNotDone_changesStatusToNotDone() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Clean room\", true);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Itsdaodao"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[ ]\", task.getStatus());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Itsdaodao"},"content":"    void getStatus_afterMarkingDone_returnsDoneStatus() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Test task\");","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Itsdaodao"},"content":"        String status \u003d task.getStatus();","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[X]\", status);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Itsdaodao"},"content":"    void getStatus_afterMarkingNotDone_returnsNotDoneStatus() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task \u003d new ToDoTask(\"Test task\", true);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Itsdaodao"},"content":"        // Act","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Itsdaodao"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Itsdaodao"},"content":"        String status \u003d task.getStatus();","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Itsdaodao"},"content":"        // Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(\"[ ]\", status);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Itsdaodao"},"content":"    void equals_sameDescriptionAndStatus_returnsTrue() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task1 \u003d new ToDoTask(\"Same task\", true);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask task2 \u003d new ToDoTask(\"Same task\", true);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Itsdaodao"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(task1.toString(), task2.toString());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Itsdaodao"},"content":"        assertEquals(task1.getDisplayText(), task2.getDisplayText());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Itsdaodao"},"content":"    @Test","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Itsdaodao"},"content":"    void equals_differentStatus_returnsDifferentDisplay() throws GeorgeException {","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Itsdaodao"},"content":"        // Arrange","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask doneTask \u003d new ToDoTask(\"Same task\", true);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Itsdaodao"},"content":"        ToDoTask notDoneTask \u003d new ToDoTask(\"Same task\", false);","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Itsdaodao"},"content":"","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Itsdaodao"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Itsdaodao"},"content":"        assertNotEquals(doneTask.getDisplayText(), notDoneTask.getDisplayText());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Itsdaodao"},"content":"        assertNotEquals(doneTask.toString(), notDoneTask.toString());","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Itsdaodao"},"content":"    }","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Itsdaodao"},"content":"}","lastModifiedDate":"2025-09-09T17:16:26","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":194}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Itsdaodao"},"content":"todo borrow book","lastModifiedDate":"2025-08-22T11:57:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Itsdaodao"},"content":"todo join a club","lastModifiedDate":"2025-08-22T11:57:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Itsdaodao"},"content":"deadline return book /by next week","lastModifiedDate":"2025-08-22T11:57:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Itsdaodao"},"content":"event go for training /from 9pm /to 11pm","lastModifiedDate":"2025-08-22T11:57:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Itsdaodao"},"content":"mark 2","lastModifiedDate":"2025-08-22T11:57:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Itsdaodao"},"content":"mark 3","lastModifiedDate":"2025-08-22T11:57:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Itsdaodao"},"content":"list","lastModifiedDate":"2025-08-22T11:57:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Itsdaodao"},"content":"deadline submit cs2103 assignment /by next friday","lastModifiedDate":"2025-08-22T11:57:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Itsdaodao"},"content":"unmark 3","lastModifiedDate":"2025-08-22T11:57:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Itsdaodao"},"content":"list","lastModifiedDate":"2025-08-22T11:57:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Itsdaodao"},"content":"bye","lastModifiedDate":"2025-08-22T11:57:01","isFullCredit":false}],"authorContributionMap":{"Itsdaodao":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Itsdaodao"},"content":"java -classpath ..\\bin george.George \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-09T11:54:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":20,"Itsdaodao":1}}]
