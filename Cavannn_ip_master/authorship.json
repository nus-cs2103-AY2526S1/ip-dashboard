[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"# goldenknight.GoldenKnight project template","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"1. After that, locate the `src/main/java/goldenknight.GoldenKnight.java` file, right-click it, and choose `Run goldenknight.GoldenKnight.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"-":24,"Cavannn":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-02T01:23:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"    applicationDefaultJvmArgs \u003d [\"-ea\"]","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"    archiveBaseName.set(\"goldenknight\")","lastModifiedDate":"2025-09-11T23:59:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"    archiveClassifier.set(\"all\")","lastModifiedDate":"2025-09-11T23:59:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"    archiveVersion.set(\"\")","lastModifiedDate":"2025-09-11T23:59:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"checkstyle {","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false}],"authorContributionMap":{"-":38,"Cavannn":25}},{"path":"data/goldenknight.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"D | 0 | clean room | 2/10/2025 1800","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"D | 0 | clean floor | 1/10/2025 1900","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false}],"authorContributionMap":{"Cavannn":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"# goldenknight.GoldenKnight User Guide","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"-":29,"Cavannn":1}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":" * The {@code DialogBox} class represents a custom JavaFX UI component","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":" * used to display dialog messages in the GoldenKnight application.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":" * Each dialog box consists of:","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":" *     \u003cli\u003eA {@link Label} containing the text message.\u003c/li\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":" *     \u003cli\u003eAn {@link ImageView} displaying the speaker\u0027s avatar.\u003c/li\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":" * This class supports creating both user and Duke/GoldenKnight dialog boxes.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":" * Key features:","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":" *     \u003cli\u003e{@link #getUserDialog(String, Image)} – creates a dialog box for user input.\u003c/li\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":" *     \u003cli\u003e{@link #getDukeDialog(String, Image)} – creates a dialog box for Duke/GoldenKnight responses,","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":" *     with the image on the left and styled appropriately.\u003c/li\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":" *     \u003cli\u003e{@link #flip()} – reorders the dialog box so the avatar appears on the opposite side.\u003c/li\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":" *     \u003cli\u003e{@link #changeDialogStyle(String)} – applies different CSS styles based on command type.\u003c/li\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":" * The layout for this component is defined in {@code DialogBox.fxml}.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"    @FXML","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"    @FXML","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"     * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"     * and a label containing text from the speaker.","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"        try {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"        // Default style for all dialogs","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"        dialog.getStyleClass().add(\"normal-label\");","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"    private void flip() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"    private void changeDialogStyle(String commandType) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"        switch(commandType) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"        case \"AddCommand\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"            dialog.getStyleClass().add(\"add-label\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Cavannn"},"content":"            break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Cavannn"},"content":"        case \"ChangeMarkCommand\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Cavannn"},"content":"            dialog.getStyleClass().add(\"marked-label\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Cavannn"},"content":"            break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Cavannn"},"content":"        case \"DeleteCommand\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Cavannn"},"content":"            dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Cavannn"},"content":"            break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Cavannn"},"content":"        default:","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Cavannn"},"content":"            // Do nothing","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Cavannn"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Cavannn"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Cavannn"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Cavannn"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Cavannn"},"content":"        db.flip();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Cavannn"},"content":"        return db;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Cavannn"},"content":"     * Creates a Duke/GoldenKnight dialog box styled as an error.","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Cavannn"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Cavannn"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Cavannn"},"content":"        db.flip();","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Cavannn"},"content":"        db.dialog.getStyleClass().add(\"error-label\");","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Cavannn"},"content":"        return db;","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false}],"authorContributionMap":{"Cavannn":110}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"public class Launcher {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false}],"authorContributionMap":{"Cavannn":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import goldenknight.GoldenKnight;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":" * Main class to launch the GoldenKnight GUI using FXML.","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    private final GoldenKnight goldenKnight \u003d new GoldenKnight(\"./data/goldenknight.txt\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    @Override","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"        try {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"            AnchorPane root \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"            // Inject the GoldenKnight instance into the controller","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"            controller.setGoldenKnight(goldenKnight);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"            Scene scene \u003d new Scene(root);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"            // Attach stylesheet for dialog styles (normal, reply, error, etc.)","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"            scene.getStylesheets().add(Main.class.getResource(\"/styles.css\").toExternalForm());","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"            stage.setTitle(\"GoldenKnight Chatbot\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"            stage.setMaxWidth(417);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"            stage.show();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false}],"authorContributionMap":{"Cavannn":42}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"import goldenknight.GoldenKnight;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":" * Controller for the main GUI of GoldenKnight.","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"    @FXML","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"    @FXML","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    @FXML","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"    @FXML","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"    private GoldenKnight goldenKnight;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"    private static final String LINE \u003d \"_______________________________________\";","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"            this.getClass().getResourceAsStream(\"/images/princesstower.png\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"    private final Image botImage \u003d new Image(","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"            this.getClass().getResourceAsStream(\"/images/goldenknight.png\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"    @FXML","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"     * Injects the GoldenKnight backend instance.","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"    public void setGoldenKnight(GoldenKnight gk) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"        goldenKnight \u003d gk;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"        // Show welcome message on GUI","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"                DialogBox.getDukeDialog(goldenKnight.getWelcomeMessage(), botImage)","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"        );","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"        // Show next task reminder","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"        String reminderMessage \u003d goldenKnight.getNextTaskReminder();","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"        if (reminderMessage !\u003d null \u0026\u0026 !reminderMessage.isBlank()) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"                    DialogBox.getDukeDialog(reminderMessage, botImage)","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"            );","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"     * Handles user input from the text field.","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"     * Calls the corresponding GoldenKnight method and updates the dialog container.","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"    @FXML","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"            return;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"        String response;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"        // Split command into parts","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"        try {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"            switch (command) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"            case \"list\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"                response \u003d goldenKnight.listTasks();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"                break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Cavannn"},"content":"            case \"todo\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Cavannn"},"content":"                response \u003d goldenKnight.addTodo(parts.length \u003e 1 ? parts[1] : \"\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Cavannn"},"content":"                break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Cavannn"},"content":"            case \"deadline\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Cavannn"},"content":"                response \u003d goldenKnight.addDeadline(parts.length \u003e 1 ? parts[1] : \"\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Cavannn"},"content":"                break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Cavannn"},"content":"            case \"event\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Cavannn"},"content":"                response \u003d goldenKnight.addEvent(parts.length \u003e 1 ? parts[1] : \"\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Cavannn"},"content":"                break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Cavannn"},"content":"            case \"mark\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Cavannn"},"content":"                response \u003d goldenKnight.markTask(parts.length \u003e 1 ? Integer.parseInt(parts[1]) - 1 : -1);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Cavannn"},"content":"                break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Cavannn"},"content":"            case \"unmark\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Cavannn"},"content":"                response \u003d goldenKnight.unmarkTask(parts.length \u003e 1 ? Integer.parseInt(parts[1]) - 1 : -1);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Cavannn"},"content":"                break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Cavannn"},"content":"            case \"delete\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Cavannn"},"content":"                response \u003d goldenKnight.deleteTask(parts.length \u003e 1 ? Integer.parseInt(parts[1]) - 1 : -1);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Cavannn"},"content":"                break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Cavannn"},"content":"            case \"find\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Cavannn"},"content":"                response \u003d goldenKnight.findTasks(parts.length \u003e 1 ? parts[1] : \"\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Cavannn"},"content":"                break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Cavannn"},"content":"            case \"bye\":","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Cavannn"},"content":"                response \u003d goldenKnight.getGoodbyeMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Cavannn"},"content":"                break;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Cavannn"},"content":"            default:","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Cavannn"},"content":"                response \u003d \"I don\u0027t understand that command.\";","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Cavannn"},"content":"            }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Cavannn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Cavannn"},"content":"            response \u003d \"Error: \" + e.getMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Cavannn"},"content":"        // Add user input and GoldenKnight response to the dialog container","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Cavannn"},"content":"        boolean isError \u003d response.startsWith(\"Error:\") || response.startsWith(\"I don\u0027t understand\");","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Cavannn"},"content":"        if (isError) {","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Cavannn"},"content":"            response \u003d LINE + \"\\n\" + response + \"\\n\" + LINE;","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Cavannn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Cavannn"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Cavannn"},"content":"                isError ? DialogBox.getErrorDialog(response, botImage) : DialogBox.getDukeDialog(response, botImage)","lastModifiedDate":"2025-09-16T21:40:17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Cavannn"},"content":"        );","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Cavannn"},"content":"        // Clear user input","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Cavannn"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false}],"authorContributionMap":{"Cavannn":123}},{"path":"src/main/java/goldenknight/GoldenKnight.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import goldenknight.exception.DukeException;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import goldenknight.storage.Storage;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.TaskList;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"import goldenknight.ui.Ui;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":" * The {@code GoldenKnight} class represents the main backend of the Golden Knight application.","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":" * It manages the task list, handles storage, and generates responses for the GUI","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":" * based on user input commands. Methods in this class return strings suitable","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":" * for display in the GUI.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"public class GoldenKnight {","lastModifiedDate":"2025-08-21T20:49:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-21T21:32:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"     * Constructs a new {@code GoldenKnight} instance.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"     * Initializes the UI, storage, and task list.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"     * @param filePath the file path where tasks are stored","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"    public GoldenKnight(String filePath) {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"        // Assertions: invariants after construction","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"        assert ui !\u003d null : \"UI should be initialized\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"        assert storage !\u003d null : \"Storage should be initialized\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"        assert tasks !\u003d null : \"TaskList should be initialized\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T03:35:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"    // -------------------- Public Methods for GUI --------------------","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-21T21:32:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"     * Returns the welcome message displayed when the application starts.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"     * @return the welcome message string","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"        assert ui !\u003d null : \"UI must not be null when getting welcome message\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"        return ui.getWelcomeMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-21T21:32:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"     * Returns the goodbye message displayed when the application exits.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"     * @return the goodbye message string","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"        assert ui !\u003d null : \"UI must not be null when getting goodbye message\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"        return ui.getGoodbyeMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:37:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"     * Returns a formatted string containing the list of tasks.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"     * @return the string representation of the current task list","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"    public String listTasks() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"        assert tasks !\u003d null : \"TaskList must not be null when listing tasks\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"        return ui.getTaskListString(tasks);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"     * Adds a todo task to the task list and saves it to storage.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"     * @return a confirmation message, or an error message if the task cannot be added","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"    public String addTodo(String description) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"        try {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"            String result \u003d ui.addTodoString(tasks, description);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Cavannn"},"content":"            storage.save(tasks.getAll());","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Cavannn"},"content":"            assert result !\u003d null \u0026\u0026 !result.isBlank() : \"Result message should not be null/blank\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Cavannn"},"content":"            return result;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Cavannn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Cavannn"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Cavannn"},"content":"     * Adds a deadline task to the task list and saves it to storage.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Cavannn"},"content":"     * @param input the user input string containing the deadline details","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Cavannn"},"content":"     * @return a confirmation message, or an error message if the task cannot be added","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Cavannn"},"content":"    public String addDeadline(String input) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Cavannn"},"content":"        try {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Cavannn"},"content":"            String result \u003d ui.addDeadlineString(tasks, input);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Cavannn"},"content":"            storage.save(tasks.getAll());","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Cavannn"},"content":"            assert result !\u003d null \u0026\u0026 !result.isBlank() : \"Result message should not be null/blank\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Cavannn"},"content":"            return result;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Cavannn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Cavannn"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Cavannn"},"content":"     * Adds an event task to the task list and saves it to storage.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Cavannn"},"content":"     * @param input the user input string containing the event details","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Cavannn"},"content":"     * @return a confirmation message, or an error message if the task cannot be added","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Cavannn"},"content":"    public String addEvent(String input) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Cavannn"},"content":"        try {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Cavannn"},"content":"            String result \u003d ui.addEventString(tasks, input);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Cavannn"},"content":"            storage.save(tasks.getAll());","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Cavannn"},"content":"            assert result !\u003d null \u0026\u0026 !result.isBlank() : \"Result message should not be null/blank\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Cavannn"},"content":"            return result;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Cavannn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Cavannn"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:37:12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Cavannn"},"content":"     * Marks the task at the specified index as completed and saves the updated list.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Cavannn"},"content":"     * @param index the index of the task to mark","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Cavannn"},"content":"     * @return a confirmation message, or an error message if the index is invalid","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Cavannn"},"content":"    public String markTask(int index) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Cavannn"},"content":"        try {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Cavannn"},"content":"            String result \u003d ui.markTaskString(tasks, index);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Cavannn"},"content":"            storage.save(tasks.getAll());","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Cavannn"},"content":"            assert result.contains(\"marked\") : \"Result should confirm marking\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Cavannn"},"content":"            return result;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Cavannn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Cavannn"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Cavannn"},"content":"     * Unmarks the task at the specified index (sets it as not completed)","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Cavannn"},"content":"     * and saves the updated list.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Cavannn"},"content":"     * @param index the index of the task to unmark","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Cavannn"},"content":"     * @return a confirmation message, or an error message if the index is invalid","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Cavannn"},"content":"    public String unmarkTask(int index) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Cavannn"},"content":"        try {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Cavannn"},"content":"            String result \u003d ui.unmarkTaskString(tasks, index);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Cavannn"},"content":"            storage.save(tasks.getAll());","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Cavannn"},"content":"            assert result.contains(\"not done\") : \"Result should confirm unmarking\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Cavannn"},"content":"            return result;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Cavannn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Cavannn"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T04:37:12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:37:12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Cavannn"},"content":"     * Deletes the task at the specified index from the task list and saves the update.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Cavannn"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Cavannn"},"content":"     * @return a confirmation message, or an error message if the index is invalid","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Cavannn"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Cavannn"},"content":"        try {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Cavannn"},"content":"            String result \u003d ui.deleteTaskString(tasks, index);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Cavannn"},"content":"            storage.save(tasks.getAll());","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Cavannn"},"content":"            assert result.contains(\"removed\") : \"Result should confirm deletion\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Cavannn"},"content":"            return result;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Cavannn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-08-22T04:37:12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Cavannn"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-08-21T21:32:02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Cavannn"},"content":"     * Finds tasks that contain the given keyword in their description.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Cavannn"},"content":"     * @param keyword the keyword to search for","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Cavannn"},"content":"     * @return a string listing the matching tasks, or an error message if none are found","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Cavannn"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Cavannn"},"content":"        try {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Cavannn"},"content":"            return ui.findTasksString(tasks, keyword);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Cavannn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Cavannn"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T04:37:12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Cavannn"},"content":"     * Returns a reminder for the next upcoming task.","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Cavannn"},"content":"     * \u003cp\u003eUses the UI component to generate a message about the incomplete task","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Cavannn"},"content":"     * with the earliest due date or time. If no tasks are pending, an appropriate","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Cavannn"},"content":"     * message is returned.\u003c/p\u003e","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Cavannn"},"content":"     * @return A string containing the next task reminder.","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Cavannn"},"content":"    public String getNextTaskReminder() {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Cavannn"},"content":"        return ui.getNextTaskReminder(tasks);","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-08-22T04:37:12","isFullCredit":false}],"authorContributionMap":{"Cavannn":200}},{"path":"src/main/java/goldenknight/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.exception;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":" * Represents a custom exception used in the GoldenKnight application.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":" * This exception is thrown when the user inputs invalid commands","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":" * or when other application-specific errors occur.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"     * @param message The detail message explaining the reason for the exception.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"        super(message);","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false}],"authorContributionMap":{"Cavannn":18}},{"path":"src/main/java/goldenknight/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.parser;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import goldenknight.exception.DukeException;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":" * Parses user input into a command keyword and its arguments.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":" *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":" * \u003cp\u003eThis class provides a static method to split a user\u0027s raw input","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":" * string into at most two parts: the command keyword (first word)","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":" * and the rest of the input as arguments.\u003c/p\u003e","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":" *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":" * \u003cp\u003eLeading and trailing spaces in the input are ignored. If the input","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":" * is empty or contains only whitespace, a {@link DukeException} is thrown.\u003c/p\u003e","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"public class Parser {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"     * Splits the given input string into a command keyword and arguments.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"     * \u003cp\u003eThe input is first trimmed of leading and trailing whitespace. Then","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"     * it is split into at most two parts: the command keyword (index 0)","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"     * and the arguments (index 1, if present).\u003c/p\u003e","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"     * @param input The raw input string from the user.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"     * @return A string array containing the command keyword and its arguments.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"     * @throws DukeException If the input is empty or contains only whitespace.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"    public static String[] parse(String input) throws DukeException {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"        String trimmed \u003d input.trim();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"        if (trimmed.isEmpty()) {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"            throw new DukeException(\"OOPS!!! You entered an empty command.\");","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"        return trimmed.split(\" \", 2);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false}],"authorContributionMap":{"Cavannn":37}},{"path":"src/main/java/goldenknight/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.storage;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import java.io.File;","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Deadline;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Event;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Task;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Todo;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":" * Handles loading and saving of tasks to a file.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":" *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":" * \u003cp\u003eThis class is responsible for reading tasks from a file into a list","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":" * and writing tasks from a list back to the file. It ensures that the file","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":" * exists and creates it if necessary.\u003c/p\u003e","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"public class Storage {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"    /** Path to the file used for storing tasks. */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"     * Loads tasks from the file into an ArrayList.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"     * \u003cp\u003eIf the file does not exist, it will be created. Corrupted lines","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"     * or unknown task types are skipped with a warning message.\u003c/p\u003e","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"     * @return An ArrayList containing all valid tasks loaded from the file.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"        // Create file if it doesn\u0027t exist","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"        try {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"                if (file.getParentFile() !\u003d null) {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"                    file.getParentFile().mkdirs();","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"                }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"                file.createNewFile();","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"                return tasks; // early return avoids deep nesting","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"            }","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"            System.err.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"            return tasks;","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"        // Read and parse tasks from file","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"        try (Scanner sc \u003d new Scanner(file)) {","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"                String line \u003d sc.nextLine().trim();","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"                if (line.isEmpty()) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"                    continue;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"                }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"                try {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"                    Task task \u003d parseLine(line);","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"                        tasks.add(task);","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"                    }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"                    System.err.println(\"⚠ Skipping corrupted line: \" + line);","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"                }","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"            }","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"            System.err.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Cavannn"},"content":"        return tasks;","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Cavannn"},"content":"     * Parses a single line from the task file into a Task object.","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Cavannn"},"content":"     * @param line the line to parse","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Cavannn"},"content":"     * @return a Task object, or null if the type is unknown","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Cavannn"},"content":"    private Task parseLine(String line) {","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Cavannn"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Cavannn"},"content":"        switch (parts[0]) {","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Cavannn"},"content":"        case \"T\":","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Cavannn"},"content":"            Todo t \u003d new Todo(parts[2]);","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Cavannn"},"content":"            if (\"1\".equals(parts[1])) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Cavannn"},"content":"                t.markAsDone();","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Cavannn"},"content":"            }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Cavannn"},"content":"            return t;","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Cavannn"},"content":"        case \"D\":","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Cavannn"},"content":"            return Deadline.fromFileFormat(parts);","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Cavannn"},"content":"        case \"E\":","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Cavannn"},"content":"            return Event.fromFileFormat(parts);","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Cavannn"},"content":"        default:","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Cavannn"},"content":"            System.err.println(\"⚠ Unknown task type: \" + parts[0]);","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Cavannn"},"content":"            return null;","lastModifiedDate":"2025-09-13T13:32:40","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Cavannn"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Cavannn"},"content":"     * \u003cp\u003eIf the file or its parent directories do not exist, they are created.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Cavannn"},"content":"     * Each task is written in its file format on a new line.\u003c/p\u003e","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Cavannn"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Cavannn"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Cavannn"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Cavannn"},"content":"        if (file.getParentFile() !\u003d null) {","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Cavannn"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Cavannn"},"content":"        try (FileWriter fw \u003d new FileWriter(file)) {","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Cavannn"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Cavannn"},"content":"                fw.write(t.toFileFormat() + System.lineSeparator());","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Cavannn"},"content":"            }","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Cavannn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Cavannn"},"content":"            System.err.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false}],"authorContributionMap":{"Cavannn":132}},{"path":"src/main/java/goldenknight/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":" * Represents a task with a deadline. A {@code Deadline} has a description","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":" * and must be completed by a specific {@link LocalDateTime}.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"    /** Input format used when parsing user-provided date and time strings. */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"    public static final DateTimeFormatter INPUT_FORMAT \u003d","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"    /** Output format used when displaying the deadline in a user-friendly format. */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    public static final DateTimeFormatter OUTPUT_FORMAT \u003d","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"    /** The date and time by which the task must be completed. */","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"     * Creates a new {@code Deadline} task.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"     * @param by The deadline date and time, given as a string in {@link #INPUT_FORMAT}.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"        super(TaskType.DEADLINE, description);","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"        this.byDateTime \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"     * Returns the string representation of this deadline task,","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"     * including its status icon, description, and formatted deadline.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"    @Override","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"        return super.toString() + \" (by: \" + this.byDateTime.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"     * Returns the string representation of this deadline task","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"     * in the format used for saving to a file.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"     * @return File format string of the deadline task.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"    @Override","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"                + this.description + \" | \" + this.byDateTime.format(INPUT_FORMAT);","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"     * Creates a {@code Deadline} object from its file format representation.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"     * @param parts An array of strings representing the fields of the deadline task.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"     *              Expected format: {@code [\"D\", status, description, by]}.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"     * @return A {@code Deadline} task created from the given file format parts.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"    public static Deadline fromFileFormat(String[] parts) {","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"        if (parts.length \u003c 4) {","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"            throw new IllegalArgumentException(\"Invalid file format for Deadline task\");","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"        Deadline d \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"        if (\"1\".equals(parts[1])) {","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"            d.markAsDone();","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"        return d;","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"    // needed for reminder class","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"    public LocalDateTime getByDateTime() {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"        return this.byDateTime;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false}],"authorContributionMap":{"Cavannn":81}},{"path":"src/main/java/goldenknight/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":" * Represents a task that spans a specific period of time.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":" * An {@code Event} has a description, a start time, and an end time.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"    public static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"    public static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"    private final LocalDateTime fromDateTime;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"    private final LocalDateTime toDateTime;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"     * Creates a new {@code Event} task.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"     * @param from The start date and time of the event, given as a string in {@link #INPUT_FORMAT}.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"     * @param to The end date and time of the event, given as a string in {@link #INPUT_FORMAT}.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"        super(TaskType.EVENT, description);","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"        this.fromDateTime \u003d LocalDateTime.parse(from, INPUT_FORMAT);","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"        this.toDateTime \u003d LocalDateTime.parse(to, INPUT_FORMAT);","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"     * Returns the string representation of this event task,","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"     * including its status icon, description, and formatted start and end times.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"    @Override","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"        return super.toString() + \" (from: \" + this.fromDateTime.format(OUTPUT_FORMAT)","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"                + \" to: \" + this.toDateTime.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"     * Returns the string representation of this event task","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"     * in the format used for saving to a file.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"     * @return File format string of the event task.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"    @Override","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"                + \" | \" + this.fromDateTime.format(INPUT_FORMAT)","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"                + \" | \" + this.toDateTime.format(INPUT_FORMAT);","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"     * Creates an {@code Event} object from its file format representation.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"     * @param parts An array of strings representing the fields of the event task.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"     *              Expected format: {@code [\"E\", status, description, from, to]}.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"     * @return An {@code Event} task created from the given file format parts.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"    public static Event fromFileFormat(String[] parts) {","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"            throw new IllegalArgumentException(\"Invalid file format for Event task\");","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"        Event e \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"        if (\"1\".equals(parts[1])) {","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"            e.markAsDone();","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"        return e;","lastModifiedDate":"2025-08-31T04:48:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"    // needed for reminder class","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"    public LocalDateTime getToDateTime() {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"        return this.toDateTime;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false}],"authorContributionMap":{"Cavannn":78}},{"path":"src/main/java/goldenknight/task/Reminder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":" * Provides reminder functionality to get the next upcoming task.","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"public class Reminder {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"     * Returns a string message showing the next upcoming task based on completion time.","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"     * @param tasks the list of all tasks","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"     * @return the reminder message","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    public static String reminder(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"        Task nextTask \u003d null;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"        LocalDateTime nextTime \u003d null;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"            LocalDateTime taskTime \u003d null;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"                taskTime \u003d ((Deadline) t).getByDateTime();","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"                taskTime \u003d ((Event) t).getToDateTime();","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"            }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"            if (taskTime !\u003d null \u0026\u0026 taskTime.isAfter(now)) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"                if (nextTime \u003d\u003d null || taskTime.isBefore(nextTime)) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"                    nextTime \u003d taskTime;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"                    nextTask \u003d t;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"                }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"            }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"        if (nextTask \u003d\u003d null) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"            return \"You have no upcoming tasks!\";","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"        if (nextTask instanceof Deadline) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"            Deadline d \u003d (Deadline) nextTask;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"            return \"Next deadline: \" + d.getDescription()","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"                    + \" by \" + d.getByDateTime().format(formatter);","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"        } else if (nextTask instanceof Event) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"            Event e \u003d (Event) nextTask;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"            return \"Next event: \" + e.getDescription()","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"                    + \" ends by \" + e.getToDateTime().format(formatter);","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"        return \"\";","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false}],"authorContributionMap":{"Cavannn":58}},{"path":"src/main/java/goldenknight/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":" * Represents a generic task in the GoldenKnight application.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":" * A task has a description, a completion status, and a task type.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":" *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":" * Subclasses such as {@link Deadline} and {@link Event} extend this class","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":" * to represent more specific types of tasks.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"public class Task {","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"    /** Description of the task. */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"    protected String description;","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"    /** Whether the task is completed. */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    /** The type of task (e.g., ToDo, Deadline, Event). */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    protected TaskType type;","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"     * Constructs a new {@code Task} with the given type and description.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"     * By default, the task is not done.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"     * @param type the type of the task","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"     * @param description the task description","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"    public Task(TaskType type, String description) {","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"        assert type !\u003d null : \"Task type should not be null\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"        assert description !\u003d null \u0026\u0026 !description.isBlank() : \"Task description should not be null or blank\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"        assert this.isDone : \"Task should be marked as done\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-22T04:37:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"        assert !this.isDone : \"Task should be marked as not done\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"     * Returns the status icon representing completion.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"     * @return \"X\" if the task is done, otherwise \" \"","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"    public String getDescription() {","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"        assert description !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"        return this.description;","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"        return this.isDone;","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"     * Returns a string representation of the task","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"     * including its type, status, and description.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"     * @return a formatted string of the task","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"    @Override","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"        assert type !\u003d null : \"Task type should not be null when generating string\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"        assert description !\u003d null : \"Task description should not be null when generating string\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Cavannn"},"content":"        return \"[\" + this.type.getCode() + \"][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Cavannn"},"content":"     * Returns the task in file storage format.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Cavannn"},"content":"     * @return a string formatted for saving the task to a file","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Cavannn"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Cavannn"},"content":"        assert type !\u003d null : \"Task type should not be null when saving to file\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Cavannn"},"content":"        assert description !\u003d null : \"Task description should not be null when saving to file\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Cavannn"},"content":"        return this.type.getCode() + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Cavannn"},"content":"     * Reconstructs a {@code Task} object from its file storage format.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Cavannn"},"content":"     * @param line the string containing task data in file format","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Cavannn"},"content":"     * @return the reconstructed {@code Task}","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Cavannn"},"content":"     * @throws IllegalArgumentException if the format is invalid","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Cavannn"},"content":"    public static Task fromFileFormat(String line) {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Cavannn"},"content":"        assert line !\u003d null \u0026\u0026 !line.isBlank() : \"Input line for fromFileFormat should not be null or blank\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Cavannn"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Cavannn"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Cavannn"},"content":"            throw new IllegalArgumentException(\"Invalid task format: \" + line);","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Cavannn"},"content":"        TaskType type \u003d TaskType.fromCode(parts[0]);","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Cavannn"},"content":"        assert type !\u003d null : \"TaskType parsed from file should not be null\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Cavannn"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Cavannn"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Cavannn"},"content":"        assert description !\u003d null : \"Task description parsed from file should not be null\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Cavannn"},"content":"        Task task;","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Cavannn"},"content":"        switch (type) {","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Cavannn"},"content":"        case TODO:","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Cavannn"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Cavannn"},"content":"            break;","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Cavannn"},"content":"        case DEADLINE:","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Cavannn"},"content":"            task \u003d new Deadline(description, parts.length \u003e 3 ? parts[3] : \"\");","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Cavannn"},"content":"            break;","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Cavannn"},"content":"        case EVENT:","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Cavannn"},"content":"            task \u003d new Event(","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Cavannn"},"content":"                    description,","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Cavannn"},"content":"                    parts.length \u003e 3 ? parts[3] : \"\",","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Cavannn"},"content":"                    parts.length \u003e 4 ? parts[4] : \"\"","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Cavannn"},"content":"            );","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Cavannn"},"content":"            break;","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Cavannn"},"content":"        default:","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Cavannn"},"content":"            throw new IllegalArgumentException(\"Unknown task type: \" + type);","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Cavannn"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Cavannn"},"content":"            task.markAsDone();","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Cavannn"},"content":"        assert task !\u003d null : \"Reconstructed task should not be null\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Cavannn"},"content":"        return task;","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-08-22T03:50:55","isFullCredit":false}],"authorContributionMap":{"Cavannn":140}},{"path":"src/main/java/goldenknight/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":" * Represents a list of {@link Task} objects in the GoldenKnight application.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":" * Provides methods to add, delete, access, and retrieve tasks.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"public class TaskList {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"    /** The internal list storing the tasks. */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"     * Constructs a {@code TaskList} with an existing list of tasks.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"     * @param tasks the list of tasks to initialize with","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"        assert tasks !\u003d null : \"Task list provided to constructor should not be null\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"        assert this.tasks !\u003d null : \"Tasks list should be initialized\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"     * @param task the task to add","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"        assert task !\u003d null : \"Task to add should not be null\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"        assert tasks.contains(task) : \"Task should be added to the list\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"     * Deletes the task at the specified index from the list.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"     * @param index the index of the task to delete (0-based)","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"     * @return the deleted task","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"    public Task delete(int index) {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index for delete should be within bounds\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"        Task removed \u003d tasks.remove(index);","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"        assert removed !\u003d null : \"Deleted task should not be null\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"        return removed;","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"     * @param index the index of the task to retrieve (0-based)","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"     * @return the task at the given index","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index for get should be within bounds\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"        Task retrieved \u003d tasks.get(index);","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"        assert retrieved !\u003d null : \"Retrieved task should not be null\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"        return retrieved;","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"    public int size() {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"        assert tasks !\u003d null : \"Tasks list should not be null when checking size\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"        return tasks.size();","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Cavannn"},"content":"     * Returns the entire list of tasks.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Cavannn"},"content":"     * @return an {@link ArrayList} containing all tasks","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Cavannn"},"content":"    public ArrayList\u003cTask\u003e getAll() {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Cavannn"},"content":"        assert tasks !\u003d null : \"Tasks list should not be null when getting all tasks\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Cavannn"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Cavannn"},"content":"     * Searches for tasks that contain the specified keyword in their description.","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Cavannn"},"content":"     * @param keyword the keyword to search for in the task descriptions","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Cavannn"},"content":"     * @return an {@code ArrayList\u003cTask\u003e} containing all tasks whose descriptions","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Cavannn"},"content":"     *         include the specified keyword","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Cavannn"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Cavannn"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.isBlank() : \"Keyword for find should not be null or blank\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Cavannn"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Cavannn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Cavannn"},"content":"            assert task !\u003d null : \"Task in list should not be null\";","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Cavannn"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Cavannn"},"content":"                results.add(task);","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Cavannn"},"content":"            }","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Cavannn"},"content":"        return results;","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false}],"authorContributionMap":{"Cavannn":108}},{"path":"src/main/java/goldenknight/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":" * Represents the type of a task in the GoldenKnight application.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":" * Each task type is associated with a short string code used for","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":" * file storage and display.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"public enum TaskType {","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"    /** A task without a specific deadline or event (to-do). */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"    TODO(\"T\"),","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"    /** A task with a deadline. */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    /** A task that occurs at a specific time (event). */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"    EVENT(\"E\");","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    /** The short string code representing the task type. */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"    private final String code;","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"     * Constructs a {@code TaskType} with the specified string code.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"     * @param code the code representing the task type","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"    private TaskType(String code) {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"        this.code \u003d code;","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"     * Returns the string code associated with this task type.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"     * @return the task type code","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"    public String getCode() {","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"        return this.code;","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"     * Returns the {@code TaskType} corresponding to the given code.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"     * @param code the string code of the task type (e.g., \"T\", \"D\", \"E\")","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"     * @return the matching {@code TaskType}","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"     * @throws IllegalArgumentException if the code is {@code null} or invalid","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"    public static TaskType fromCode(String code) {","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"        if (code \u003d\u003d null) {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"            throw new IllegalArgumentException(\"Task type code cannot be null\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"        return switch (code) {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"        case \"T\" -\u003e TODO;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"        case \"D\" -\u003e DEADLINE;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"        case \"E\" -\u003e EVENT;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"        default -\u003e throw new IllegalArgumentException(\"Invalid task type code: \" + code);","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"        };","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-31T04:31:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false}],"authorContributionMap":{"Cavannn":58}},{"path":"src/main/java/goldenknight/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":" * Represents a {@link Task} of type {@link TaskType#TODO}.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":" * A to-do task is a simple task without any associated deadline or event time.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"     * Constructs a new {@code Todo} task with the given description.","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"     * @param description the details of the to-do task","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"        super(TaskType.TODO, description);","lastModifiedDate":"2025-08-22T04:54:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-08-22T04:06:59","isFullCredit":false}],"authorContributionMap":{"Cavannn":17}},{"path":"src/main/java/goldenknight/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.ui;","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T02:16:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import goldenknight.exception.DukeException;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Deadline;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Event;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Reminder;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Task;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.TaskList;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Todo;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"/**","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":" * GUI-ready version of Ui.","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":" * Methods now return Strings instead of printing to console.","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":" */","lastModifiedDate":"2025-09-02T11:51:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"public class Ui {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    private static final String LINE \u003d \"_______________________________________\";","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"        return LINE + \"\\nHello! I\u0027m the Golden Knight HEEHEEHEEHAA!\\n\"","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"                + \"What can I do for you?\\n\" + LINE;","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"        return LINE + \"\\nBye. Hope to see you again soon!\\n\" + LINE;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"    public String getTaskListString(TaskList tasks) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"        sb.append(LINE).append(\"\\nHere are the tasks in your list:\\n\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"            sb.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"        sb.append(LINE);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"     * Adds a new {@link Todo} task to the given task list.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"     * \u003cp\u003eThe description must not be {@code null} or blank, otherwise","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"     * a {@link DukeException} is thrown. Once added, a confirmation","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"     * message containing the task details and the updated task count","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"     * is returned.\u003c/p\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"     * @param tasks       the list of tasks to which the new todo will be added","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"     * @return a formatted confirmation message with the added task and total task count","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"     * @throws DukeException if the description is {@code null} or blank","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"    public String addTodoString(TaskList tasks, String description) throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"        if (description \u003d\u003d null || description.isBlank()) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"        return formatAddedTaskMessage(task, tasks.size());","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"     * Adds a new {@link Deadline} task to the given task list.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"     * \u003cp\u003eThe input must contain a description and a due date separated by \" /by \".","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"     * If the input is {@code null}, blank, or missing \"/by\", a {@link DukeException} is thrown.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"     * Once added, a confirmation message containing the task details and the updated","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"     * task count is returned.\u003c/p\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"     * @param tasks the list of tasks to which the new deadline will be added","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"     * @param input the user input containing the description and due date, separated by \" /by \"","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"     * @return a formatted confirmation message with the added task and total task count","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"     * @throws DukeException if the input is {@code null}, blank, or incorrectly formatted","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"    public String addDeadlineString(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"        if (input \u003d\u003d null || input.isBlank() || !input.contains(\"/by\")) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"            throw new DukeException(\"The deadline command must include a description and /by.\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"        String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"        if (parts.length \u003c 2 || parts[0].isBlank() || parts[1].isBlank()) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Cavannn"},"content":"            throw new DukeException(\"The description and date of a deadline cannot be empty.\");","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Cavannn"},"content":"        Task task \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Cavannn"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Cavannn"},"content":"        return formatAddedTaskMessage(task, tasks.size());","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Cavannn"},"content":"     * Adds a new {@link Event} task to the given task list.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Cavannn"},"content":"     * \u003cp\u003eThe input must contain a description, a start time, and an end time,","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Cavannn"},"content":"     * separated by \" /from \" and \" /to \". If the input is {@code null}, blank,","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Cavannn"},"content":"     * or missing the required delimiters, a {@link DukeException} is thrown.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Cavannn"},"content":"     * Once added, a confirmation message containing the task details and the updated","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Cavannn"},"content":"     * task count is returned.\u003c/p\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Cavannn"},"content":"     * @param tasks the list of tasks to which the new event will be added","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Cavannn"},"content":"     * @param input the user input containing the description, start time, and end time","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Cavannn"},"content":"     *              in the format \"description /from start /to end\"","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Cavannn"},"content":"     * @return a formatted confirmation message with the added task and total task count","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Cavannn"},"content":"     * @throws DukeException if the input is {@code null}, blank, or incorrectly formatted","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Cavannn"},"content":"    public String addEventString(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Cavannn"},"content":"        if (input \u003d\u003d null || input.isBlank() || !input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Cavannn"},"content":"            throw new DukeException(\"The event command must include /from and /to.\");","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Cavannn"},"content":"        String[] parts \u003d input.split(\" /from | /to \", 3);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Cavannn"},"content":"        if (parts.length \u003c 3 || parts[0].isBlank() || parts[1].isBlank() || parts[2].isBlank()) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Cavannn"},"content":"            throw new DukeException(\"The description, start time, and end time of an event cannot be empty.\");","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Cavannn"},"content":"        Task task \u003d new Event(parts[0], parts[1], parts[2]);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Cavannn"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Cavannn"},"content":"        return formatAddedTaskMessage(task, tasks.size());","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Cavannn"},"content":"     * Formats a confirmation message for a newly added task.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Cavannn"},"content":"     * \u003cp\u003eThis method returns a string containing the task that was added","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Cavannn"},"content":"     * and the updated total number of tasks in the list. The message","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Cavannn"},"content":"     * is wrapped with separator lines for readability in the GUI.\u003c/p\u003e","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Cavannn"},"content":"     * @param task       the task that was just added","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Cavannn"},"content":"     * @param totalTasks the updated total number of tasks in the list","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Cavannn"},"content":"     * @return a formatted confirmation message for the added task","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Cavannn"},"content":"    private String formatAddedTaskMessage(Task task, int totalTasks) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Cavannn"},"content":"        return LINE + \"\\nGot it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Cavannn"},"content":"                + task + \"\\nNow you have \" + totalTasks + \" tasks in the list.\\n\" + LINE;","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Cavannn"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Cavannn"},"content":"     * @param tasks the task list","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Cavannn"},"content":"     * @param index the index of the task to mark","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Cavannn"},"content":"     * @return a confirmation message","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Cavannn"},"content":"     * @throws DukeException if the index is invalid","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Cavannn"},"content":"    public String markTaskString(TaskList tasks, int index) throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Cavannn"},"content":"        checkIndex(tasks, index);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Cavannn"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Cavannn"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Cavannn"},"content":"        return LINE + \"\\nNice! I\u0027ve marked this task as done:\\n  \" + task + \"\\n\" + LINE;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Cavannn"},"content":"     * Unmarks the task at the given index (sets it as not done).","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Cavannn"},"content":"     * @param tasks the task list","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Cavannn"},"content":"     * @param index the index of the task to unmark","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Cavannn"},"content":"     * @return a confirmation message","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Cavannn"},"content":"     * @throws DukeException if the index is invalid","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Cavannn"},"content":"    public String unmarkTaskString(TaskList tasks, int index) throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Cavannn"},"content":"        checkIndex(tasks, index);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Cavannn"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Cavannn"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Cavannn"},"content":"        return LINE + \"\\nOK! I\u0027ve marked this task as not done yet:\\n  \" + task + \"\\n\" + LINE;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Cavannn"},"content":"     * Checks if the given index is valid for the task list.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Cavannn"},"content":"     * @param tasks the task list","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Cavannn"},"content":"     * @param index the index to check","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Cavannn"},"content":"     * @throws DukeException if the index is out of range","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Cavannn"},"content":"    private void checkIndex(TaskList tasks, int index) throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Cavannn"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Cavannn"},"content":"            throw new DukeException(\"Task number is out of range.\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Cavannn"},"content":"     * Deletes the task at the given index from the task list.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Cavannn"},"content":"     * @param tasks the task list","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Cavannn"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Cavannn"},"content":"     * @return a confirmation message","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Cavannn"},"content":"     * @throws DukeException if the index is invalid","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Cavannn"},"content":"    public String deleteTaskString(TaskList tasks, int index) throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Cavannn"},"content":"        checkIndex(tasks, index);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Cavannn"},"content":"        Task removed \u003d tasks.delete(index);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Cavannn"},"content":"        return LINE + \"\\nNoted. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Cavannn"},"content":"                + removed + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + LINE;","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Cavannn"},"content":"     * Finds tasks that contain the given keyword in their description.","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Cavannn"},"content":"     * @param tasks   the task list","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Cavannn"},"content":"     * @param keyword the search keyword","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Cavannn"},"content":"     * @return a formatted string of matching tasks","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Cavannn"},"content":"     * @throws DukeException if the keyword is null or blank","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Cavannn"},"content":"    public String findTasksString(TaskList tasks, String keyword) throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Cavannn"},"content":"        if (keyword \u003d\u003d null || keyword.isBlank()) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Cavannn"},"content":"            throw new DukeException(\"The find command requires a keyword.\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Cavannn"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Cavannn"},"content":"        sb.append(LINE).append(\"\\nHere are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Cavannn"},"content":"        int count \u003d 0;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Cavannn"},"content":"        for (Task t : tasks.getAll()) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Cavannn"},"content":"            if (t.getDescription().contains(keyword)) {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Cavannn"},"content":"                count++;","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Cavannn"},"content":"                sb.append(count).append(\". \").append(t).append(\"\\n\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Cavannn"},"content":"            }","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-02T18:02:11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Cavannn"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Cavannn"},"content":"            sb.append(\"No matching tasks found.\\n\");","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Cavannn"},"content":"        sb.append(LINE);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Cavannn"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Cavannn"},"content":"    /**","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Cavannn"},"content":"     * Returns a message showing the next upcoming task (deadline or event).","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Cavannn"},"content":"     *","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Cavannn"},"content":"     * @param tasks the TaskList containing all tasks","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Cavannn"},"content":"     * @return a reminder string","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Cavannn"},"content":"     */","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Cavannn"},"content":"    public String getNextTaskReminder(TaskList tasks) {","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Cavannn"},"content":"        // Assuming TaskList has a method getAll() that returns ArrayList\u003cTask\u003e","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Cavannn"},"content":"        return LINE + \"\\n\" + Reminder.reminder(tasks.getAll()) + \"\\n\" + LINE;","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-15T02:07:45","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-01T01:57:59","isFullCredit":false}],"authorContributionMap":{"Cavannn":227}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false}],"authorContributionMap":{"Cavannn":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"            fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false}],"authorContributionMap":{"Cavannn":43}},{"path":"src/test/java/goldenknight/GoldenKnightTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"class GoldenKnightTest {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"    private GoldenKnight goldenKnight;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"    void setUp() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"        // Use a test file path; storage will save/load tasks here","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"        goldenKnight \u003d new GoldenKnight(\"test_tasks.txt\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"    void getWelcomeMessage_shouldContainGreeting() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"        String welcome \u003d goldenKnight.getWelcomeMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"        assertTrue(welcome.contains(\"Hello! I\u0027m the Golden Knight HEEHEEHEEHAA!\"));","lastModifiedDate":"2025-09-11T23:59:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"    void addTodoListTasks_shouldWork() {","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"        String addResponse \u003d goldenKnight.addTodo(\"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"        assertTrue(addResponse.contains(\"I\u0027ve added this task\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"        assertTrue(addResponse.contains(\"Finish homework\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"        String listResponse \u003d goldenKnight.listTasks();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"        assertTrue(listResponse.contains(\"Here are the tasks in your list\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"        assertTrue(listResponse.contains(\"1. [T][ ] Finish homework\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"    void markUnmarkTask_shouldWork() {","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"        goldenKnight.addTodo(\"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"        String markResponse \u003d goldenKnight.markTask(0);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"        assertTrue(markResponse.contains(\"marked this task as done\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"        assertTrue(markResponse.contains(\"[T][X] Finish homework\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"        String unmarkResponse \u003d goldenKnight.unmarkTask(0);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"        assertTrue(unmarkResponse.contains(\"marked this task as not done\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"        assertTrue(unmarkResponse.contains(\"[T][ ] Finish homework\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"    void deleteTask_shouldWork() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"        goldenKnight.addTodo(\"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"        String deleteResponse \u003d goldenKnight.deleteTask(0);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"        assertTrue(deleteResponse.contains(\"I\u0027ve removed this task\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"        assertTrue(deleteResponse.contains(\"Finish homework\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"    void addDeadline_shouldReturnCorrectMessage() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"        String response \u003d goldenKnight.addDeadline(\"Submit report /by 10/9/2025 2359\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"        assertTrue(response.contains(\"I\u0027ve added this task\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"        assertTrue(response.contains(\"Submit report\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"    void addEvent_shouldReturnCorrectMessage() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"        String response \u003d goldenKnight.addEvent(\"Project meeting /from 6/9/2025 1000 /to 6/9/2025 1100\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"        assertTrue(response.contains(\"I\u0027ve added this task\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"        assertTrue(response.contains(\"Project meeting\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"    void findTasks_shouldReturnMatchingTasks() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"        goldenKnight.addTodo(\"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"        goldenKnight.addTodo(\"Read book\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"        String response \u003d goldenKnight.findTasks(\"homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"        assertTrue(response.contains(\"matching tasks\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Cavannn"},"content":"        assertTrue(response.contains(\"Finish homework\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Cavannn"},"content":"        assertFalse(response.contains(\"Read book\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Cavannn"},"content":"    void invalidMarkIndex_shouldReturnError() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Cavannn"},"content":"        goldenKnight.addTodo(\"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Cavannn"},"content":"        String response \u003d goldenKnight.markTask(5); // invalid index","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Cavannn"},"content":"        assertTrue(response.startsWith(\"Error:\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Cavannn"},"content":"    void invalidDeleteIndex_shouldReturnError() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Cavannn"},"content":"        goldenKnight.addTodo(\"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Cavannn"},"content":"        String response \u003d goldenKnight.deleteTask(5); // invalid index","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Cavannn"},"content":"        assertTrue(response.startsWith(\"Error:\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false}],"authorContributionMap":{"Cavannn":96}},{"path":"src/test/java/goldenknight/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.parser;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"import goldenknight.exception.DukeException;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"class ParserTest {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"    void parse_normalInput_splitsCorrectly() throws DukeException {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"    private void assertEquals(String todo, String s) {","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"    private void assertEquals(int i, int length) {","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"    void parse_singleWordInput_returnsSingleElementArray() throws DukeException {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"        String[] result \u003d Parser.parse(input);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"        assertEquals(1, result.length);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"list\", result[0]);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"    void parse_inputWithLeadingTrailingSpaces_trimsAndSplitsCorrectly() throws DukeException {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"        String input \u003d \"   deadline submit report   \";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"        String[] result \u003d Parser.parse(input);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"        assertEquals(2, result.length);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"deadline\", result[0]);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"submit report\", result[1]);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"    void parse_emptyInput_throwsDukeException() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"        String input \u003d \"\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(input));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"OOPS!!! You entered an empty command.\", exception.getMessage());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"    void parse_blankInput_throwsDukeException() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"        String input \u003d \"     \";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(input));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"OOPS!!! You entered an empty command.\", exception.getMessage());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false}],"authorContributionMap":{"Cavannn":52}},{"path":"src/test/java/goldenknight/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.storage;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"import java.io.File;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Deadline;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Event;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Task;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.Todo;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"class StorageTest {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    private static final String TEST_FILE \u003d \"test_tasks.txt\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"    void setUp() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"        storage \u003d new Storage(TEST_FILE);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"    @AfterEach","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"    void tearDown() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"        // Delete the test file after each test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"        File file \u003d new File(TEST_FILE);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"            file.delete();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"    void saveAndLoad_multipleTasks_shouldReturnSameTasks() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"        tasks.add(new Todo(\"Todo 1\"));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"        tasks.add(new Deadline(\"Deadline 1\", \"2/9/2025 1800\"));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"        tasks.add(new Event(\"Event 1\", \"2/9/2025 1000\", \"2/9/2025 1200\"));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"        // mark one as done","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"        tasks.get(0).markAsDone();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"        assertEquals(tasks.size(), loadedTasks.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"            assertEquals(tasks.get(i).toFileFormat(), loadedTasks.get(i).toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"        }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"    void load_emptyFile_shouldReturnEmptyList() throws Exception {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"        // Create an empty file","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"        new File(TEST_FILE).createNewFile();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"        assertTrue(loadedTasks.isEmpty());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"    void load_fileWithCorruptedLines_shouldSkipCorruptedLines() throws Exception {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"        FileWriter fw \u003d new FileWriter(TEST_FILE);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"        fw.write(\"T | 0 | Todo 1\\n\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"        fw.write(\"INVALID LINE\\n\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"        fw.write(\"D | 1 | Deadline 1 | 2/9/2025 1800\\n\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"        fw.close();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"        assertEquals(2, loadedTasks.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"T | 0 | Todo 1\", loadedTasks.get(0).toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"D | 1 | Deadline 1 | 2/9/2025 1800\", loadedTasks.get(1).toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false}],"authorContributionMap":{"Cavannn":80}},{"path":"src/test/java/goldenknight/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"    public void toString_validDeadline_correctFormat() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"        Deadline d \u003d new Deadline(\"submit assignment\", \"2/9/2025 1800\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"        String expected \u003d \"[D][ ] submit assignment (by: Sep 2 2025 18:00)\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"        assertEquals(expected, d.toString());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    private void assertEquals(String expected, String string) {","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    public void toFileFormat_notDone_correctOutput() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"        Deadline d \u003d new Deadline(\"submit assignment\", \"2/9/2025 1800\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"        String expected \u003d \"D | 0 | submit assignment | 2/9/2025 1800\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"        assertEquals(expected, d.toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"    public void toFileFormat_markedDone_correctOutput() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"        Deadline d \u003d new Deadline(\"submit assignment\", \"2/9/2025 1800\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"        d.markAsDone();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"        String expected \u003d \"D | 1 | submit assignment | 2/9/2025 1800\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"        assertEquals(expected, d.toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"    public void fromFileFormat_doneTask_reconstructedCorrectly() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"        String[] parts \u003d {\"D\", \"1\", \"submit assignment\", \"2/9/2025 1800\"};","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"        Deadline d \u003d Deadline.fromFileFormat(parts);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"        assertTrue(d.isDone(), \"Deadline should be marked as done\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"D | 1 | submit assignment | 2/9/2025 1800\", d.toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"    public void fromFileFormat_notDoneTask_reconstructedCorrectly() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"        String[] parts \u003d {\"D\", \"0\", \"submit assignment\", \"2/9/2025 1800\"};","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"        Deadline d \u003d Deadline.fromFileFormat(parts);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"        assertFalse(d.isDone(), \"Deadline should not be marked as done\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"D | 0 | submit assignment | 2/9/2025 1800\", d.toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false}],"authorContributionMap":{"Cavannn":50}},{"path":"src/test/java/goldenknight/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"class EventTest {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"    void toString_validEvent_correctFormat() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"        Event e \u003d new Event(\"team meeting\", \"2/9/2025 1000\", \"2/9/2025 1200\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"        String expected \u003d \"[E][ ] team meeting (from: Sep 2 2025 10:00 to: Sep 2 2025 12:00)\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"        assertEquals(expected, e.toString());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    private void assertEquals(String expected, String string) {","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"    void toFileFormat_notDone_correctOutput() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"        Event e \u003d new Event(\"team meeting\", \"2/9/2025 1000\", \"2/9/2025 1200\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"        String expected \u003d \"E | 0 | team meeting | 2/9/2025 1000 | 2/9/2025 1200\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"        assertEquals(expected, e.toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"    void toFileFormat_markedDone_correctOutput() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"        Event e \u003d new Event(\"team meeting\", \"2/9/2025 1000\", \"2/9/2025 1200\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"        e.markAsDone();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"        String expected \u003d \"E | 1 | team meeting | 2/9/2025 1000 | 2/9/2025 1200\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"        assertEquals(expected, e.toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"    void fromFileFormat_doneEvent_reconstructedCorrectly() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"        String[] parts \u003d {\"E\", \"1\", \"team meeting\", \"2/9/2025 1000\", \"2/9/2025 1200\"};","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"        Event e \u003d Event.fromFileFormat(parts);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"        assertTrue(e.isDone(), \"Event should be marked as done\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"E | 1 | team meeting | 2/9/2025 1000 | 2/9/2025 1200\", e.toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"    void fromFileFormat_notDoneEvent_reconstructedCorrectly() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"        String[] parts \u003d {\"E\", \"0\", \"team meeting\", \"2/9/2025 1000\", \"2/9/2025 1200\"};","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"        Event e \u003d Event.fromFileFormat(parts);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"        assertFalse(e.isDone(), \"Event should not be marked as done\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"E | 0 | team meeting | 2/9/2025 1000 | 2/9/2025 1200\", e.toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"    void fromFileFormat_invalidInput_throwsException() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"        // Input array shorter than 5 elements","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"        String[] invalidParts \u003d {\"E\", \"0\", \"Description\"};","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"        // Assert that IllegalArgumentException is thrown","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"            Event.fromFileFormat(invalidParts);","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"        });","lastModifiedDate":"2025-09-02T12:20:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false}],"authorContributionMap":{"Cavannn":62}},{"path":"src/test/java/goldenknight/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"class TaskListTest {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"    private Task task1;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    private Task task2;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    void setUp() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"        task1 \u003d new Task(TaskType.TODO, \"Read book\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"        task2 \u003d new Task(TaskType.TODO, \"Write report\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"    void add_shouldIncreaseSize() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"    void get_shouldReturnCorrectTask() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"        assertEquals(task1, taskList.get(0));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"        assertEquals(task2, taskList.get(1));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"    void delete_shouldRemoveAndReturnTask() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"        Task removed \u003d taskList.delete(0);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"        assertEquals(task1, removed);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"        assertEquals(task2, taskList.get(0));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"    void getAll_shouldReturnAllTasks() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d taskList.getAll();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"        assertEquals(2, allTasks.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"        assertTrue(allTasks.contains(task1));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"        assertTrue(allTasks.contains(task2));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"    void size_shouldReflectNumberOfTasks() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"        taskList.delete(1);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false}],"authorContributionMap":{"Cavannn":71}},{"path":"src/test/java/goldenknight/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"class TaskTest {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"    void markAsDone_shouldSetIsDoneToTrue() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"        Task task \u003d new Task(TaskType.TODO, \"Read book\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"        assertFalse(task.isDone, \"Task should initially be not done\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"        assertTrue(task.isDone, \"Task should be marked as done\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"    private void assertFalse(boolean isDone, String s) {","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"    void markAsNotDone_shouldSetIsDoneToFalse() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"        Task task \u003d new Task(TaskType.TODO, \"Read book\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"        assertFalse(task.isDone, \"Task should be marked as not done\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"    void getStatusIcon_returnsCorrectSymbol() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"        Task task \u003d new Task(TaskType.TODO, \"Read book\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\" \", task.getStatusIcon(), \"Default task should not be done\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"X\", task.getStatusIcon(), \"Task should return \u0027X\u0027 when done\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"    void toString_returnsCorrectFormat() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"        Task task \u003d new Task(TaskType.TODO, \"Read book\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"        String expected \u003d \"[T][ ] Read book\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"        assertEquals(expected, task.toString(), \"toString should match expected format\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"        String expectedDone \u003d \"[T][X] Read book\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"        assertEquals(expectedDone, task.toString(), \"toString should reflect done status\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"    void toFileFormat_returnsCorrectFormat() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"        Task task \u003d new Task(TaskType.TODO, \"Read book\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"        String expected \u003d \"T | 0 | Read book\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"        assertEquals(expected, task.toFileFormat(), \"File format should match expected when not done\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"        String expectedDone \u003d \"T | 1 | Read book\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"        assertEquals(expectedDone, task.toFileFormat(), \"File format should reflect done status\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"    void fromFileFormat_validInput_returnsCorrectTask() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"        String line \u003d \"T | 1 | Read book\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"        Task task \u003d Task.fromFileFormat(line);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"        assertEquals(TaskType.TODO, task.type);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"Read book\", task.description);","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"        assertTrue(task.isDone, \"Task should be marked as done from file format\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"    void fromFileFormat_invalidInput_throwsException() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"        String invalidLine \u003d \"invalid format line\";","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"        assertThrows(IllegalArgumentException.class, (","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"                ) -\u003e Task.fromFileFormat(invalidLine),","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"                \"Invalid input should throw IllegalArgumentException\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false}],"authorContributionMap":{"Cavannn":78}},{"path":"src/test/java/goldenknight/task/TaskTypeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"class TaskTypeTest {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"    void getCode_returnsCorrectCode() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"T\", TaskType.TODO.getCode());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"D\", TaskType.DEADLINE.getCode());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"E\", TaskType.EVENT.getCode());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"    private void assertEquals(String t, String code) {","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    private void assertEquals(TaskType taskType, TaskType t) {","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    void fromCode_validCode_returnsCorrectEnum() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"        assertEquals(TaskType.TODO, TaskType.fromCode(\"T\"));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"        assertEquals(TaskType.DEADLINE, TaskType.fromCode(\"D\"));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"        assertEquals(TaskType.EVENT, TaskType.fromCode(\"E\"));","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"    void fromCode_invalidCode_throwsException() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false}],"authorContributionMap":{"Cavannn":31}},{"path":"src/test/java/goldenknight/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.task;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"class TodoTest {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"    void constructor_shouldCreateTodoWithCorrectDescription() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"        Todo todo \u003d new Todo(\"Finish homework\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"[T][ ] Finish homework\", todo.toString());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"        assertFalse(todo.isDone(), \"New Todo should not be marked as done\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    void toString_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"        Todo todo \u003d new Todo(\"Finish homework\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"[T][ ] Finish homework\", todo.toString());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"    void toString_done_returnsCorrectFormat() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"        Todo todo \u003d new Todo(\"Finish homework\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"[T][X] Finish homework\", todo.toString());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"    void toFileFormat_notDone_returnsCorrectFormat() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"        Todo todo \u003d new Todo(\"Finish homework\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"T | 0 | Finish homework\", todo.toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"    void toFileFormat_done_returnsCorrectFormat() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"        Todo todo \u003d new Todo(\"Finish homework\");","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"T | 1 | Finish homework\", todo.toFileFormat());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false}],"authorContributionMap":{"Cavannn":42}},{"path":"src/test/java/goldenknight/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"package goldenknight.ui;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-13T13:10:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Cavannn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"import goldenknight.exception.DukeException;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Cavannn"},"content":"import goldenknight.task.TaskList;","lastModifiedDate":"2025-09-06T04:38:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Cavannn"},"content":"class UiTest {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Cavannn"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Cavannn"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Cavannn"},"content":"    void setUp() {","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Cavannn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Cavannn"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Cavannn"},"content":"    void getWelcomeMessage_shouldContainGreeting() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Cavannn"},"content":"        String msg \u003d ui.getWelcomeMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Cavannn"},"content":"        assertTrue(msg.contains(\"Hello! I\u0027m the Golden Knight HEEHEEHEEHAA!\"));","lastModifiedDate":"2025-09-11T23:59:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Cavannn"},"content":"    void getGoodbyeMessage_shouldContainFarewell() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Cavannn"},"content":"        String msg \u003d ui.getGoodbyeMessage();","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Cavannn"},"content":"        assertTrue(msg.contains(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Cavannn"},"content":"    void addTodoString_shouldAddTodo() throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Cavannn"},"content":"        String result \u003d ui.addTodoString(tasks, \"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Cavannn"},"content":"        assertTrue(result.contains(\"I\u0027ve added this task\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Cavannn"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Cavannn"},"content":"        assertTrue(tasks.get(0).getDescription().equals(\"Finish homework\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Cavannn"},"content":"    void addTodoString_invalidInput_shouldThrow() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Cavannn"},"content":"        DukeException e \u003d assertThrows(DukeException.class, () -\u003e ui.addTodoString(tasks, \"\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Cavannn"},"content":"        assertTrue(e.getMessage().contains(\"cannot be empty\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Cavannn"},"content":"    void addDeadlineString_shouldAddDeadline() throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Cavannn"},"content":"        String input \u003d \"Submit report /by 6/9/2025 2359\";","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Cavannn"},"content":"        String result \u003d ui.addDeadlineString(tasks, input);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Cavannn"},"content":"        assertTrue(result.contains(\"I\u0027ve added this task\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Cavannn"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Cavannn"},"content":"        assertTrue(tasks.get(0).getDescription().equals(\"Submit report\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Cavannn"},"content":"    void addDeadlineString_invalidInput_shouldThrow() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Cavannn"},"content":"        String input \u003d \"Submit report\";","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Cavannn"},"content":"        DukeException e \u003d assertThrows(DukeException.class, () -\u003e ui.addDeadlineString(tasks, input));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Cavannn"},"content":"        assertTrue(e.getMessage().contains(\"/by\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Cavannn"},"content":"    void addEventString_shouldAddEvent() throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Cavannn"},"content":"        String input \u003d \"Team meeting /from 6/9/2025 1000 /to 6/9/2025 1100\";","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Cavannn"},"content":"        String result \u003d ui.addEventString(tasks, input);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Cavannn"},"content":"        assertTrue(result.contains(\"I\u0027ve added this task\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Cavannn"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Cavannn"},"content":"        assertTrue(tasks.get(0).getDescription().equals(\"Team meeting\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Cavannn"},"content":"    void addEventString_invalidInput_shouldThrow() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Cavannn"},"content":"        String input \u003d \"Team meeting\";","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Cavannn"},"content":"        DukeException e \u003d assertThrows(DukeException.class, () -\u003e ui.addEventString(tasks, input));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Cavannn"},"content":"        assertTrue(e.getMessage().contains(\"/from\") \u0026\u0026 e.getMessage().contains(\"/to\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Cavannn"},"content":"    void markTaskString_shouldMarkTask() throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Cavannn"},"content":"        ui.addTodoString(tasks, \"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Cavannn"},"content":"        String result \u003d ui.markTaskString(tasks, 0);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Cavannn"},"content":"        assertTrue(result.contains(\"marked this task as done\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\"X\", tasks.get(0).getStatusIcon());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Cavannn"},"content":"    void unmarkTaskString_shouldUnmarkTask() throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Cavannn"},"content":"        ui.addTodoString(tasks, \"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Cavannn"},"content":"        ui.markTaskString(tasks, 0);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Cavannn"},"content":"        String result \u003d ui.unmarkTaskString(tasks, 0);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Cavannn"},"content":"        assertTrue(result.contains(\"marked this task as not done yet\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Cavannn"},"content":"        assertEquals(\" \", tasks.get(0).getStatusIcon());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Cavannn"},"content":"    void markTaskString_invalidIndex_shouldThrow() {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Cavannn"},"content":"        DukeException e \u003d assertThrows(DukeException.class, () -\u003e ui.markTaskString(tasks, 0));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Cavannn"},"content":"        assertTrue(e.getMessage().contains(\"out of range\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Cavannn"},"content":"    void deleteTaskString_shouldDeleteTask() throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Cavannn"},"content":"        ui.addTodoString(tasks, \"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Cavannn"},"content":"        String result \u003d ui.deleteTaskString(tasks, 0);","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Cavannn"},"content":"        assertTrue(result.contains(\"I\u0027ve removed this task\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Cavannn"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Cavannn"},"content":"    void findTasksString_shouldFindMatchingTasks() throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Cavannn"},"content":"        ui.addTodoString(tasks, \"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Cavannn"},"content":"        ui.addTodoString(tasks, \"Read book\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Cavannn"},"content":"        String result \u003d ui.findTasksString(tasks, \"Read\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Cavannn"},"content":"        assertTrue(result.contains(\"Read book\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Cavannn"},"content":"        assertTrue(!result.contains(\"Finish homework\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Cavannn"},"content":"","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Cavannn"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Cavannn"},"content":"    void findTasksString_noMatch_shouldReturnMessage() throws DukeException {","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Cavannn"},"content":"        ui.addTodoString(tasks, \"Finish homework\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Cavannn"},"content":"        String result \u003d ui.findTasksString(tasks, \"Play\");","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Cavannn"},"content":"        assertTrue(result.contains(\"No matching tasks found\"));","lastModifiedDate":"2025-09-06T17:34:43","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Cavannn"},"content":"    }","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Cavannn"},"content":"}","lastModifiedDate":"2025-09-02T02:38:24","isFullCredit":false}],"authorContributionMap":{"Cavannn":128}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cavannn"},"content":"todo read book","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Cavannn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Cavannn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Cavannn"},"content":"list","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Cavannn"},"content":"mark 1","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Cavannn"},"content":"unmark 2","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"bye","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false}],"authorContributionMap":{"Cavannn":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Cavannn"},"content":"del ACTUAL.TXT 2\u003enul","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Cavannn"},"content":"REM compile the code into the bin folder using full JDK path","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Cavannn"},"content":"\"C:\\Users\\cavan\\.jdks\\openjdk-24.0.2+12-54\\bin\\javac\" -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Cavannn"},"content":"REM run the program, feed commands from input.txt and redirect the output to ACTUAL.TXT","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Cavannn"},"content":"\"C:\\Users\\cavan\\.jdks\\openjdk-24.0.2+12-54\\bin\\java\" -classpath ..\\bin GoldenKnight \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T04:25:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":15,"Cavannn":5}}]
