{"authorDailyContributionsMap":{"javierlimt6":[{"date":"2025-08-25T00:00:00","commitResults":[{"hash":"848463dba0e3d8e96a64eb1ee78a6a7f2830828f","isMergeCommit":false,"messageTitle":"renamed chatbot and added greetings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":10}}},{"hash":"0827d9a0313c0696f401af4baf1af6f333286a6f","isMergeCommit":false,"messageTitle":"refactor to use indentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"6951b71d41eb726ebefe0b5bf29aa8702df320c7","isMergeCommit":false,"messageTitle":"refactored greetings and goodbyes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":2}}},{"hash":"df8ba1fb0bb74ae2c21a1650a4cd8993357f17f2","isMergeCommit":false,"messageTitle":"added listening with echo support","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"c4a550d36eed051998f181a1ce60661bbd2be68f","isMergeCommit":false,"messageTitle":"added memory support","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"c22f2db93afdcbf272a0a46bded80e2400b23f64","isMergeCommit":false,"messageTitle":"added functionality to list memory contents","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"b3fda7699246a0267c449d094d99bb033ab1d69e","isMergeCommit":false,"messageTitle":"refactor memory handling to use Task class for better structure","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":4}}},{"hash":"b039d694c3ce9c765f1bcacde9817b55979e7e56","isMergeCommit":false,"messageTitle":"refactored list command into its own method; added mark/unmark methods","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":27}}},{"hash":"c28d8ea99c72e5c1372cb2ad86c20bb9f3fc322e","isMergeCommit":false,"messageTitle":"add ToDo/Deadline/Event support and task commands","messageBody":"- Introduce abstract Task with ToDo, Deadline, and Event subclasses\n- Add parsing and handling for \"todo\", \"deadline (/by)\", and \"event (/from /to)\" commands\n- Implement \"list\", \"mark\", and \"unmark\" commands with formatted output\n- Keep simple in-memory Task[] storage and basic input validation\n- Preserve greeting/listen loop and separators; no date parsing\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":156,"deletions":37}}},{"hash":"bea33d5c5f95ce1caee5aa22cd99514e7f63519f","isMergeCommit":false,"messageTitle":"started using textuitesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":18,"deletions":0},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1},"md":{"insertions":22,"deletions":0}}},{"hash":"7e8bafac6ffb94ce9db394619e6b8d062304a96c","isMergeCommit":false,"messageTitle":"refactored task classes","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":18},"java":{"insertions":51,"deletions":48},"sh":{"insertions":0,"deletions":0}}},{"hash":"dae5605ccf3dec9b7b254e661cf69d6967718fe8","isMergeCommit":false,"messageTitle":"Added FridayException class. Converted command processing to use exceptions (blank command ignored, unknown command throws FridayException). Added validation with descriptive messages for empty todo/deadline/event and invalid task numbers. addTodo, addDeadline, addEvent, and requireIndex now throw FridayException. Listen loop uses labeled break and single try/catch; scanner closed cleanly. Extracted task subclasses earlier remain untouched.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":39}}},{"hash":"bdc82ce63313d152441858c62be02eb7d3d2fa2c","isMergeCommit":false,"messageTitle":"refactored task memory to use ArrayList over array, removed redundant mempointer","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":1},"java":{"insertions":24,"deletions":26}}},{"hash":"1aa63ec88bb79527e2e238d22346180723598556","isMergeCommit":false,"messageTitle":"implemented delete command with testing updates","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":14,"deletions":0}}},{"hash":"5a432794a84e29308d895854021f1c5ae493906e","isMergeCommit":false,"messageTitle":"add enums for task typing; added private attributes","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":24}}}]},{"date":"2025-08-26T00:00:00","commitResults":[{"hash":"83811740a5d307f9785f634c03aa6dd425f625a3","isMergeCommit":false,"messageTitle":"Add empty data.txt file","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0}}},{"hash":"a589947be333468591b548d689f855bf73433011","isMergeCommit":false,"messageTitle":"Implement storage initialization to create data directory and handle file absence","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}}]},{"date":"2025-08-27T00:00:00","commitResults":[{"hash":"7623eb70c01673d0032073d6141d7587ecad2929","isMergeCommit":false,"messageTitle":"Add getter methods for Deadline and Event classes; enhance Task class with isDone method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":4}}},{"hash":"969f178293ddaa40f5bf7b75c37b78488435c6fd","isMergeCommit":false,"messageTitle":"Make storage path deterministic by locating ip/src/main/data regardless of CWD","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":48,"deletions":19}}},{"hash":"a71c39c57d87925cdc94359ef617027ca91a53a9","isMergeCommit":false,"messageTitle":"Update AI.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":14,"deletions":11}}},{"hash":"a94525b854e162c846433470d629080431185d39","isMergeCommit":false,"messageTitle":"Add task loading from duke.txt on startup","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":55,"deletions":1}}},{"hash":"75825bef5e3b7030d033c32cc7a8cc99e66d35b5","isMergeCommit":false,"messageTitle":"Update Deadline class to use LocalDate for date storage and formatted display","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":5}}},{"hash":"7ee2c1f576e1b30bbbb64bc7ee7230bf459171de","isMergeCommit":false,"messageTitle":"Add date parsing in addDeadline command with error handling","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":18},"md":{"insertions":3,"deletions":1}}},{"hash":"730a7eeb251a2445343a5d95ce4a39f60046ad9a","isMergeCommit":false,"messageTitle":"Extract all task list logic into a class TaskList","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":110,"deletions":43},"md":{"insertions":1,"deletions":1}}},{"hash":"b4525bd8f3277a846c03b6594fd9a0ae5079730a","isMergeCommit":false,"messageTitle":"Refactor to Ui classes with date support","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":136,"deletions":58},"md":{"insertions":5,"deletions":4}}},{"hash":"3f7680b69b2cf62021a4b2bf871b2d33c2a0933e","isMergeCommit":false,"messageTitle":"refactor printIndentation to printIndent","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":44}}},{"hash":"652a956f1530d989e5b400e14282b4ca83af39b6","isMergeCommit":false,"messageTitle":"Refactor to extract validation/parsing logic into Parser class; Add comments for readability","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":234,"deletions":140},"md":{"insertions":5,"deletions":4}}},{"hash":"b46c4e33ff20e2df4dc472a54e8b9e4c27445b6e","isMergeCommit":false,"messageTitle":"Update text-uitesting; Fixed additional indent bug","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":24,"deletions":15},"java":{"insertions":5,"deletions":2}}},{"hash":"4c7e4e7a37c583c57b68a9b19781fabebe80155d","isMergeCommit":false,"messageTitle":"Debug minor ui glitches","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":8},"java":{"insertions":1,"deletions":1}}}]},{"date":"2025-08-31T00:00:00","commitResults":[{"hash":"16631d0ffcbd8c30896e3566d4082600fbd5b27c","isMergeCommit":false,"messageTitle":"Abstract all file I/O logic into a new Storage class","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":3},"java":{"insertions":94,"deletions":70},"md":{"insertions":6,"deletions":5}}},{"hash":"1c9fb6a80d3597a6766dd4b7489067db43f2e38b","isMergeCommit":false,"messageTitle":"organise all classes into friday package","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":22,"deletions":0},"md":{"insertions":7,"deletions":6}}},{"hash":"594bcb18ab7f42219171800144ccc9cfb47ccdd6","isMergeCommit":false,"messageTitle":"Bump gradle and lib version","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":4}}},{"hash":"eba9edd7370d7cdf410244416528fdf5cbb7a468","isMergeCommit":false,"messageTitle":"build.gradle: Prevent generating a second JAR file","messageBody":"In build.gradle, the dependencies on distZip and/or distTar causes\nthe shadowJar task to generate a second JAR file for which the\nmainClass.set(\"seedu.duke.Duke\") does not take effect.\nHence, this additional JAR file cannot be run.\nFor this product, there is no need to generate a second JAR file\nto begin with.\n\nLet\u0027s remove this dependency from the build.gradle to prevent the\nshadowJar task from generating the extra JAR file.\n","fileTypesAndContributionMap":{"gradle":{"insertions":0,"deletions":1}}}]},{"date":"2025-09-03T00:00:00","commitResults":[{"hash":"07e5e79dd26c7a4c829c11b63f98b0bf01c63bab","isMergeCommit":false,"messageTitle":"remove gradle dep","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":0,"deletions":41}}},{"hash":"576d3cc4d103ac1fe5147ff15122049ada2ff7ae","isMergeCommit":false,"messageTitle":"Enhance code documentation and structure across multiple classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":306,"deletions":36},"md":{"insertions":531,"deletions":0}}},{"hash":"edb75aaa248be5c472d484c14b0aecd24c8470df","isMergeCommit":false,"messageTitle":"Change code to fit coding standards","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":22}}},{"hash":"3aae36b488a114eaa1e896a974239087bf7b8a64","isMergeCommit":false,"messageTitle":"Add JavaDoc header comments","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":2}}},{"hash":"dd49a09caa081905b92a2160bb6e106b9bbe64bf","isMergeCommit":false,"messageTitle":"Add method to find tasks in TaskList","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":1}}}]},{"date":"2025-09-08T00:00:00","commitResults":[{"hash":"031fd64f0194e689bfdacdb3bf525050405de895","isMergeCommit":false,"messageTitle":"Debug not working Gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":47,"deletions":0}}},{"hash":"710716ebebc0ff9828c59d926c1ec708cf6412f4","isMergeCommit":false,"messageTitle":"Add unit tests for Deadline, Event, Parser, TaskList, and Task classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":346,"deletions":0}}},{"hash":"35f2d2b454288ff3294b60d86f846cb5317db30b","isMergeCommit":false,"messageTitle":"Fix incorrect Event class parsing bug","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":21,"deletions":6}}},{"hash":"0b4afea250fcf983199e19c895d823aaa1c04675","isMergeCommit":false,"messageTitle":"Build Jar file","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}}]},{"date":"2025-09-14T00:00:00","commitResults":[{"hash":"5de8fdbaad1ec32599a9a1cbf0965575a43dbc62","isMergeCommit":false,"messageTitle":"update gradle build file","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":13,"deletions":0}}},{"hash":"c8a7048d129b003925da639f844b64dd2521d8e5","isMergeCommit":false,"messageTitle":"initialise first version of GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":190,"deletions":87},"md":{"insertions":12,"deletions":7}}},{"hash":"6e0f429790a22bba5ac22faec50f2d148b6c2afb","isMergeCommit":false,"messageTitle":"Refactored to abstract dialog messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":15},"md":{"insertions":6,"deletions":5}}},{"hash":"3b1e37bdc50ec639026b962ed13cbcc88c84e28d","isMergeCommit":false,"messageTitle":"add images to dialog","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":17}}},{"hash":"a719d04cfff975f265db2f2ad0e4d4a2c046ccf0","isMergeCommit":false,"messageTitle":"readjust perspective direction","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3},"md":{"insertions":7,"deletions":6}}},{"hash":"0b9e91107ad1a74a316212dc39f0453fc504fd4c","isMergeCommit":false,"messageTitle":"Refactor to use .fxml files","messageBody":"","tags":["A-Level-10"],"fileTypesAndContributionMap":{"fxml":{"insertions":65,"deletions":0},"java":{"insertions":152,"deletions":238},"md":{"insertions":7,"deletions":6}}}]},{"date":"2025-09-15T00:00:00","commitResults":[{"hash":"6838a1b20fb16a3fe01246a36b4b51d3d211f90b","isMergeCommit":false,"messageTitle":"Add assertions to document code assumptions","messageBody":"The codebase lacks documentation of critical assumptions that methods\nrely on during execution. This makes debugging difficult and increases\nthe risk of assumption violations going undetected.\n\nWithout explicit assumption documentation, developers cannot easily\nunderstand the expected preconditions and postconditions of methods,\nleading to potential bugs and making the code harder to maintain.\n\nLet\u0027s add assert statements throughout the codebase to document and\nvalidate important assumptions:\n\n* Parser class: Add input validation, parsing result verification, and\n  bounds checking for indices and dates\n* TaskList class: Add pre/post-condition checks for task operations,\n  index validation, and state verification\n* Storage class: Add parameter validation, file existence checks, and\n  task serialization validation\n* Task hierarchy: Add constructor validation and state change verification\n* Friday class: Add component initialization checks and operation validation\n\nAssertions serve as executable documentation that helps catch bugs early\nduring development and testing while clearly communicating the expected\nbehavior of methods to other developers.\n\nThe assertions follow Java conventions using meaningful error messages\nthat explain what assumption was violated, making debugging easier when\nissues occur.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":150,"deletions":14},"md":{"insertions":7,"deletions":6}}},{"hash":"f697cc345b647829aeeb75eab77866f30f1cf35f","isMergeCommit":false,"messageTitle":"Linted code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":48}}},{"hash":"87ba749fd086db079b2c86db6744c742dfea6d29","isMergeCommit":false,"messageTitle":"Refactor codebase to improve code quality","messageBody":"The codebase contains several code quality issues that reduce readability\nand maintainability. Debug output clutters the code, long methods are\ndifficult to understand, magic strings reduce maintainability, and\nduplicated patterns increase the risk of inconsistent behavior.\n\nPoor code quality makes the codebase harder to debug, maintain, and\nextend. These issues violate SE-EDU code quality guidelines and make\nthe code less professional and reliable.\n\nLet\u0027s refactor the codebase to address these quality issues:\n\n* Parser class: Remove debug output, extract helper methods to reduce\n  complexity of parseSerializedTask method, and replace magic strings\n  with TaskType enum constants\n* Storage class: Extract helper methods from serialize method and use\n  TaskType constants instead of hardcoded strings\n* Friday class: Extract common task addition response pattern into\n  generateTaskAddedResponse method to reduce code duplication\n* Test files: Fix method name references from isDone() to checkDone()\n  to match the Task class API\n\nThe refactoring follows SE-EDU guidelines by avoiding long methods,\neliminating magic numbers/strings, reducing code duplication, and\nimproving readability through better method organization.\n\nAll existing functionality and assertions are preserved while making\nthe code more maintainable and easier to understand. The extracted\nhelper methods follow single responsibility principle and use\ndescriptive names that explain their purpose.\n\nBuild verified successful with all 37 tests passing.\n","fileTypesAndContributionMap":{"java":{"insertions":156,"deletions":97},"md":{"insertions":7,"deletions":6}}},{"hash":"f0ee639cf70e5ec22f0964aeebf7532500e9cdcb","isMergeCommit":true,"messageTitle":"Merge pull request #2 from javierlimt6/branch-A-CodeQuality","messageBody":"Refactor codebase to improve code Quality","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"javierlimt6":{"java":1774,"md":572,"fxml":65,"sh":1,"bat":1,"gradle":61,"txt":38}},"authorContributionVariance":{"javierlimt6":100381.445},"authorDisplayNameMap":{"javierlimt6":"CS2103T-T16-3 JAVI..N YI"}}
