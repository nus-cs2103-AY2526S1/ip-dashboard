{"authorDailyContributionsMap":{"Zmzzz3":[{"date":"2025-08-17T00:00:00","commitResults":[{"hash":"fb554c5cbf7befa72f32ed059acd06ab2bc7b895","isMergeCommit":false,"messageTitle":"Change chatbot name and greeting","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":10},"bat":{"insertions":1,"deletions":1},"md":{"insertions":14,"deletions":3}}},{"hash":"c8c5672bc470ea3a62ac51fc07653bda020b7d0c","isMergeCommit":false,"messageTitle":"Create standalone function for greeting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":1}}},{"hash":"bb4c4a9f4189a64db9190a28f51afcf23dfc79ae","isMergeCommit":false,"messageTitle":"Reorganise greetings into separate functions hello and bye","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":9}}},{"hash":"f5f75c8f175edc093d7a695eedf73d1155742476","isMergeCommit":false,"messageTitle":"Add echo feature","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"8f7d5c70c3bd7680e7c73c322fc62a556c0ad4dc","isMergeCommit":false,"messageTitle":"Add task tracking","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":1}}},{"hash":"998dda885eef09503e2773de2154c3cfd7640a42","isMergeCommit":false,"messageTitle":"Add task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":5}}},{"hash":"35be20b1fe09f044693628ee77918bfc851e4e16","isMergeCommit":false,"messageTitle":"Add mark and unmark feature","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":1}}},{"hash":"b92d2787110a7c280dcd16e3100a32e36db3b1ec","isMergeCommit":false,"messageTitle":"Make Task an abstract class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":43}}},{"hash":"453f7e312b733224f5fc228dfc12588427190b8a","isMergeCommit":false,"messageTitle":"Add TodoTask class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"03aa25719d08718cda3efaf81a8c63b7701a1028","isMergeCommit":false,"messageTitle":"Add DeadlineTask class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"a71da83fa480f8c47b650aa28601c840636c4fa0","isMergeCommit":false,"messageTitle":"Add EventTask class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}}]},{"date":"2025-08-18T00:00:00","commitResults":[{"hash":"b8cc610af56b647844bd1cd6f32837cfa8e99ff1","isMergeCommit":false,"messageTitle":"Add scheduling for Todo, Deadline and Event tasks","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":8}}},{"hash":"a3f0b21e68d440ab9b540b0a4017e1b0ccc38fd3","isMergeCommit":false,"messageTitle":"Add test cases","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":19,"deletions":0},"java":{"insertions":2,"deletions":2},"sh":{"insertions":1,"deletions":1}}},{"hash":"7c51fb4a690cc731f7a031242b5f3c3546e86144","isMergeCommit":false,"messageTitle":"Add LynxException Class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"1556dd6cc25ad806ae9064ec24d40b5f9843a614","isMergeCommit":false,"messageTitle":"Add methods for adding tasks","messageBody":"Each add task command now has its own method that handles exceptions.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":0}}},{"hash":"84cf58cfb213d3031c6cf7190dd0de8b2cb5d98f","isMergeCommit":false,"messageTitle":"Update scan method with new task add methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":43}}},{"hash":"9fb4ea04aadf5fb110739897be3ace1131571e76","isMergeCommit":false,"messageTitle":"Add MissingArgumentException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"583650bf3b6677ea938dd71a8c23735add9a1e69","isMergeCommit":false,"messageTitle":"Integrate MissingArgumentException","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":15}}},{"hash":"b7435dc86cde371bcc7c51ffccb0f542d50f592e","isMergeCommit":false,"messageTitle":"Add LynxUI class","messageBody":"Separate class for handling UI related code, such as printing dashed\nlines.\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":0}}},{"hash":"bb06945455c343e882e9eaa3f77a302a6d694012","isMergeCommit":false,"messageTitle":"Add TaskManager class","messageBody":"Separate class for managing task arraylist and related operations.\n","fileTypesAndContributionMap":{"java":{"insertions":103,"deletions":1}}},{"hash":"b364f4bee885e9b49ead3ea944218315cb62a93c","isMergeCommit":false,"messageTitle":"Remove leftover code in TaskLynx class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":120}}},{"hash":"b0ed6775faefd4e0887e729dec67cf1d9a133a1c","isMergeCommit":false,"messageTitle":"Create findTask, markTask and unmarkTask methods","messageBody":"Broke the old handleMarkUnmark method into the 3 separate methods above,\nand moved remaining logic (exception handling) to these methods\n","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":34}}},{"hash":"4e851b6b8a7313f8c7ad2478e83d02db7ac4ff6f","isMergeCommit":false,"messageTitle":"Add delete task command","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"c7f4ac0899dda58c7e503473923987fbc3931490","isMergeCommit":false,"messageTitle":"Minor changes in dialogue","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"6e2302a411feb60cd9765b7e74e9620a11ce85a1","isMergeCommit":false,"messageTitle":"Update AI.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":19,"deletions":4}}}]},{"date":"2025-08-19T00:00:00","commitResults":[{"hash":"0b6f8799d2dbaaface7e9d980f62ffb5d8df20d3","isMergeCommit":false,"messageTitle":"Add TaskType and Status enums","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":26}}}]},{"date":"2025-08-22T00:00:00","commitResults":[{"hash":"98e0399e46f5676cd000a58e02a2f51c6eb43aed","isMergeCommit":false,"messageTitle":"Add LynxFileManager class","messageBody":"LynxFileManager stores all methods to access and\nmodify a file.\n","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"e0c1fc5477ab9fc6c8f7dd3a093397a1c9c50a7b","isMergeCommit":false,"messageTitle":"Add LynxStorage and rename TaskManager","messageBody":"To split the responsibility of parsing commands and\nmanaging the task list, TaskManager is renamed to\nLynxCommand and LynxStorage is created with methods\nto handle all direct operations on the task list.\n","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":9}}},{"hash":"f38d4036f2cb97c9ae6f195b119c04f355453dad","isMergeCommit":false,"messageTitle":"Remove unneccessary code from LynxCommand","messageBody":"Remaining code from LynxCommand that have been\nshifted to LynxStorage are removed.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":36}}},{"hash":"a06e2d2a9f154fc22e44c3a14df683b6d77aa1db","isMergeCommit":false,"messageTitle":"Minor bug fix in LynxCommand","messageBody":"Method findTasks is now able to return tasks as usual. Get methods\nadded for deadline, start and end fields in DeadlineTask and EventTask.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":3}}},{"hash":"dac41027a23e4d3d37d0b2c9365471ce454d870d","isMergeCommit":false,"messageTitle":"Implement load and unload methods in LynxStorage","messageBody":"Parsing is used to convert string data from files to task objects\nto be stored in the task list.\n","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":4}}},{"hash":"c4078bb11c23b897098eeac921789c77b350148f","isMergeCommit":false,"messageTitle":"Implement error handling within LynxFileManager","messageBody":"IOExceptions are now caught and handled within LynxFileManager.\ncreateFile method now also creates an empty directory for the\nfile if nonexistent.\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":8}}},{"hash":"f5bbd85db6f2902b5fa0bbb6739048441f0bdbc1","isMergeCommit":false,"messageTitle":"Update TaskLynx fields","messageBody":"Add scanner object as a static final field in TaskLynx\nthat is only closed upon calling bye. Also included a\ncall to loadTasks under the reload command.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":9}}},{"hash":"3bd1f4ab8922e0909da71bea9fca75e8b9339f5c","isMergeCommit":false,"messageTitle":"Update writeToFile method","messageBody":"Add functionality to reattempt unloading of tasks in case of failure.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"16f45a62051905ffffa0510ef86cc8e86413e727","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"05b8f9a402377eb13d51b829882b076d461a7fbe","isMergeCommit":false,"messageTitle":"Add LynxDateManager class","messageBody":"LynxDateManager handles the parsing and translation of dates\nbetween different formats.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":0}}},{"hash":"0f950c8229edcf8e816e081ae21f49fef313e04e","isMergeCommit":false,"messageTitle":"Update DeadlineTask and EventTask","messageBody":"Update methods to use LocalDateTime objects to represent date and time.\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":13}}},{"hash":"94917398de9f2a20b5b44ff35186cd59a862c8a1","isMergeCommit":false,"messageTitle":"Update LynxStorage methods","messageBody":"Update loading and unloading methods to accomodate the new date time\nrepresentation. Stores using the format yyyy-MM-dd-HH-mm.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":9}}},{"hash":"00481be6075c50b5ccef5d89794828e8348793ae","isMergeCommit":false,"messageTitle":"Add command for clearing task list","messageBody":"The new command delete /all clears the task list.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"f0ac662b1e782fc715574cfdf732570b334debaf","isMergeCommit":false,"messageTitle":"Add listTasks method in LynxCommand","messageBody":"Allows listing all tasks occuring on a given date by using list yyyy-mm-dd.\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":4}}},{"hash":"38356de8606c7f3e84a0dc90721694ea93aae0d2","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"2435490e96cb1817119762b218f3e7d301feab56","isMergeCommit":false,"messageTitle":"Move greetings to LynxUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":12}}},{"hash":"2b5949a168bbd826bbb7eff8f0861ea5b4ab79d9","isMergeCommit":false,"messageTitle":"Add LynxTaskList class","messageBody":"Will inherit all methods in the LynxStorage class except the\nload and unload methods.\n","fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":1}}},{"hash":"f6180ff0f877107afdd4e762f45f26ddf487f811","isMergeCommit":false,"messageTitle":"Update LynxStorage","messageBody":"Removed all unnecessary (moved to LynxTaskList) methods from LynxStorage\nand updated all calls to them.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":96}}},{"hash":"b9c3ffc7b3a5ad3a15a466f94f4cf7cbc17f44fc","isMergeCommit":false,"messageTitle":"Add LynxScanner class and class comments","messageBody":"LynxScanner class created to store a central scanner object to be\nshared within the program, as well as to run the main loop where\nmost scanner operations happen.\n","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":54}}},{"hash":"4a9a6c2f43a1223461f18dab7c6ef28328316e26","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"40d82af8ff5c9f2a08738f6b75fb5314722db3ca","isMergeCommit":false,"messageTitle":"Organise into packages","messageBody":"The 6 types of packages are as follows: command (for scanning and\nexecuting commands), exception, formatter (eg formatting date),\nstorage (both internal and external to the program), task and ui.\n","fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":6},"bat":{"insertions":1,"deletions":1},"md":{"insertions":4,"deletions":4}}},{"hash":"c44b7e7bff5fceeda0cf78619fe7a84f4a44bc97","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"4e8f6657365e267ff44d1c6c7b030fd951345133","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-23T00:00:00","commitResults":[{"hash":"6dde8c4bffd43eeb4fa07ce67a2ae684965cdb7d","isMergeCommit":false,"messageTitle":"Add JUnit test files and classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"d8ffdb34d3d79e1c53114e759cc25e2de070c43e","isMergeCommit":false,"messageTitle":"Parsing bug fixes","messageBody":"Bug fixes in LynxCommand related to parsing of user input.\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":27}}},{"hash":"763f7e4be5d162e401b701e9208efea399fff88f","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-JUnit","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2a3ba8f7b1d260c63c26ccb100232b6fc149594a","isMergeCommit":false,"messageTitle":"Add testcases for LynxCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":145,"deletions":22}}},{"hash":"fe56de7a91bf6423a649eea7d9e7ea717c38f6b1","isMergeCommit":false,"messageTitle":"Add testcases for LynxTaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":17}}},{"hash":"b2262da66c7bdbbd61181d88d6bcac9866fd6f39","isMergeCommit":false,"messageTitle":"Add testcases for LynxStorage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":2}}},{"hash":"f949234e8b62e022b4f0d738677a395817e1bf53","isMergeCommit":false,"messageTitle":"Add testcases for LynxDateManager","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":3}}},{"hash":"db6432260e1511a6c0daf55825c12033b6a6bc63","isMergeCommit":false,"messageTitle":"Minor tweaks to JUnit tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":9}}},{"hash":"25b6d49fb04e33f11a17c132bcb729a43ccb6c35","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"1b6b0c35f1cdb19d9ee43648239ce91b931a47f4","isMergeCommit":false,"messageTitle":"Update build.gradle","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"087b8739cef81a5acf028101334dcd1a5d3412a8","isMergeCommit":false,"messageTitle":"Revise to follow coding standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":217,"deletions":133}}},{"hash":"31c57083785bea3a2b2413dadf6228c9c68b85a5","isMergeCommit":false,"messageTitle":"Revise to follow coding standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":217,"deletions":133}}}]},{"date":"2025-08-24T00:00:00","commitResults":[{"hash":"be49f3dfa65032ff1ff341e9cf2c0eaeef720750","isMergeCommit":false,"messageTitle":"Add JavaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":213,"deletions":5}}},{"hash":"8b6298c1888361bba27f925f6c9c479b8774bca7","isMergeCommit":false,"messageTitle":"Revise to follow coding standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":217,"deletions":133}}},{"hash":"b1312ddad30e5b665008b6a6d97a4d7f83ce976b","isMergeCommit":false,"messageTitle":"Add JavaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":213,"deletions":5}}},{"hash":"7a4ea23397e5254721e14110a78378d7320a8f70","isMergeCommit":false,"messageTitle":"Extend \"list\" command functionality","messageBody":"\"list\" command can now be used to search for tasks using keywords and ids.\n","fileTypesAndContributionMap":{"java":{"insertions":105,"deletions":31}}},{"hash":"096e3b0241185d7041ae50e1b79a56ecde9ece48","isMergeCommit":false,"messageTitle":"Update testcases","messageBody":"Update testcases for LynxCommand and LynxTaskList pertaining to the\nlistTasks, printTasksContaining and printTasksOnDate methods.\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":16}}},{"hash":"3f3c82301cc4ce332051900d022e9a423b0cfdf7","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"349c73d5bc1412c889a6e761554993e3e12e4a2e","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"f64572ef8c9e4865b352b71c8aa55e5ecac58f35","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"b3427d623f2dda1106c8235f30dd53da09081037","isMergeCommit":false,"messageTitle":"Add restrictions to task naming","messageBody":"To accommodate commands with modifiers such as /all or /id, the \u0027/\u0027\ncharacter is restricted from being part of the task name. Task name\nlength limit is now 150 characters.\n","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":35}}},{"hash":"7b136ee44a712496ea6e6f9841583a4a5098bbbd","isMergeCommit":false,"messageTitle":"Standardize \"/id\" commands","messageBody":"Change the old \"id:\" command to the new \"/id\" command.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"54e58230903f51990c90c9b9ff528bed8fca6ba7","isMergeCommit":false,"messageTitle":"Rework commands and command methods","messageBody":"The current code structure for commands is rather rigid, with each\ncommand having its own parsing and execution process. This makes it\ntedious to implement different variants of the same command, such as\nlist by date, list by id and list by keyword.\n\nTo fix this, a separate function findTasks serves the role of parsing\nmodifiers like /on, /id, /all etc. This function then returns a list of\nmatching tasks. This list can then be fed to another function mapTasks\nthat uses a consumer to execute the appropriate actions on each task.\n\nThis structure separates the main command, modifier command, and command\nexecution for all commands acting on tasks within the task list.\nIt makes it easier to extend functionality in each aspect.\n\nCurrently, the mark, unmark, delete and list commands support the\nfollowing modifiers:\n- /all to execute for all tasks in the task list\n- /on to execute by date\n- /id to execute on the task with matching id\nAdding a keyword without using any modifiers will execute the command\nbased on a keyword search.\n\nCommand classes have also been added for these commands to store\ninformation to print. These are stored in the command package whereas\nthe LynxScanner and LynxCommandManager (used to be named LynxCommand)\nhave been moved to the parser package.\n","fileTypesAndContributionMap":{"java":{"insertions":407,"deletions":373}}},{"hash":"d84591d0863f2afc06e771b1adc866e527961e3c","isMergeCommit":false,"messageTitle":"Update JavaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":185,"deletions":54}}},{"hash":"1a1c90fae4cda0999b4ddaec2b9a1a784d19f9fe","isMergeCommit":false,"messageTitle":"Revise testcases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":74}}},{"hash":"090ba455bbb030de55cc3e2b6555a7bca4a42714","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-CommandRework\u0027","messageBody":"","tags":["Level-9","A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-25T00:00:00","commitResults":[{"hash":"fc94df99e7f64d8fe5de04f20de46d8583c66aab","isMergeCommit":false,"messageTitle":"Add help command and simple guide","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":1}}}]},{"date":"2025-08-26T00:00:00","commitResults":[{"hash":"fadaf3c78a9f60e8fa02ab9025ffa777fa313c12","isMergeCommit":false,"messageTitle":"Add save command","messageBody":"Users can manually save the task list at any time by calling the \u0027save\u0027\ncommand. Command guide updated.\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":5}}}]},{"date":"2025-08-27T00:00:00","commitResults":[{"hash":"30302e8ae90590668dcd12416ed232877d85e9f5","isMergeCommit":false,"messageTitle":"Modify Task subclasses to manage dates","messageBody":"Previously, date comparisons were made outside the task subclasses,\nwhich complicates writing these methods (such as findByDate).\n\nTo create a more OO design, tasks now have a method isActive which takes\nin a date and returns a boolean, to indicate if their deadline/event\nperiod lies on the provided date.\n\nBesides, tasks now have a new Status EXPIRED which is assigned on\ninstantiation, if the task end/deadline is before the current system\ntime.\n\nThese changes give alot more flexibility in sorting tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":18}}},{"hash":"e4e0fcc1ef33dbe392025c4788a9d9f55370e475","isMergeCommit":false,"messageTitle":"Replace list operations with stream operations","messageBody":"To make use of the flexibility of streams in processing data, list\nmethods in LynxTaskList have mostly been replaced with stream methods.\nThese stream methods can be composed to allow multi-stage filtering eg.\nfiltering by both date and completion status can easily identify urgent\ntasks to be done as soon as possible.\n","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":34}}},{"hash":"642d1cb1c69ad73db7b217aa79c138733cd0545d","isMergeCommit":false,"messageTitle":"Add new notify function","messageBody":"TaskLynx will now notify users of urgent tasks (incomplete and occuring\non the same day) on start and remind users of all incomplete tasks on\nexit.\n","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":52}}},{"hash":"d4b20197e95efb150edaf9d2831b01852749a313","isMergeCommit":false,"messageTitle":"Add search by status function","messageBody":"The mentioned list methods (list, mark, unmark, delete) now have a fifth\nsearch modifier (/status [status]) that applies the action to all\nmethods with a matching status.\n","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":17}}},{"hash":"1db32bc24a22f7b2d263924763e8c0b8d50acc95","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Streams\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-08-29T00:00:00","commitResults":[{"hash":"019c67f69d605dc6ae54789cbc0d1571fb11c24e","isMergeCommit":false,"messageTitle":"Create LynxCommand2 class and findTask2 method","messageBody":"(Test) To achieve more flexibility with search modifiers by\nallowing chaining of search modifiers.\n\nThis would be done using a LynxCommand2 class whose purpose is to\nbreak down a command string into parts and store them for use.\n\nThe findTask2 method would use a stream along with a LynxCommand2\nobject and recursively apply filter on the stream until no commands are\nleft to execute in the LynxCommand2.\n","fileTypesAndContributionMap":{"java":{"insertions":109,"deletions":0}}},{"hash":"f38e6b53042d622485127cfabefb4cbd682ce346","isMergeCommit":false,"messageTitle":"Add auxillary functions and complete findTasks2","messageBody":"The new findTasks2 method is able to perform recursive filtering using\njust one line of command. Enables chaining of search modifiers eg. mark\n/type deadline /sts complete /key a marks all complete deadline tasks\ncontaining the keyword a.\n","fileTypesAndContributionMap":{"java":{"insertions":134,"deletions":30}}},{"hash":"53cac8f5e731448a4455d4268423c42030ea906f","isMergeCommit":false,"messageTitle":"Reimplement mark, unmark, list delete","messageBody":"The corresponding methods have been updated to fit the new findTasks\nmethod. Searching by keyword command has been altered such that blank\ncharacters are now ignored in comparisons, and keywords should be\nentered as one contiguous string.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":143}}},{"hash":"3a2ff2e7bfcbf3dfdb3370912b2b86a54d3d96ca","isMergeCommit":false,"messageTitle":"Reorganise parser classes","messageBody":"The main LynxCommandManager parser class is getting very long. To\ndistinguish different tasks and responsibilities, the\nLynxCommanderManager class is split into three classes.\n\nLynxGeneral handles general commands. LynxTaskEditor handles commands\nthat act on the task list. LynxSearcher handles commands related\nto searching and filtering.\n","fileTypesAndContributionMap":{"java":{"insertions":417,"deletions":384}}},{"hash":"d883871841d88e9c501ed6d4e57047ea0ceb40ec","isMergeCommit":false,"messageTitle":"Remove redundant Command classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":101,"deletions":270}}}]},{"date":"2025-08-30T00:00:00","commitResults":[{"hash":"1deff2d2b39c4e20f189651f543e1665883c2be2","isMergeCommit":false,"messageTitle":"Update JavaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":144,"deletions":42}}},{"hash":"f278f872d6b6ea07b673d023853936ac2e2786b1","isMergeCommit":false,"messageTitle":"Add JUnit testcases","messageBody":"Added and updated testcases for LynxTaskList, LynxGeneral,\nLynxTaskEditor, LynxSearcher.\n","fileTypesAndContributionMap":{"java":{"insertions":198,"deletions":68}}},{"hash":"65c801639bbdbcc90bb91f5483381a04ef3e0808","isMergeCommit":false,"messageTitle":"Fix save bug","messageBody":"Previously the save command was linked to the reload function which\ncaused issues. Has been fixed.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"85e4ed89c2e759ec323045876f39932ce2517fc0","isMergeCommit":false,"messageTitle":"Update in-program command guide","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":4}}},{"hash":"16cf64c1b422341952558129968fde9f501e4443","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Streams\u0027","messageBody":"The contents of this merge aim to further increase convenience and\nefficiency through streams. Having a recursive parser that works on\nstreams of tasks allow for the chaining of search modifiers (eg. list\n/key meeting /on 2025-11-11 /type event) along with lazy evaluation of\nthese filters (saves computation in case the parser runs into an\nerror halfway in).\n","fileTypesAndContributionMap":{}}]},{"date":"2025-09-01T00:00:00","commitResults":[{"hash":"5e6af97903f787ce149dd44e8e0a2344cfa958e1","isMergeCommit":false,"messageTitle":"Add GUI classes","messageBody":"Add classes related to the use of JavaFX\n","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"fxml":{"insertions":37,"deletions":0},"java":{"insertions":221,"deletions":0}}},{"hash":"91d02e2b9db65f5d7bf156e48bc4458a91be8559","isMergeCommit":false,"messageTitle":"Create set of methods for application","messageBody":"Create a new set of methods for use in the application form wherever\napplicable. This was needed as the app now acts as the scanner and\nprinter, so communication needed to be established between the frontend\nand backend.\n","fileTypesAndContributionMap":{"java":{"insertions":410,"deletions":24}}},{"hash":"19af969dd5c2076aea3b5709bf597fc922f6b115","isMergeCommit":false,"messageTitle":"Rearrange classes and packages","messageBody":"The current code has both the cli and gui logic mixed together, which is\na mess. To fix this, three different packages were created:\n\n- objectclasses, which contains classes like Task, Command and\nLynxDateManager whose logic is not dependant on the rest of the code\n\n- lynx, which contains the implementations for the cli program\n\n- lynxgui, which contains the implementations for the gui app\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"fxml":{"insertions":1,"deletions":1},"java":{"insertions":963,"deletions":429},"bat":{"insertions":1,"deletions":1},"md":{"insertions":4,"deletions":4}}},{"hash":"3d19741a4f93089e0a67ed0158ab4b33c8ca4ae5","isMergeCommit":false,"messageTitle":"Fix JavaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"f9959ece3c80486bb047b29e1b24f9177863c104","isMergeCommit":false,"messageTitle":"Undo some changes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":9}}},{"hash":"a6792d044a2e58ae21862d3508622d58f9823d65","isMergeCommit":false,"messageTitle":"Update JavaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":43}}},{"hash":"07d4cd579ca949502692962c307a21ce2deffb8a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"There are now three packages since the CLI and GUI work differently:\n\n- objectclasses contains Task, Command and LynxDateManager classes,\n  which are non-dependant on the rest of the code structure\n\n- lynx contains the logic for the CLI program\n\n- lynxgui contains the logic for the GUI application\n","fileTypesAndContributionMap":{}},{"hash":"163df186e9b194bd84c3a139507acc52ef78cf46","isMergeCommit":false,"messageTitle":"Add checkstyle and fix style","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":191,"deletions":188}}},{"hash":"a1957f6e0240fefaa43f4cdf077fbb72568b8253","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-09-02T00:00:00","commitResults":[{"hash":"b8ca4137e051b42fa00c6d4f849ccb522adc88ea","isMergeCommit":false,"messageTitle":"Minor fix to dialogue","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"9ee7302a67e8bc6304f399caa9c5ae5b1b9864f2","isMergeCommit":false,"messageTitle":"Merge packages lynx and lynxgui","messageBody":"To reduce duplicate code, lynx and lynxgui are merged into a single lynx\npackage which contains the main classes for both the cli and gui\nprograms, the former which was tweaked to utilise methods from the\nlatter.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":235,"deletions":1105},"bat":{"insertions":1,"deletions":1},"md":{"insertions":4,"deletions":4}}},{"hash":"069229addb216ace585808126751437203a65829","isMergeCommit":false,"messageTitle":"Update testcases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":71}}},{"hash":"b6cb85514f34ce11dfc3ffc567b9a94490f5dde7","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-MergeClasses\u0027","messageBody":"Upon revieweing, found that there is alot of overlap between the code\nfor both the gui and cli programs. Therefore, lynxgui and lynx packages\nwere merged into one single package lynx, with overlap methods from the\noriginal lynx package removed. The new package now contains the main\nclasses for both the cli and gui programs, the former of which has been\naltered to fit the new methods from the gui side.\n","fileTypesAndContributionMap":{}}]},{"date":"2025-09-05T00:00:00","commitResults":[{"hash":"06a59e20286a243a14926b5cb85896315f6c2041","isMergeCommit":false,"messageTitle":"Fix launcher bug","messageBody":"Application was not launching due to build.gradle settings. Fixed.\n","tags":["Level-10","A-Varargs","A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"17983426b5043eec1422310221f3222c1e6e5c88","isMergeCommit":false,"messageTitle":"Create factory methods for tasks","messageBody":"Parsing and creation of tasks was previously handled separately by\nLynxStorage (loading from file) and LynxGeneral (using user input),\nwhich are responsibilites that could be delegated to the individual task\nclasses. Therefore, overloaded factory methods were created to serve\nthese purposes.\n","fileTypesAndContributionMap":{"java":{"insertions":179,"deletions":75}}},{"hash":"14f34d35faa13fd053d12fb9aef4ee4d45630907","isMergeCommit":false,"messageTitle":"Made LynxFileManager instantiable","messageBody":"To allow for a more object oriented design, LynxFileManager had been\nmade non-static, and will now hold a filepath that is specified in its\nconstructor. This could allow reading and writing from multiple files in\nthe future.\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":16}}},{"hash":"574105faa200c555789e093c9a9d249785cf469f","isMergeCommit":false,"messageTitle":"Make LynxTaskList non abstract and make LynxSorter","messageBody":"To allow for a more object oriented design, LynxTaskList is now non\nstatic, which allows for the use of multiple task lists at the same\ntime. Furthermore, the stream sorting methods were moved to a separate\nabstract class, since they worked on streams and did not have to be tied\nto any task list.\n","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":69}}},{"hash":"f5facbddddd9dbf83e5fc5066bc68ffd3961fefe","isMergeCommit":false,"messageTitle":"Make LynxTaskEditor non abstract","messageBody":"Since LynxTaskList is now non abstract, it would make sense to have a\nLynxTaskEditor instance tied to each LynxTaskList instance, as all its\nmethods involve manipulating tasks within that list.\n","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":53}}},{"hash":"e6f65b6c893c3ab6ec76dffb39949716d19c5a35","isMergeCommit":false,"messageTitle":"Reorganise LynxGeneral","messageBody":"Change methods within LynxGeneral to fit the new structure. LynxGeneral\nremains an abstract class since its commands are considered more general\nand need not be tied to instances of other classes.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":87}}},{"hash":"344ed920ae6689264590eb37034b9347ac826a23","isMergeCommit":false,"messageTitle":"Repurpose LynxScanner to LynxControl","messageBody":"Previously LynxScanner only served the role of scanning and doing the\ninitial parsing of user commands. However, since LynxFileManager,\nLynxTaskList and LynxTaskEditor have now been made non-abstract, a new\nclass is needed to serve as an interface between the three.\n\nThe LynxScanner class has been repurposed to do so, and now includes\nall methods pertaining to the main program flow. The class has been\nrenamed to LynxControl to reflect these responsibilities.\n","fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":84}}},{"hash":"8e333939ea702fcc2d1bc0e73583abc7b2bddd4e","isMergeCommit":false,"messageTitle":"Modify main classes to fit changes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":17}}},{"hash":"cb6edff8ca947bdd30c22fd97c6200c00244340a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-OOP2\u0027","messageBody":"This merge commit serves to make the program design more object\noriented. Notably, LynxFileManager and LynxTaskList were made non\nabstract, such that there may now be multiple task lists and file\nmanagers with different filepaths in the program. This design is\nmore flexible and may allow for handling of multiple task lists and\nfilepaths in the future.\n","fileTypesAndContributionMap":{}},{"hash":"d8ad220c454ef835dd20bf216c33b981e9544a8d","isMergeCommit":false,"messageTitle":"Update test cases","messageBody":"","tags":["A-Jar2"],"fileTypesAndContributionMap":{"java":{"insertions":106,"deletions":92}}}]},{"date":"2025-09-07T00:00:00","commitResults":[{"hash":"53192d0908407d22f34b76822130d8e7e4a18cce","isMergeCommit":false,"messageTitle":"Squashed commit of the following:","messageBody":"commit d8ad220c454ef835dd20bf216c33b981e9544a8d\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Fri Sep 5 23:40:30 2025 +0800\n\n    Update test cases\n\ncommit cb6edff8ca947bdd30c22fd97c6200c00244340a\nMerge: 06a59e2 8e33393\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Fri Sep 5 23:18:42 2025 +0800\n\n    Merge branch \u0027branch-OOP2\u0027\n\n    This merge commit serves to make the program design more object\n    oriented. Notably, LynxFileManager and LynxTaskList were made non\n    abstract, such that there may now be multiple task lists and file\n    managers with different filepaths in the program. This design is\n    more flexible and may allow for handling of multiple task lists and\n    filepaths in the future.\n\ncommit 8e333939ea702fcc2d1bc0e73583abc7b2bddd4e\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Fri Sep 5 23:16:04 2025 +0800\n\n    Modify main classes to fit changes\n\ncommit 344ed920ae6689264590eb37034b9347ac826a23\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Fri Sep 5 23:12:04 2025 +0800\n\n    Repurpose LynxScanner to LynxControl\n\n    Previously LynxScanner only served the role of scanning and doing the\n    initial parsing of user commands. However, since LynxFileManager,\n    LynxTaskList and LynxTaskEditor have now been made non-abstract, a new\n    class is needed to serve as an interface between the three.\n\n    The LynxScanner class has been repurposed to do so, and now includes\n    all methods pertaining to the main program flow. The class has been\n    renamed to LynxControl to reflect these responsibilities.\n\ncommit e6f65b6c893c3ab6ec76dffb39949716d19c5a35\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Fri Sep 5 23:09:20 2025 +0800\n\n    Reorganise LynxGeneral\n\n    Change methods within LynxGeneral to fit the new structure. LynxGeneral\n    remains an abstract class since its commands are considered more general\n    and need not be tied to instances of other classes.\n\ncommit f5facbddddd9dbf83e5fc5066bc68ffd3961fefe\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Fri Sep 5 23:06:39 2025 +0800\n\n    Make LynxTaskEditor non abstract\n\n    Since LynxTaskList is now non abstract, it would make sense to have a\n    LynxTaskEditor instance tied to each LynxTaskList instance, as all its\n    methods involve manipulating tasks within that list.\n\ncommit 574105faa200c555789e093c9a9d249785cf469f\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Fri Sep 5 22:57:36 2025 +0800\n\n    Make LynxTaskList non abstract and make LynxSorter\n\n    To allow for a more object oriented design, LynxTaskList is now non\n    static, which allows for the use of multiple task lists at the same\n    time. Furthermore, the stream sorting methods were moved to a separate\n    abstract class, since they worked on streams and did not have to be tied\n    to any task list.\n\ncommit 14f34d35faa13fd053d12fb9aef4ee4d45630907\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Fri Sep 5 22:53:00 2025 +0800\n\n    Made LynxFileManager instantiable\n\n    To allow for a more object oriented design, LynxFileManager had been\n    made non-static, and will now hold a filepath that is specified in its\n    constructor. This could allow reading and writing from multiple files in\n    the future.\n\ncommit 17983426b5043eec1422310221f3222c1e6e5c88\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Fri Sep 5 22:49:15 2025 +0800\n\n    Create factory methods for tasks\n\n    Parsing and creation of tasks was previously handled separately by\n    LynxStorage (loading from file) and LynxGeneral (using user input),\n    which are responsibilites that could be delegated to the individual task\n    classes. Therefore, overloaded factory methods were created to serve\n    these purposes.\n\ncommit 06a59e20286a243a14926b5cb85896315f6c2041\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Fri Sep 5 01:11:57 2025 +0800\n\n    Fix launcher bug\n\n    Application was not launching due to build.gradle settings. Fixed.\n\ncommit b6cb85514f34ce11dfc3ffc567b9a94490f5dde7\nMerge: b8ca413 069229a\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Tue Sep 2 02:29:24 2025 +0800\n\n    Merge branch \u0027branch-MergeClasses\u0027\n\n    Upon revieweing, found that there is alot of overlap between the code\n    for both the gui and cli programs. Therefore, lynxgui and lynx packages\n    were merged into one single package lynx, with overlap methods from the\n    original lynx package removed. The new package now contains the main\n    classes for both the cli and gui programs, the former of which has been\n    altered to fit the new methods from the gui side.\n\ncommit 069229addb216ace585808126751437203a65829\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Tue Sep 2 02:28:02 2025 +0800\n\n    Update testcases\n\ncommit 9ee7302a67e8bc6304f399caa9c5ae5b1b9864f2\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Tue Sep 2 02:12:28 2025 +0800\n\n    Merge packages lynx and lynxgui\n\n    To reduce duplicate code, lynx and lynxgui are merged into a single lynx\n    package which contains the main classes for both the cli and gui\n    programs, the former which was tweaked to utilise methods from the\n    latter.\n\ncommit b8ca4137e051b42fa00c6d4f849ccb522adc88ea\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Tue Sep 2 00:40:15 2025 +0800\n\n    Minor fix to dialogue\n\ncommit a1957f6e0240fefaa43f4cdf077fbb72568b8253\nMerge: 07d4cd5 163df18\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Mon Sep 1 03:52:20 2025 +0800\n\n    Merge branch \u0027branch-A-CheckStyle\u0027\n\ncommit 163df186e9b194bd84c3a139507acc52ef78cf46\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Mon Sep 1 03:51:33 2025 +0800\n\n    Add checkstyle and fix style\n\ncommit 07d4cd579ca949502692962c307a21ce2deffb8a\nMerge: 16cf64c a6792d0\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Mon Sep 1 02:10:55 2025 +0800\n\n    Merge branch \u0027branch-Level-10\u0027\n\n    There are now three packages since the CLI and GUI work differently:\n\n    - objectclasses contains Task, Command and LynxDateManager classes,\n      which are non-dependant on the rest of the code structure\n\n    - lynx contains the logic for the CLI program\n\n    - lynxgui contains the logic for the GUI application\n\ncommit a6792d044a2e58ae21862d3508622d58f9823d65\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Mon Sep 1 02:10:04 2025 +0800\n\n    Update JavaDoc\n\ncommit f9959ece3c80486bb047b29e1b24f9177863c104\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Mon Sep 1 01:40:14 2025 +0800\n\n    Undo some changes\n\ncommit 3d19741a4f93089e0a67ed0158ab4b33c8ca4ae5\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Mon Sep 1 01:39:02 2025 +0800\n\n    Fix JavaDoc\n\ncommit 19af969dd5c2076aea3b5709bf597fc922f6b115\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Mon Sep 1 00:59:35 2025 +0800\n\n    Rearrange classes and packages\n\n    The current code has both the cli and gui logic mixed together, which is\n    a mess. To fix this, three different packages were created:\n\n    - objectclasses, which contains classes like Task, Command and\n    LynxDateManager whose logic is not dependant on the rest of the code\n\n    - lynx, which contains the implementations for the cli program\n\n    - lynxgui, which contains the implementations for the gui app\n\ncommit 91d02e2b9db65f5d7bf156e48bc4458a91be8559\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Mon Sep 1 00:14:45 2025 +0800\n\n    Create set of methods for application\n\n    Create a new set of methods for use in the application form wherever\n    applicable. This was needed as the app now acts as the scanner and\n    printer, so communication needed to be established between the frontend\n    and backend.\n\ncommit 5e6af97903f787ce149dd44e8e0a2344cfa958e1\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Mon Sep 1 00:13:29 2025 +0800\n\n    Add GUI classes\n\n    Add classes related to the use of JavaFX\n\ncommit 16cf64c1b422341952558129968fde9f501e4443\nMerge: 1db32bc 85e4ed8\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Sat Aug 30 02:35:19 2025 +0800\n\n    Merge branch \u0027branch-Streams\u0027\n\n    The contents of this merge aim to further increase convenience and\n    efficiency through streams. Having a recursive parser that works on\n    streams of tasks allow for the chaining of search modifiers (eg. list\n    /key meeting /on 2025-11-11 /type event) along with lazy evaluation of\n    these filters (saves computation in case the parser runs into an\n    error halfway in).\n\ncommit 1db32bc24a22f7b2d263924763e8c0b8d50acc95\nMerge: fadaf3c d4b2019\nAuthor: Ziming \u003c166503118+Zmzzz3@users.noreply.github.com\u003e\nDate:   Wed Aug 27 03:08:24 2025 +0800\n\n    Merge branch \u0027branch-Streams\u0027\n","fileTypesAndContributionMap":{"gradle":{"insertions":21,"deletions":1},"fxml":{"insertions":37,"deletions":0},"java":{"insertions":1277,"deletions":874}}},{"hash":"ac083fbc2d07ef09f7a80a21be725c105a35bceb","isMergeCommit":false,"messageTitle":"Create LynxFileException class","messageBody":"Extract error messages for file operations into a LynxException\nsubclass.\n","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":24}}},{"hash":"0c27282f138a96db4654922f9fe48855d05f94fa","isMergeCommit":false,"messageTitle":"Add LynxCommand subclasses","messageBody":"Add LynxCommand subclasses for each action (mark, unmark, delete, list)\nto hold dialogue strings pertaining to their execution.\n","fileTypesAndContributionMap":{"java":{"insertions":202,"deletions":38}}},{"hash":"74e82124b90d84281f54103d3915ee0536bddeec","isMergeCommit":false,"messageTitle":"Fix testcases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":19}}}]},{"date":"2025-09-08T00:00:00","commitResults":[{"hash":"50c1ee9efebcb2d43b642ba886480a9b1341cab4","isMergeCommit":false,"messageTitle":"Add CommandFormatException","messageBody":"To reduce clutter, extract all error messages regarding invalid user\ncommand inputs into methods under the new CommandFormatException class.\n","fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":41}}},{"hash":"518ccc2f0d74a3d3e4f87ca3d5e7a8cba3df0cc6","isMergeCommit":false,"messageTitle":"Add ReminderCommand","messageBody":"Currently, the implementation of reminders are separate from the rest of\nthe commands in LynxTaskEditor.\n\nHowever, the reminder is just a list command on a specific search string.\n\nTherefore, a ReminderCommand class has been created with two factory\nmethods representing the two types of reminders.\n\nThis abstracts out the corresponding code from LynxTaskEditor.\n","fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":27}}},{"hash":"8fdfdda92dc6df61a7896f93e0a2f5c5fe9627df","isMergeCommit":false,"messageTitle":"Extract task encoding in unloadTasks","messageBody":"Currently, the encoding of tasks for storage in a text data file is\ncarried out in the LynxStorage class. The downside is that the more\ntypes of classes there are, the more code needs to be added in one\nplace.\n\nTo follow an object oriented design, tasks themselves are now\nresponsible for encoding their contents. Implement a method\nstorageRepresentation in the Task subclasses for this purpose.\n\nThis allows for more flexibility through polymorphism.\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":17}}},{"hash":"26d3ed1e9b95363f97bb192adc94a9493e20087d","isMergeCommit":false,"messageTitle":"Minor changes and rewording","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":11}}},{"hash":"6580c1baeef26b3c5a2134bc7b9ea704bbc26ca1","isMergeCommit":false,"messageTitle":"Update testcases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}}]},{"date":"2025-09-10T00:00:00","commitResults":[{"hash":"0a6f10c4ac3b423d2004dd7303b9f11130ed4fc0","isMergeCommit":false,"messageTitle":"Add assert statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":16}}},{"hash":"4504926ae0860fd6412e9b12b80e903d0d95e5c7","isMergeCommit":true,"messageTitle":"Merge pull request #2 from Zmzzz3/branch-A-CodeQuality","messageBody":"Branch a code quality","fileTypesAndContributionMap":{}},{"hash":"b92a830893397519ff8342bc0caa48f1e405fbbd","isMergeCommit":true,"messageTitle":"Merge pull request #3 from Zmzzz3/branch-A-Assertions","messageBody":"Add assert statements","tags":["A-Streams","A-CodeQuality","A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"44887a51e9a3c4dffb548e58fe7988503ac7fdf9","isMergeCommit":false,"messageTitle":"Add priority field to Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":20}}},{"hash":"f287578d3d0c634054c4bf3361d1396396e1f305","isMergeCommit":false,"messageTitle":"Add search by priority and autosort by priority","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":113,"deletions":74}}},{"hash":"657a365c9afcc2c75f900ddc4d7a0d9bce03866e","isMergeCommit":false,"messageTitle":"Modify some output dialogue","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"bed0f5b860c8014bbf54ef39dda35915bd4f60e7","isMergeCommit":false,"messageTitle":"Update testcases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":39}}},{"hash":"d4d98a273684aa9feca64262467f5d0c1d3015fd","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Extensions\u0027","messageBody":"There is no way to specify order to tasks.\n\nThis makes it hard for users to prioritise tasks to complete, besides\njust checking their dates and completion status.\n\nLet\u0027s,\n* create a new field \u0027priority\u0027 within tasks\n* allow users to attatch an optional non-negative priority to tasks\n* give the task a default priority of zero.\n\nAlso include,\n* a way to search by a given priority\n* automatic list-by-priority everytime tasks are presented to user.\n\nThis allows for a more meaningful ordering than the default\norder-by-list-position.\n","tags":["C-Priority","A-FullCommitMessage"],"fileTypesAndContributionMap":{}},{"hash":"d35d750b55018316ff5788bdd56602d7fdd1db3e","isMergeCommit":false,"messageTitle":"Add LynxCommand subclasses","messageBody":"Dialogue strings for commands in LynxTaskEditor are stored in their\nrespective methods.\n\nThis results in unneccassary cluster within the LynxTaskEditor class.\n\nLet\u0027s add LynxCommand subclasses for each action\n(mark, unmark, delete, list) to hold these dialogue strings.\n\nThis makes it easier to locate these dialogues if they need changing.\n","fileTypesAndContributionMap":{"java":{"insertions":202,"deletions":38}}},{"hash":"aa1899c84d55931008aee0bff54f5102a513d555","isMergeCommit":false,"messageTitle":"Fix testcases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":19}}},{"hash":"027726ffea88d4c86b2be9cd519b0169d1724c3a","isMergeCommit":false,"messageTitle":"Add CommandFormatException","messageBody":"To reduce clutter, extract all error messages regarding invalid user\ncommand inputs into methods under the new CommandFormatException class.\n","fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":41}}},{"hash":"a8bfb9f3ad56a453c816287132b1046ee33219c9","isMergeCommit":false,"messageTitle":"Add ReminderCommand","messageBody":"The implementation of reminders are separate from the rest of\nthe commands in LynxTaskEditor.\n\nHowever, the reminder is just a list command on a specified\nsearch string.\n\nLet\u0027s create a ReminderCommand class with two factory\nmethods representing the two types of reminders.\n\nThis abstracts out the corresponding code from LynxTaskEditor.\n","fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":27}}},{"hash":"5750c167aa887188c4d54014977f79cc1447aa28","isMergeCommit":false,"messageTitle":"Extract task encoding in unloadTasks","messageBody":"The encoding of tasks for storage in a text data file is\ncarried out in the LynxStorage class.\n\nThe more types of classes there are, the more code needs to be added\nin the unloadTasks method.\n\nLet\u0027s make tasks themselves responsible for encoding their contents.\nImplement a method storageRepresentation in the Task subclasses\nfor this purpose.\n\nThis follows an object oriented design and allows for flexibility\nthrough polymorphism.\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":17}}},{"hash":"528f4e2653afcfda8b0c25108bbf7950c76ac18e","isMergeCommit":false,"messageTitle":"Minor changes and rewording","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":11}}},{"hash":"2a21a7f59234e836b00244665c4c54196ae60e89","isMergeCommit":false,"messageTitle":"Update testcases","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}},{"hash":"8115bdd9e7a5fa47b75d2e084d05c424532e7ec7","isMergeCommit":true,"messageTitle":"Merge pull request #4 from Zmzzz3/branch-A-CodeQuality","messageBody":"Branch a code quality","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-13T00:00:00","commitResults":[{"hash":"19c3aa9f40c1cc6f96cb887e4ac3ae12f114dd05","isMergeCommit":false,"messageTitle":"Update AI.md","messageBody":"","tags":["A-AiAssisted"],"fileTypesAndContributionMap":{"md":{"insertions":9,"deletions":8}}},{"hash":"08e769b2955ba76a29759f1973328b72e0aaa305","isMergeCommit":false,"messageTitle":"Modify UI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":14}}}]},{"date":"2025-09-14T00:00:00","commitResults":[{"hash":"20d99e888bfeb0cd73fb9e7eea9b10a1ec32161c","isMergeCommit":false,"messageTitle":"Modify UI","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":54,"deletions":14},"java":{"insertions":39,"deletions":3}}},{"hash":"c048bd2fdc0edb3cffa067f6ff2a01519f5a7e2e","isMergeCommit":false,"messageTitle":"Create LynxException subclasses","messageBody":"Many different types of exceptions are represented using the same\nLynxException class.\n\nThis affects code readability, as exception messages must be defined\nfrom where they are thrown.\n\nLet\u0027s create multiple new LynxException subclasses to store these\npair these exception messages with their own exception types /\nfactory methods.\n\nThis enables exception messages to be easily locatable and editable.\n","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":30}}},{"hash":"234e91525cdf8c1b433c14eb078a78b0565b8b67","isMergeCommit":false,"messageTitle":"Update dialogues","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":19},"md":{"insertions":5,"deletions":1}}},{"hash":"e99d33bd5775f226c9c8549543eab045541fecef","isMergeCommit":false,"messageTitle":"Update dialogue","messageBody":"","tags":["A-Personality","A-MoreErrorHandling","A-BetterGui"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"Zmzzz3":{"java":2999,"md":34,"fxml":77,"sh":1,"bat":1,"gradle":22,"txt":19}},"authorContributionVariance":{"Zmzzz3":553287.6},"authorDisplayNameMap":{"Zmzzz3":"CS2103T-F15b-4 CHEN..MING"}}
