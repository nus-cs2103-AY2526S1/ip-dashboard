[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"    mainClass.set(\"clementine.Clementine\")","lastModifiedDate":"2025-08-29T01:16:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"    archiveBaseName \u003d \"clementine\"","lastModifiedDate":"2025-08-29T11:35:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhiyu05"},"content":"checkstyle {","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhiyu05"},"content":"    toolVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhiyu05"},"content":"    configFile \u003d file(\"config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhiyu05"},"content":"    configDirectory \u003d file(\"config/checkstyle\")","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false}],"authorContributionMap":{"zhiyu05":9,"-":39}},{"path":"data/clementine.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"T | 1 | finish ip project","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"T | 0 | finish ip project","lastModifiedDate":"2025-08-29T21:12:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"T | 0 | hello","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false}],"authorContributionMap":{"zhiyu05":3}},{"path":"src/main/java/clementine/Clementine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine;","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-22T16:22:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-22T16:22:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Task;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":"/**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":" * The main Clementine class that serves as the entry point and orchestrator for the chatbot.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":" * This class coordinates interactions between the UI, Storage, TaskList, and Parser components","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":" * to provide a complete task management experience. It handles the main application loop,","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":" * command processing, and error management.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":" *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":" * @author zhiyu","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":" */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":"public class Clementine {","lastModifiedDate":"2025-08-20T17:07:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-22T16:22:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"    private UI ui;","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"     * Constructs a new Clementine application instance with the specified file path for data storage.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"     * Initializes all components and attempts to load existing tasks from storage.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"     * If loading fails, starts with an empty task list and displays the error to the user.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"     * @param filePath the path to the file where tasks will be stored and loaded from","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"    public Clementine(String filePath) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"        try {","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"            ArrayList\u003cString\u003e fileLines \u003d storage.load();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"            ArrayList\u003cTask\u003e parsedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"            for (int i \u003d 0; i \u003c fileLines.size(); i++) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"                parsedTasks.add(Parser.parseTask(fileLines.get(i)));","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"            tasks \u003d new TaskList(parsedTasks);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"        } catch (ClementineException e) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhiyu05"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhiyu05"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhiyu05"},"content":"     * Runs the main application loop.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhiyu05"},"content":"     * Displays the intro message, processes user commands until \"bye\" is entered,","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhiyu05"},"content":"     * and handles all command types including task creation, modification, and deletion.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhiyu05"},"content":"     * Automatically saves changes to storage after each operation.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhiyu05"},"content":"     *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if there\u0027s a critical error during application execution","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhiyu05"},"content":"    public void run() throws ClementineException {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhiyu05"},"content":"        ui.showIntro();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhiyu05"},"content":"        while (true) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhiyu05"},"content":"            try {","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhiyu05"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhiyu05"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhiyu05"},"content":"                    ui.showOutro();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhiyu05"},"content":"                    break;","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhiyu05"},"content":"                }","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhiyu05"},"content":"                String command \u003d Parser.getCommandType(input);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhiyu05"},"content":"                int taskNumber;","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhiyu05"},"content":"                switch (command) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhiyu05"},"content":"                case \"list\":","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhiyu05"},"content":"                    ui.showTaskList(tasks.getTaskList());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhiyu05"},"content":"                    break;","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhiyu05"},"content":"                case \"find\":","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhiyu05"},"content":"                    String keyword \u003d Parser.parseFindKeyword(input);","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhiyu05"},"content":"                    ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhiyu05"},"content":"                    ui.showFindTasks(matchingTasks);","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhiyu05"},"content":"                    break;","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhiyu05"},"content":"                case \"mark\":","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhiyu05"},"content":"                    taskNumber \u003d Parser.parseTaskNumber(input, \"mark\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhiyu05"},"content":"                    Task markTask \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhiyu05"},"content":"                    tasks.markTask(taskNumber);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zhiyu05"},"content":"                    storage.save(tasks.getTaskList());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zhiyu05"},"content":"                    ui.showMarkedTask(markTask);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zhiyu05"},"content":"                    break;","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zhiyu05"},"content":"                case \"unmark\":","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zhiyu05"},"content":"                    taskNumber \u003d Parser.parseTaskNumber(input, \"unmark\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zhiyu05"},"content":"                    Task unmarkTask \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zhiyu05"},"content":"                    tasks.unmarkTask(taskNumber);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zhiyu05"},"content":"                    storage.save(tasks.getTaskList());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zhiyu05"},"content":"                    ui.showUnmarkedTask(unmarkTask);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zhiyu05"},"content":"                    break;","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zhiyu05"},"content":"                case \"event\":","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zhiyu05"},"content":"                    Task eventTask \u003d Parser.parseEventTask(input);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zhiyu05"},"content":"                    tasks.addTask(eventTask);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zhiyu05"},"content":"                    storage.save(tasks.getTaskList());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zhiyu05"},"content":"                    ui.showTaskAdded(eventTask, tasks.taskSize(), \"event\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zhiyu05"},"content":"                    break;","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zhiyu05"},"content":"                case \"deadline\":","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zhiyu05"},"content":"                    Task deadlineTask \u003d Parser.parseDeadlineTask(input);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zhiyu05"},"content":"                    tasks.addTask(deadlineTask);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zhiyu05"},"content":"                    storage.save(tasks.getTaskList());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zhiyu05"},"content":"                    ui.showTaskAdded(deadlineTask, tasks.taskSize(), \"deadline\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zhiyu05"},"content":"                    break;","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zhiyu05"},"content":"                case \"todo\":","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zhiyu05"},"content":"                    Task todoTask \u003d Parser.parseTodoTask(input);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zhiyu05"},"content":"                    tasks.addTask(todoTask);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zhiyu05"},"content":"                    storage.save(tasks.getTaskList());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zhiyu05"},"content":"                    ui.showTaskAdded(todoTask, tasks.taskSize(), \"todo\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zhiyu05"},"content":"                    break;","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zhiyu05"},"content":"                case \"delete\":","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zhiyu05"},"content":"                    taskNumber \u003d Parser.parseTaskNumber(input, \"delete\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zhiyu05"},"content":"                    Task deleteTask \u003d tasks.getTask(taskNumber);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zhiyu05"},"content":"                    tasks.deleteTask(taskNumber);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zhiyu05"},"content":"                    storage.save(tasks.getTaskList());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zhiyu05"},"content":"                    ui.showDeletedTask(deleteTask, tasks.taskSize());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zhiyu05"},"content":"                    break;","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zhiyu05"},"content":"                default:","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zhiyu05"},"content":"                    ui.showError(\"oh quack! i don\u0027t understand this command!\");","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zhiyu05"},"content":"                }","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zhiyu05"},"content":"            } catch (ClementineException e) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zhiyu05"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-22T16:22:58","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zhiyu05"},"content":"        ui.closeScanner();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-22T16:22:58","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-22T16:22:58","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zhiyu05"},"content":"     * The main entry point for the Clementine task management application.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zhiyu05"},"content":"     * Creates a new Clementine instance with the default data file path and starts the application.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zhiyu05"},"content":"     *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zhiyu05"},"content":"     * @param args command line arguments (not used)","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zhiyu05"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zhiyu05"},"content":"        try {","lastModifiedDate":"2025-08-22T16:22:58","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zhiyu05"},"content":"            new Clementine(\"./data/clementine.txt\").run();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zhiyu05"},"content":"        } catch (ClementineException e) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zhiyu05"},"content":"            System.out.println(\"quack! something went wrong: \" + e.getMessage());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-22T16:22:58","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-20T17:07:31","isFullCredit":false}],"authorContributionMap":{"zhiyu05":136}},{"path":"src/main/java/clementine/ClementineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine;","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"/**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":" * Custom exception class for the Clementine task management application.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":" * This exception is thrown when application-specific errors occur, such as","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":" * invalid user input, task operation failures, or data processing errors.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":" * Provides user-friendly error messages with the application\u0027s characteristic tone.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":" *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":" * @author zhiyu","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":" */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":"public class ClementineException extends Exception {","lastModifiedDate":"2025-08-22T15:47:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":"     * Constructs a new ClementineException with the specified error message.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":"     * @param message the descriptive error message explaining what went wrong","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":"    public ClementineException(String message) {","lastModifiedDate":"2025-08-22T15:47:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":"        super(message);","lastModifiedDate":"2025-08-22T15:47:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-22T15:47:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-22T15:47:59","isFullCredit":false}],"authorContributionMap":{"zhiyu05":19}},{"path":"src/main/java/clementine/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine;","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Deadline;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Event;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Task;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Todo;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":"/**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":" * The Parser class provides static utility methods for parsing user input and handling data conversion.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":" * This class handles command interpretation, task creation from user input, file I/O operations,","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":" * and date/time formatting for the Clementine chatbot.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":" *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":" * @author zhiyu","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":" */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"     * Determines the command type from user input.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"     * Recognises commands: list, mark, unmark, event, deadline, todo, delete.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"     *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"     * @param input the user\u0027s input string","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"     * @return the command type as a String","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if the input is empty or contains an unrecognised command","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"    public static String getCommandType(String input) throws ClementineException {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"oh quack! i cant read empty commands!\");","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"            return \"list\";","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"            return \"mark\";","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"            return \"unmark\";","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhiyu05"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhiyu05"},"content":"            return \"event\";","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhiyu05"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhiyu05"},"content":"            return \"deadline\";","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhiyu05"},"content":"            return \"todo\";","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhiyu05"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhiyu05"},"content":"            return \"delete\";","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhiyu05"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhiyu05"},"content":"            return \"find\";","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhiyu05"},"content":"        } else {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack quack! i don\u0027t recognise this word!\");","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhiyu05"},"content":"     * Parses a stored task line and reconstructs the corresponding Task object.","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhiyu05"},"content":"     * Handles Todo, Deadline, and Event task types from their stored format.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhiyu05"},"content":"     * @param line the stored task data as a string","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhiyu05"},"content":"     * @return the reconstructed Task object, or null if the line format is invalid","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhiyu05"},"content":"    public static Task parseTask(String line) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhiyu05"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhiyu05"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhiyu05"},"content":"            return null;","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhiyu05"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhiyu05"},"content":"        int isDone \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhiyu05"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhiyu05"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhiyu05"},"content":"        switch (taskType) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhiyu05"},"content":"        case \"T\":","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhiyu05"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhiyu05"},"content":"            break;","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhiyu05"},"content":"        case \"D\":","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zhiyu05"},"content":"            if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zhiyu05"},"content":"                String deadline \u003d parts[3].replace(\"/by \", \"\");","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zhiyu05"},"content":"                LocalDateTime timeDeadline \u003d parseDateTime(deadline);","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zhiyu05"},"content":"                task \u003d new Deadline(description, timeDeadline);","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zhiyu05"},"content":"            break;","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zhiyu05"},"content":"        case \"E\":","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zhiyu05"},"content":"            if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zhiyu05"},"content":"                String timeInfo \u003d parts[3];","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zhiyu05"},"content":"                if (timeInfo.contains(\"/from\") \u0026\u0026 timeInfo.contains(\"/to\")) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zhiyu05"},"content":"                    String[] timeParts \u003d timeInfo.split(\"/from\", 2)[1].split(\"/to\", 2);","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zhiyu05"},"content":"                    if (timeParts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zhiyu05"},"content":"                        String startTime \u003d timeParts[0].trim();","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zhiyu05"},"content":"                        LocalDateTime start \u003d parseDateTime(startTime);","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zhiyu05"},"content":"                        String endTime \u003d timeParts[1].trim();","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zhiyu05"},"content":"                        LocalDateTime end \u003d parseDateTime(endTime);","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zhiyu05"},"content":"                        task \u003d new Event(description, start, end);","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zhiyu05"},"content":"                    }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zhiyu05"},"content":"                }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zhiyu05"},"content":"            break;","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zhiyu05"},"content":"        default:","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zhiyu05"},"content":"            return null;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zhiyu05"},"content":"        if (task !\u003d null \u0026\u0026 isDone \u003d\u003d 1) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zhiyu05"},"content":"            task.taskDone();","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zhiyu05"},"content":"        return task;","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zhiyu05"},"content":"     * Extracts and parses the task number from a user command.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zhiyu05"},"content":"     * @param input the full user inout string","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zhiyu05"},"content":"     * @param commandType the command type to remove from the input","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zhiyu05"},"content":"     * @return the parsed task number as an integer","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if the input doesn\u0027t contain a valid number","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zhiyu05"},"content":"    public static int parseTaskNumber(String input, String commandType) throws ClementineException {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zhiyu05"},"content":"        try {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zhiyu05"},"content":"            String numberPart \u003d input.substring(commandType.length()).trim();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zhiyu05"},"content":"            return Integer.parseInt(numberPart);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zhiyu05"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"please provide a valid number!\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zhiyu05"},"content":"     * Parses user input to create a Deadline task.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zhiyu05"},"content":"     * Expected format: \"{@code deadline \u003cdescription\u003e /by \u003cdate\u003e}\"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zhiyu05"},"content":"     * @param input the user\u0027s deadline command input","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zhiyu05"},"content":"     * @return a new Deadline object","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if the input format is invalid or required fields are missing","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zhiyu05"},"content":"    public static Deadline parseDeadlineTask(String input) throws ClementineException {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zhiyu05"},"content":"        if (input.equals(\"deadline\")) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"the description of a deadline cannot be empty\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zhiyu05"},"content":"        if (!input.contains(\"/by\")) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! please use the format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zhiyu05"},"content":"        String[] parts \u003d input.split(\"/by\", 2);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zhiyu05"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zhiyu05"},"content":"            String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zhiyu05"},"content":"            String deadline \u003d parts[1].trim();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zhiyu05"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zhiyu05"},"content":"                throw new ClementineException(\"the description of a deadline cannot be empty\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zhiyu05"},"content":"            if (deadline.isEmpty()) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zhiyu05"},"content":"                throw new ClementineException(\"the deadline date cannot be empty!\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zhiyu05"},"content":"            try {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zhiyu05"},"content":"                LocalDateTime deadlineTime \u003d parseDateTime(deadline);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zhiyu05"},"content":"                return new Deadline(description, deadlineTime);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zhiyu05"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zhiyu05"},"content":"                throw new ClementineException(\"quack!\" + e.getMessage());","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zhiyu05"},"content":"        } else {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! please use the format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zhiyu05"},"content":"     * Parses user input to create an Event task.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zhiyu05"},"content":"     * Expected format: \"{@code event \u003cdescription\u003e /from \u003ctime\u003e /to \u003ctime\u003e}\"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"zhiyu05"},"content":"     * @param input the user\u0027s event command input","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"zhiyu05"},"content":"     * @return a new Event object","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if the input format is invalid or required fields are missing","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"zhiyu05"},"content":"    public static Event parseEventTask(String input) throws ClementineException {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"zhiyu05"},"content":"        if (input.equals(\"event\")) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! the description of the event cannot be empty\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"zhiyu05"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! please use the format: event \u003cdescription\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zhiyu05"},"content":"        String[] parts \u003d input.split(\"/from\", 2);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"zhiyu05"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"please use correct format for event task!\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"zhiyu05"},"content":"        String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"zhiyu05"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! the description of the event cannot be empty\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"zhiyu05"},"content":"        String [] timeline \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"zhiyu05"},"content":"        if (timeline.length !\u003d 2) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! please use the format: event \u003cdescription\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"zhiyu05"},"content":"        String startTime \u003d timeline[0].trim();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"zhiyu05"},"content":"        String endTime \u003d timeline[1].trim();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"zhiyu05"},"content":"        if (startTime.isEmpty() || endTime.isEmpty()) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"both start time and end time must be specified!\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"zhiyu05"},"content":"        try {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"zhiyu05"},"content":"            LocalDateTime start \u003d parseDateTime(startTime);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"zhiyu05"},"content":"            LocalDateTime end \u003d parseDateTime(endTime);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"zhiyu05"},"content":"            return new Event(description, start, end);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"zhiyu05"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! invalid date/time format\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"zhiyu05"},"content":"     * Parses user input to create a Todo task.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"zhiyu05"},"content":"     * Expected format: \"{@code todo \u003cdescription\u003e}\"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"zhiyu05"},"content":"     * @param input the user\u0027s todo command input","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"zhiyu05"},"content":"     * @return a new Todo object","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if the description is empty","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"zhiyu05"},"content":"    public static Todo parseTodoTask(String input) throws ClementineException {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"zhiyu05"},"content":"        if (input.equals(\"todo\")) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! the description of a todo cannot be empty!\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"zhiyu05"},"content":"        String cleanDescription \u003d input.substring(5).trim();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"zhiyu05"},"content":"        if (cleanDescription.isEmpty()) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! the description of a todo cannot be empty!\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"zhiyu05"},"content":"        return new Todo(cleanDescription);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"zhiyu05"},"content":"     * Parses a date/time string into a LocalDateTime object.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"zhiyu05"},"content":"     * Supports multiple formats including dates with and without times.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"zhiyu05"},"content":"     * If only a date is provided, sets the time to start of day (00:00).","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"zhiyu05"},"content":"     * @param input the date/time string to parse","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"zhiyu05"},"content":"     * @return a LocalDateTime object representing the parsed date/time","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"zhiyu05"},"content":"     * @throws DateTimeParseException if the input doesn\u0027t match any supported formats","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"zhiyu05"},"content":"    public static LocalDateTime parseDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"zhiyu05"},"content":"        DateTimeFormatter[] dateTimeFormatters \u003d {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"zhiyu05"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"zhiyu05"},"content":"                DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\"),","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"zhiyu05"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"zhiyu05"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"),","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"zhiyu05"},"content":"                DateTimeFormatter.ofPattern(\"d/MM/yyyy HH:mm\"),","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"zhiyu05"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\")","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"zhiyu05"},"content":"        };","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"zhiyu05"},"content":"        DateTimeFormatter[] dateFormatters \u003d {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"zhiyu05"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"zhiyu05"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy\")","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"zhiyu05"},"content":"        };","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"zhiyu05"},"content":"        for (DateTimeFormatter f : dateTimeFormatters) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"zhiyu05"},"content":"            try {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"zhiyu05"},"content":"                return LocalDateTime.parse(input, f);","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"zhiyu05"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"zhiyu05"},"content":"                // try next format","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"zhiyu05"},"content":"        for (DateTimeFormatter f : dateFormatters) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"zhiyu05"},"content":"            try {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"zhiyu05"},"content":"                LocalDate date \u003d LocalDate.parse(input, f);","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"zhiyu05"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"zhiyu05"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"zhiyu05"},"content":"                // try next","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"zhiyu05"},"content":"        throw new DateTimeParseException(\"invalid date format!use dd/MM/yyyy or dd/MM/yyyy HHmm\", input, 0);","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"zhiyu05"},"content":"     * Formats a LocalDateTime object for user-friendly display.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"zhiyu05"},"content":"     * If the time is 00:00, displays only the date.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"zhiyu05"},"content":"     * Otherwise, displays both date and time in 12-hour format.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"zhiyu05"},"content":"     * @param dateTime the LocalDateTime to format","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"zhiyu05"},"content":"     * @return a formatted string suitable for display to users","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"zhiyu05"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"zhiyu05"},"content":"        // if no time specified","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"zhiyu05"},"content":"        if (dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"zhiyu05"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"zhiyu05"},"content":"        } else {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"zhiyu05"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy h:mm a\"));","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"zhiyu05"},"content":"     * Formats a LocalDateTime object for storage in files.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"zhiyu05"},"content":"     * Uses a consistent format for reliable parsing when loading data.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"zhiyu05"},"content":"     * @param dateTime the LocalDateTime to format for storage","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"zhiyu05"},"content":"     * @return a formatted string suitable for file storage","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"zhiyu05"},"content":"    public static String formatDateTimeForStorage(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"zhiyu05"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"zhiyu05"},"content":"     * Extracts a keyword from the {@code find} command input.","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"zhiyu05"},"content":"     * @param input the full user input string starting with {@code find}","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"zhiyu05"},"content":"     * @return the keyword to search for, trimmed of leading and trailing whitespace","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if no keyword is specified after {@code find}","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"zhiyu05"},"content":"    public static String parseFindKeyword(String input) throws ClementineException {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"zhiyu05"},"content":"        if (input.equals(\"find\")) {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! please specify the keyword to search for!\");","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"zhiyu05"},"content":"        String keyword \u003d input.substring(4).trim();","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"zhiyu05"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! please specify the keyword to search for!\");","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"zhiyu05"},"content":"        return keyword;","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-28T00:47:15","isFullCredit":false}],"authorContributionMap":{"zhiyu05":321}},{"path":"src/main/java/clementine/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine;","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Task;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":"/**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":" * The Storage class handles persistent storage operations for the Clementine chatbot","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":" * This class provides functionality to save tasks to and load tasks from a file,","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":" * ensuring data persistence between application sessions.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":" *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":" * @author zhiyu","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":" */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"    private String filePath;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"     * Constructs a Stroage object with the specified file path.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"     * @param filePath the path to the file where tasks will be stored","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"     * Loads task data from the storage file.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"     * Returns an empty list if the file does not exist or is empty.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"     * Skips empty lines during loading.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"     * @return an ArrayList of String objects representing the raw task data from the file","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if there\u0027s an error reading from the file (excluding FileNotFoundException)","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"    public ArrayList\u003cString\u003e load() throws ClementineException {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhiyu05"},"content":"        try {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhiyu05"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhiyu05"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhiyu05"},"content":"                return lines;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhiyu05"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhiyu05"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhiyu05"},"content":"                String line \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhiyu05"},"content":"                if (!line.isEmpty()) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhiyu05"},"content":"                    lines.add(line);","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhiyu05"},"content":"                }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhiyu05"},"content":"            fileScanner.close();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhiyu05"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhiyu05"},"content":"            // File not found on first run. Safe to ignore as a new file will be created when saving.","lastModifiedDate":"2025-08-29T21:12:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhiyu05"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhiyu05"},"content":"        return lines;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhiyu05"},"content":"     * Saves the current list of tasks of the storage file.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhiyu05"},"content":"     * Creates the parent directory if it doesn\u0027t exist.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhiyu05"},"content":"     * Overwrites any existing file content.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhiyu05"},"content":"     * @param tasks an ArrayList of Task objects to save to the file","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if there\u0027s an error writing to the file","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhiyu05"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws ClementineException {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhiyu05"},"content":"        try {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhiyu05"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhiyu05"},"content":"            File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhiyu05"},"content":"            if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhiyu05"},"content":"                parentDir.mkdirs();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhiyu05"},"content":"            StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhiyu05"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zhiyu05"},"content":"                content.append(task.storeData()).append(\"\\n\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zhiyu05"},"content":"            writeToFile(content.toString());","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zhiyu05"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zhiyu05"},"content":"     * Writes the given content string to the file specified by filePath.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zhiyu05"},"content":"     * @param content the string content to write to the file","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zhiyu05"},"content":"     * @throws IOException if there\u0027s an error writing to the file","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zhiyu05"},"content":"    private void writeToFile(String content) throws IOException {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zhiyu05"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zhiyu05"},"content":"        fw.write(content);","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zhiyu05"},"content":"        fw.close();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false}],"authorContributionMap":{"zhiyu05":96}},{"path":"src/main/java/clementine/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine;","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Task;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"/**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":" * The TaskList class manages a collection of tasks for the Clementine chatbot.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":" * This class provides operations to add, delete, mark, unmark, and retrieve tasks.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":" *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":" * @author zhiyu","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":" */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":"public class TaskList {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2025-08-29T21:12:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"     * @param tasks an ArrayList of Task objects to initialise the TaskList with","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"     * Returns the underlying ArrayList of tasks.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"     * @return the ArrayList containing all tasks","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhiyu05"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhiyu05"},"content":"     * @return the total number of tasks","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhiyu05"},"content":"    public int taskSize() {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhiyu05"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhiyu05"},"content":"     * Retrieves a task at the specified position (1-indexed).","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhiyu05"},"content":"     * @param index the position of the task (1-indexed)","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhiyu05"},"content":"     * @return the Task object at the specified position","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if the index is out of bounds","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhiyu05"},"content":"    public Task getTask(int index) throws ClementineException {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhiyu05"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"invalid task number!\");","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhiyu05"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhiyu05"},"content":"     * Checks whether the task list is empty.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhiyu05"},"content":"     * @return true if the tasklist contains no tasks, false otherwise.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhiyu05"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhiyu05"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhiyu05"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhiyu05"},"content":"     * Enforces a maximum limit of 100 tasks","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhiyu05"},"content":"     * @param task the Task object to add to the list","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if the task list has reached its maximum capacity of 100 tasks","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhiyu05"},"content":"    public void addTask(Task task) throws ClementineException {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhiyu05"},"content":"        if (tasks.size() \u003e\u003d MAX_TASKS) {","lastModifiedDate":"2025-08-29T21:12:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"oh quack! the task list is full,\"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zhiyu05"},"content":"                    + \"please complete some tasks before adding extra!\");","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zhiyu05"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zhiyu05"},"content":"     * Marks a task as completed at the specified position (1-indexed).","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zhiyu05"},"content":"     * @param index the position of the task to mark as done (1-indexed)","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if the tasklist is empty or the index is out of bounds","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zhiyu05"},"content":"    public void markTask(int index) throws ClementineException {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zhiyu05"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! u dont have any tasks yet!\");","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zhiyu05"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"invalid task number!\");","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zhiyu05"},"content":"        tasks.get(index - 1).taskDone();","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zhiyu05"},"content":"     * Marks a task as not completed at the specified position (1-indexed).","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zhiyu05"},"content":"     * @param index the position of the task to mark as not done (1-indexed)","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if the tasklist is empty or the index is out of bounds","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zhiyu05"},"content":"    public void unmarkTask(int index) throws ClementineException {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zhiyu05"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! u dont have any tasks yet!\");","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zhiyu05"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"invalid task number\");","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zhiyu05"},"content":"        tasks.get(index - 1).taskUndone();","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zhiyu05"},"content":"     * Removes a task from the list at the specified position (1-indexed)","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zhiyu05"},"content":"     * @param index the position of the task to delete (1-indexed)","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zhiyu05"},"content":"     * @throws ClementineException if the task list is empty or the index is out of bounds","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zhiyu05"},"content":"    public void deleteTask(int index) throws ClementineException {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zhiyu05"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"quack! you dont have any tasks to delete!\");","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zhiyu05"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zhiyu05"},"content":"            throw new ClementineException(\"invalid task number\");","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zhiyu05"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zhiyu05"},"content":"     * Finds all tasks in the list that contain the given keyword.","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zhiyu05"},"content":"     * @param keyword the word or phrase to search for in task descriptions","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zhiyu05"},"content":"     * @return a list of tasks whose descriptions contain the given keyword;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zhiyu05"},"content":"     *         the list will be empty if no matches are found","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zhiyu05"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zhiyu05"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zhiyu05"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zhiyu05"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zhiyu05"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zhiyu05"},"content":"        return matchingTasks;","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-28T10:52:55","isFullCredit":false}],"authorContributionMap":{"zhiyu05":151}},{"path":"src/main/java/clementine/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine;","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Task;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":"/**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":" * The UI class handles all user interface interactions for the Clementine chatbot.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":" * This class manages output operations, displays messages to users, and formats output consistently.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":" *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":" * @author zhiyu","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":" *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":" */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":"public class UI {","lastModifiedDate":"2025-08-27T23:55:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"     * Constructs a new UI object and initialises the Scanner for user input.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"    public UI() {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"     * Displays the introductory message when the application starts.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"     * Shows a welcome message with the application name and prompts the user for input.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"    public void showIntro() {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\"Quack! I\u0027m clementine\\n What can i help you with today?\\n\");","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"     * Displays the farewell message when the application exits.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"     * Shows a goodbye message to the user.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhiyu05"},"content":"    public void showOutro() {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\"Bye! quack u later! hope you have a great day!\");","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhiyu05"},"content":"     * Prints a decorative line separator to improve visual formatting of the output","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhiyu05"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\"______________________________________________\\n\");","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhiyu05"},"content":"     * Reads and returns the next line of user input","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhiyu05"},"content":"     * @return the user\u0027s input as a String","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhiyu05"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhiyu05"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhiyu05"},"content":"     * Displays an error message to the user in a formatted manner","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhiyu05"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhiyu05"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\"OOPS!! \" + message);","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhiyu05"},"content":"     * Displays confirmation that a task has been successfully added.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhiyu05"},"content":"     * Shows different messages based on the task type and includes the task details and total count.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhiyu05"},"content":"     * @param task the Task object that was added","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhiyu05"},"content":"     * @param totalTasks the total number of tasks after adding this task","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhiyu05"},"content":"     * @param taskType the type of task (\"deadline\", \"event\" or \"todo\")","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhiyu05"},"content":"    public void showTaskAdded(Task task, int totalTasks, String taskType) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zhiyu05"},"content":"        switch(taskType) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zhiyu05"},"content":"        case \"deadline\":","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zhiyu05"},"content":"            System.out.println(\"okay! ive added the deadline task quack!\");","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zhiyu05"},"content":"            break;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zhiyu05"},"content":"        case \"event\":","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zhiyu05"},"content":"            System.out.println(\"okay! ive added the event task for u! quack!\");","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zhiyu05"},"content":"            break;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zhiyu05"},"content":"        case \"todo\":","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zhiyu05"},"content":"        default:","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zhiyu05"},"content":"            System.out.println(\"okay! ive added the task quack!\");","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zhiyu05"},"content":"            break;","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\" \" + task.toString());","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\"now you have \" + totalTasks + \" remaining tasks!\");","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zhiyu05"},"content":"     * Displays the complete list of tasks to the user","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zhiyu05"},"content":"     * Each task is numbered and shown with its string representation.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"zhiyu05"},"content":"     * @param tasks an ArrayList of Task objects to display","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"zhiyu05"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"zhiyu05"},"content":"        String response \u003d \"tasks to be done before freedom:\\n\";","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"zhiyu05"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"zhiyu05"},"content":"            response +\u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(response);","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"zhiyu05"},"content":"     * Displays confirmation that a task has been marked as completed.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"zhiyu05"},"content":"     * @param task the Task object that was marked as done","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"zhiyu05"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\"good job! you\u0027ve completed the task\");","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\" \" + task.toString());","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"zhiyu05"},"content":"     * Displays confirmation that a task has been marked as not completed.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"zhiyu05"},"content":"     * @param task the Task object that was unmarked","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"zhiyu05"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\"okay, ive changed this task to not done. quack!\");","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\" \" + task.toString());","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"zhiyu05"},"content":"     * Displays confirmtation that a task has been successfully deleted.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"zhiyu05"},"content":"     * Shows the deleted task details and the updated total task count.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"zhiyu05"},"content":"     * @param task the Task object that was deleted","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"zhiyu05"},"content":"     * @param totalTasks the total number of remaining tasks after deletion","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"zhiyu05"},"content":"    public void showDeletedTask(Task task, int totalTasks) {","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\"quack! ive deleted this task for you :)\");","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\" \" + task.toString());","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\"now you have \" + totalTasks + \" remaining tasks\");","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"zhiyu05"},"content":"        showLine();","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T00:18:50","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"zhiyu05"},"content":"     * Displays an error message when there\u0027s a problem loading tasks from storage.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"zhiyu05"},"content":"     * @param errorMessage the specific error message describing what went wrong during loading","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"zhiyu05"},"content":"    public void showLoadingError(String errorMessage) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"zhiyu05"},"content":"        System.out.println(\"quack! error loading tasks: \" + errorMessage);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"zhiyu05"},"content":"     * Closes the Scanner resource to prevent resource leaks.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"zhiyu05"},"content":"     * Should be called when the application is shutting down.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"zhiyu05"},"content":"    public void closeScanner() {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"zhiyu05"},"content":"        if (scanner !\u003d null) {","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"zhiyu05"},"content":"            scanner.close();","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"zhiyu05"},"content":"     * Displays the given list of tasks that match a {@code find} command.","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"zhiyu05"},"content":"     * @param tasks the list of tasks to display","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"zhiyu05"},"content":"    public void showFindTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"zhiyu05"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"zhiyu05"},"content":"            showLine();","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"zhiyu05"},"content":"            System.out.println(\"oh quack! no matching tasks found!\");","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"zhiyu05"},"content":"            showLine();","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"zhiyu05"},"content":"        } else {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"zhiyu05"},"content":"            String response \u003d \"quack! here\u0027s the tasks u might be looking for:\\n\";","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"zhiyu05"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"zhiyu05"},"content":"                response +\u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"zhiyu05"},"content":"            }","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"zhiyu05"},"content":"            showLine();","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"zhiyu05"},"content":"            System.out.println(response);","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"zhiyu05"},"content":"            showLine();","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-27T23:55:26","isFullCredit":false}],"authorContributionMap":{"zhiyu05":184}},{"path":"src/main/java/clementine/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine.task;","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":"import clementine.Parser;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"/**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":" * Represents a task with a deadline in the Clementine task management application.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":" * A Deadline task extends the basic Task functionality by adding a specific due date and time.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":" * This class handles display formatting and storage serialization for deadline-based tasks.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":" *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":" * @author zhiyu","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":" */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":"     * Constructs a new Deadline task with the specified description and due date.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"     * @param by the deadline date and time for this task","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"        super(description);","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"     * Returns a string representation of the deadline task for display to users.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"     * Formats the deadline date/time in a user-friendly format.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"     * @return a formatted string in the format \"[D][status] description (by: date)\"","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"    @Override","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"        String formattedDate \u003d Parser.formatDateTime(by);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + formattedDate + \")\";","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhiyu05"},"content":"     * Returns a string representation of the deadline task suitable for file storage.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhiyu05"},"content":"     * Uses a consistent format that can be parsed when loading from storage.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhiyu05"},"content":"     * @return a formatted string for storage in the format \"D | status | description | /by date\"","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"    @Override","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhiyu05"},"content":"    public String storeData() {","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhiyu05"},"content":"        String dateString \u003d Parser.formatDateTimeForStorage(by);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhiyu05"},"content":"        return \"D | \" + super.storeData() + \" | /by \" + dateString;","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false}],"authorContributionMap":{"zhiyu05":48}},{"path":"src/main/java/clementine/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine.task;","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":"import clementine.Parser;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"/**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":" * Represents a task with a specific start and end time in the Clementine task management application.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":" * An Event task extends the basic Task functionality by adding time range information.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":" * This class handles display formatting and storage serialization for time-bound events.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":" *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":" * @author zhiyu","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":" */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"     * Constructs a new Event task with the specified description, start time, and end time.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"     * @param start the start date and time of the event","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"     * @param end the end date and time of the event","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"        super(description);","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"     * Returns a string representation of the event task for display to users.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"     * Formats both start and end times in a user-friendly format.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"     * @return a formatted string in the format \"[E][status] description (from: start_time to: end_time)\"","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"    @Override","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"        String started \u003d Parser.formatDateTime(this.start);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"        String ended \u003d Parser.formatDateTime(this.end);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhiyu05"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + started + \" to:\" + ended + \")\";","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"     * Returns a string representation of the event task suitable for file storage.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhiyu05"},"content":"     * Uses a consistent format that can be parsed when loading from storage.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhiyu05"},"content":"     * @return a formatted string for storage in the format \"E | status | description | /from start_date/to end_date\"","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhiyu05"},"content":"    @Override","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhiyu05"},"content":"    public String storeData() {","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhiyu05"},"content":"        String started \u003d Parser.formatDateTimeForStorage(this.start);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhiyu05"},"content":"        String ended \u003d Parser.formatDateTimeForStorage(this.end);","lastModifiedDate":"2025-08-28T23:10:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhiyu05"},"content":"        return \"E | \" + super.storeData() + \" | /from \" + started + \"/to \" + ended;","lastModifiedDate":"2025-08-27T17:36:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false}],"authorContributionMap":{"zhiyu05":53}},{"path":"src/main/java/clementine/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine.task;","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"/**","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":" * @author zhiyu","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":" */","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"public class Task {","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":"    protected String description;","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":"     * Tasks are initialised as not completed by default.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"     * Returns the status icon for display purposes.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"     * @return \"X\" if the task is completed, \" \" (space) if not completed","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"     * Returns the completion status as a numeric value for storage purposes.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"     * @return 1 if the task is completed, 0 if not completed","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"    public int getCompletion() {","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"        return (isDone ? 1 : 0);","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"     * Returns the description of the task","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhiyu05"},"content":"     * @return the task description as a String","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhiyu05"},"content":"    public String getDescription() {","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhiyu05"},"content":"        return this.description;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhiyu05"},"content":"     * Returns a string representation of the task for display to users.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhiyu05"},"content":"     * Shows the completion status and description in a formatted manner.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhiyu05"},"content":"     * @return a formatted string in the format \"[status_icon] description\"","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhiyu05"},"content":"    @Override","lastModifiedDate":"2025-08-29T21:12:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhiyu05"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhiyu05"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhiyu05"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhiyu05"},"content":"    public void taskDone() {","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhiyu05"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhiyu05"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhiyu05"},"content":"    public void taskUndone() {","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhiyu05"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhiyu05"},"content":"     * Returns a string representation of the task suitable for file storage.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhiyu05"},"content":"     * Provides the basic format that subclasses can extend with additional information.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhiyu05"},"content":"     * @return a formatted string for storage in the format \"completion_status | description\"","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhiyu05"},"content":"    public String storeData() {","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhiyu05"},"content":"        return getCompletion() + \" | \" + this.description;","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"zhiyu05"},"content":"     * Checks whether the task is completed.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"zhiyu05"},"content":"     * @return true if the task is completed, false otherwise","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"zhiyu05"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"zhiyu05"},"content":"        return this.isDone;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"zhiyu05"},"content":"     * Checks if the task\u0027s description contains the given keyword,","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"zhiyu05"},"content":"     * ignoring case sensitivity.","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"zhiyu05"},"content":"     * @param keyword the keyword to search for in the task description","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"zhiyu05"},"content":"     * @return {@code true} if the description contains the keyword,","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"zhiyu05"},"content":"     *         {@code false} otherwise","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"zhiyu05"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"zhiyu05"},"content":"        return this.description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T21:38:30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-20T23:30:21","isFullCredit":false}],"authorContributionMap":{"zhiyu05":98}},{"path":"src/main/java/clementine/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine.task;","lastModifiedDate":"2025-08-29T00:18:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"/**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":" * Represents a simple todo task without any time constraints.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":" * A Todo is the most basic type of task, containing only a description and completion status.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":" * This class provides the concrete implementation for tasks that don\u0027t require deadlines or time ranges.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":" *","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":" * @author zhiyu","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":" */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":"     * Constructs a new Todo task with the specified description.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":"        super(description);","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"     * Returns a string representation of the todo task for display to users.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"     * Adds the todo-specific type indicator to the base task format.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"     * @return a formatted string in the format \"[T][status_icon] description\"","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"    @Override","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"    /**","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"     * Returns a string representation of the todo task suitable for file storage.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"     * Adds the todo-specific type indicator to the base storage format.","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"     * @return a formatted string for storage in the format \"T | completion_status | description\"","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"     */","lastModifiedDate":"2025-08-29T20:51:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"    @Override","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"    public String storeData() {","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"        return \"T | \" + super.storeData();","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-26T22:55:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-22T12:04:12","isFullCredit":false}],"authorContributionMap":{"zhiyu05":38}},{"path":"src/test/java/clementine/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine;","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Event;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Task;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":"    public void dummyTest() {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"    public void getCommandType_exceptionThrown() {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"        try {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"            assertEquals(\"test\", Parser.getCommandType(\"hi\"));","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"            fail();","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"        } catch (ClementineException e) {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"            assertEquals(\"quack quack! i don\u0027t recognise this word!\", e.getMessage());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"    public void getCommandType_emptyInput() {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"        try {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"            assertEquals(\"test\", Parser.getCommandType(\"\"));","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"            fail();","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"        } catch (ClementineException e) {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"            assertEquals(\"oh quack! i cant read empty commands!\", e.getMessage());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhiyu05"},"content":"    public void getCommandType_success() throws ClementineException {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhiyu05"},"content":"        assertEquals(\"unmark\", Parser.getCommandType(\"unmark 2\"));","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhiyu05"},"content":"    public void parseTask_validTodo() {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhiyu05"},"content":"        Task task \u003d Parser.parseTask(\"T | 0 | finish ip project\");","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"zhiyu05"},"content":"        assertNotNull(task);","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"zhiyu05"},"content":"        assertEquals(\"finish ip project\", task.getDescription());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"zhiyu05"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"zhiyu05"},"content":"    public void parseEventTask_missingFrom() {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"zhiyu05"},"content":"        try {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"zhiyu05"},"content":"            Parser.parseEventTask(\"event meeting /to 29/9/2025 1900\");","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"zhiyu05"},"content":"            fail();","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"zhiyu05"},"content":"        } catch (ClementineException e) {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"zhiyu05"},"content":"            assertEquals(\"quack! please use the format: event \u003cdescription\u003e /from \u003ctime\u003e /to \u003ctime\u003e\", e.getMessage());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"zhiyu05"},"content":"    public void parseEventTask_emptyTimes() {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"zhiyu05"},"content":"        try {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"zhiyu05"},"content":"            Parser.parseEventTask(\"event meeting /from /to\");","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"zhiyu05"},"content":"            fail();","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"zhiyu05"},"content":"        } catch (ClementineException e) {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"zhiyu05"},"content":"            assertEquals(\"both start time and end time must be specified!\", e.getMessage());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"zhiyu05"},"content":"        }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"zhiyu05"},"content":"    public void parseEventTask_validEvent() throws ClementineException {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"zhiyu05"},"content":"        Event event \u003d Parser.parseEventTask(\"event meeting /from 19/8/2025 1400 /to 25/8/2025 1400\");","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"zhiyu05"},"content":"        assertEquals(\"meeting\", event.getDescription());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false}],"authorContributionMap":{"zhiyu05":77}},{"path":"src/test/java/clementine/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine;","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":"import java.io.File;","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Task;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Todo;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":"    @TempDir","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":"    Path tempDir;","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"    public void load_nonExistentFile_returnsEmptyList() throws ClementineException {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"        File file \u003d tempDir.resolve(\"nonexistent.txt\").toFile();","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"        Storage storage \u003d new Storage(file.getAbsolutePath());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"        ArrayList\u003cString\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"        assertTrue(tasks.isEmpty());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"    public void saveAndLoad_validTasks_success() throws ClementineException {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"        File file \u003d tempDir.resolve(\"tasks.txt\").toFile();","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"        Storage storage \u003d new Storage(file.getAbsolutePath());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"        ArrayList\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"        tasksToSave.add(new Todo(\"eat dinner with friends\"));","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"        storage.save(tasksToSave);","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhiyu05"},"content":"        ArrayList\u003cString\u003e lines \u003d storage.load();","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhiyu05"},"content":"        assertEquals(1, lines.size());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"        assertTrue(lines.get(0).contains(\"eat dinner with friends\"));","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false}],"authorContributionMap":{"zhiyu05":45}},{"path":"src/test/java/clementine/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"package clementine;","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"zhiyu05"},"content":"import clementine.task.Task;","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-09-03T14:47:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"zhiyu05"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"zhiyu05"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"zhiyu05"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"zhiyu05"},"content":"    public void setUp() {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"zhiyu05"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"zhiyu05"},"content":"    public void getTask_invalidNumber_throwsException() {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"zhiyu05"},"content":"        assertThrows(ClementineException.class, () -\u003e taskList.getTask(1));","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"zhiyu05"},"content":"    public void deleteTask_validIndex_removesTask() throws ClementineException {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"zhiyu05"},"content":"        Task task \u003d new Task(\"finish 2100 quiz\");","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"zhiyu05"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"zhiyu05"},"content":"        assertEquals(1, taskList.taskSize());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"zhiyu05"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"zhiyu05"},"content":"        assertEquals(0, taskList.taskSize());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"zhiyu05"},"content":"","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"zhiyu05"},"content":"    @Test","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"zhiyu05"},"content":"    public void markTask_validIndex_marksDone() throws ClementineException {","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"zhiyu05"},"content":"        Task task \u003d new Task(\"finish lsm reading\");","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"zhiyu05"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"zhiyu05"},"content":"        taskList.markTask(1);","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"zhiyu05"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"zhiyu05"},"content":"    }","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"zhiyu05"},"content":"}","lastModifiedDate":"2025-08-29T03:06:12","isFullCredit":false}],"authorContributionMap":{"zhiyu05":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhiyu05"},"content":"todo finish ip project","lastModifiedDate":"2025-08-22T14:37:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"zhiyu05"},"content":"deadline finish st2334 quiz /by Sunday","lastModifiedDate":"2025-08-22T14:37:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"zhiyu05"},"content":"event birthday party /from 3pm Mon /to 5pm","lastModifiedDate":"2025-08-22T14:37:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"zhiyu05"},"content":"list","lastModifiedDate":"2025-08-22T14:37:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"zhiyu05"},"content":"mark 2","lastModifiedDate":"2025-08-22T14:37:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"zhiyu05"},"content":"list","lastModifiedDate":"2025-08-22T14:37:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"zhiyu05"},"content":"unmark 2","lastModifiedDate":"2025-08-22T14:37:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"zhiyu05"},"content":"list","lastModifiedDate":"2025-08-22T14:37:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"zhiyu05"},"content":"bye","lastModifiedDate":"2025-08-22T14:37:48","isFullCredit":false}],"authorContributionMap":{"zhiyu05":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"zhiyu05"},"content":"java -classpath ../bin Clementine \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T14:37:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"zhiyu05"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-08-22T14:37:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"zhiyu05":2,"-":27}}]
