[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"    mainClass.set(\"GbTheFatBoy.entry.GbTheFatBoy\")","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"    archiveBaseName \u003d \"GbTheFatBoy\"","lastModifiedDate":"2025-08-28T12:48:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"    archiveFileName \u003d \u0027GbTheFatBoy.jar\u0027","lastModifiedDate":"2025-08-28T12:48:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"jaxwong":3}},{"path":"src/main/java/GbTheFatBoy/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.command;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":" * Represents a parsed command with its type and associated arguments.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":" * Encapsulates the command information extracted from user input.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"public class Command {","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"    private final CommandType type;","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"    private final String arguments;","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"     * Creates a new Command with the specified type and arguments.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"     * @param type The type of command.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"    public Command(CommandType type, String arguments) {","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"        this.arguments\u003d arguments;","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"    public CommandType getType() {","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"        return this.type;","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"    public String getArguments() {","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"        return this.arguments;","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"     * @return True if the command type is BYE, false otherwise.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"        return this.type \u003d\u003d CommandType.BYE;","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false}],"authorContributionMap":{"jaxwong":39}},{"path":"src/main/java/GbTheFatBoy/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.command;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":" * Enumeration of all supported command types in the application.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":" * Each enum value represents a different action the user can perform.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"public enum CommandType {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"    TODO,","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"    DEADLINE,","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"    EVENT,","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"    LIST,","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"    MARK,","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"    UNMARK,","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"    DELETE,","lastModifiedDate":"2025-08-20T11:31:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"    FIND_DATE,","lastModifiedDate":"2025-08-24T16:31:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"    BYE;","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"     * Converts a string input to the corresponding CommandType.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"     * Case-insensitive matching is performed.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"     * @param input The string representation of the command.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"     * @return The corresponding CommandType enum value.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"     * @throws IllegalArgumentException If the input doesn\u0027t match any known command.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"    public static CommandType fromString(String input) {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"        return switch(input.toLowerCase()) {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"            case \"todo\" -\u003e TODO;","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"            case \"deadline\" -\u003e DEADLINE;","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"            case \"event\" -\u003e EVENT;","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"            case \"list\" -\u003e LIST;","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"            case \"mark\" -\u003e MARK;","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"            case \"unmark\" -\u003e UNMARK;","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"            case \"delete\" -\u003e DELETE;","lastModifiedDate":"2025-08-20T11:31:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"            case \"find-date\" -\u003e FIND_DATE;","lastModifiedDate":"2025-08-24T16:31:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"            case \"bye\" -\u003e BYE;","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"            default -\u003e throw new IllegalArgumentException(\"Unknown command \" + input);","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"        };","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false}],"authorContributionMap":{"jaxwong":42}},{"path":"src/main/java/GbTheFatBoy/entry/GbTheFatBoy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.entry;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.ui.Ui;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.storage.Storage;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.storage.TaskList;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.command.Command;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.command.CommandType;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.exception.GBException;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.parser.Parser;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Task;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Todo;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Deadline;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Event;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T09:38:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":" * Main application class that coordinates all components of the task management system.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":" * Handles initialization, command processing, and the main application loop.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"public class GbTheFatBoy {","lastModifiedDate":"2025-08-19T09:38:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T09:38:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"     * Creates a new GbTheFatBoy application instance.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"     * Initializes UI, storage, and attempts to load existing tasks.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"     * @param dataFilePath The file path where tasks are stored.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"    public GbTheFatBoy(String dataFilePath) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"        this.storage \u003d new Storage(dataFilePath);","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"        try {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"            this.taskList \u003d new TaskList(this.storage.loadTasks());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"        catch (GBException e) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T09:38:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"     * Starts the main application loop.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"     * Continuously reads and processes user commands until exit command is received.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"    public void run() {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaxwong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaxwong"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaxwong"},"content":"            try {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaxwong"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jaxwong"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jaxwong"},"content":"                executeCommand(command);","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jaxwong"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jaxwong"},"content":"                // Save after each command (except BYE)","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jaxwong"},"content":"                if (!isExit) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jaxwong"},"content":"                    saveTasksToStorage();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jaxwong"},"content":"            } catch (IllegalArgumentException ie) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jaxwong"},"content":"                ui.showInvalidCommand();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jaxwong"},"content":"            } catch (GBException e) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jaxwong"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jaxwong"},"content":"     * Executes a parsed command by delegating to the appropriate handler.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jaxwong"},"content":"     * Handles all command types and their specific error conditions.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jaxwong"},"content":"     * @param command The command to execute.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If there\u0027s an error executing the command.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jaxwong"},"content":"    private void executeCommand(Command command) throws GBException {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jaxwong"},"content":"        switch (command.getType()) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jaxwong"},"content":"        case TODO -\u003e {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jaxwong"},"content":"            try {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jaxwong"},"content":"                Todo todo \u003d Parser.parseTodo(command.getArguments());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jaxwong"},"content":"                taskList.add(todo);","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jaxwong"},"content":"                ui.showTaskAdded(todo, taskList.getSize());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jaxwong"},"content":"            } catch (GBException e) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jaxwong"},"content":"                if (e.getMessage().startsWith(\"Invalid Todo\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jaxwong"},"content":"                    ui.showEmptyDescription();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-20T11:24:33","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jaxwong"},"content":"        case DEADLINE -\u003e {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jaxwong"},"content":"            try {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jaxwong"},"content":"                Deadline deadline \u003d Parser.parseDeadline(command.getArguments());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jaxwong"},"content":"                taskList.add(deadline);","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jaxwong"},"content":"                ui.showTaskAdded(deadline, taskList.getSize());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jaxwong"},"content":"            } catch (GBException e) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jaxwong"},"content":"                if (e.getMessage().equals(\"Invalid deadline format\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jaxwong"},"content":"                    ui.showDeadlineFormat();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jaxwong"},"content":"                } else if (e.getMessage().equals(\"Task description and deadline cannot be empty\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jaxwong"},"content":"                    ui.showEmptyTaskDetails();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jaxwong"},"content":"                } else if (e.getMessage().startsWith(\"Invalid date/time format\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jaxwong"},"content":"                    ui.showDateTimeFormatError(command.getArguments());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jaxwong"},"content":"                } else {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jaxwong"},"content":"                    throw e;","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jaxwong"},"content":"        case EVENT -\u003e {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jaxwong"},"content":"            try {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jaxwong"},"content":"                Event event \u003d Parser.parseEvent(command.getArguments());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jaxwong"},"content":"                taskList.add(event);","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jaxwong"},"content":"                ui.showTaskAdded(event, taskList.getSize());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jaxwong"},"content":"            } catch (GBException e) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jaxwong"},"content":"                if (e.getMessage().equals(\"Invalid event format\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jaxwong"},"content":"                    ui.showEventFormat();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jaxwong"},"content":"                } else if (e.getMessage().equals(\"Event description and dates cannot be empty\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jaxwong"},"content":"                    ui.showEmptyEventDetails();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jaxwong"},"content":"                } else if (e.getMessage().equals(\"End date/time cannot be before start date/time\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jaxwong"},"content":"                    ui.showEndTimeBeforeStartTime();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jaxwong"},"content":"                } else if (e.getMessage().startsWith(\"Invalid date/time format\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jaxwong"},"content":"                    ui.showDateTimeFormatError(command.getArguments());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jaxwong"},"content":"                } else {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jaxwong"},"content":"                    throw e;","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jaxwong"},"content":"        case LIST -\u003e {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jaxwong"},"content":"            ui.showTaskList(taskList.getTasks());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jaxwong"},"content":"        case MARK -\u003e {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jaxwong"},"content":"            try {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jaxwong"},"content":"                int index \u003d Parser.parseTaskIndex(command.getArguments());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jaxwong"},"content":"                taskList.mark(index);","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jaxwong"},"content":"                Task task \u003d taskList.getTask(index);","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jaxwong"},"content":"                ui.showTaskMarked(task);","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jaxwong"},"content":"            } catch (GBException e) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jaxwong"},"content":"                if (e.getMessage().equals(\"Invalid task index\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jaxwong"},"content":"                    ui.showInvalidIndex(taskList.getSize());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jaxwong"},"content":"                } else {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jaxwong"},"content":"                    ui.showInvalidNumberFormat();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jaxwong"},"content":"        case UNMARK -\u003e {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jaxwong"},"content":"            try {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jaxwong"},"content":"                int index \u003d Parser.parseTaskIndex(command.getArguments());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jaxwong"},"content":"                taskList.unmark(index);","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jaxwong"},"content":"                Task task \u003d taskList.getTask(index);","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jaxwong"},"content":"                ui.showTaskUnmarked(task);","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jaxwong"},"content":"            } catch (GBException e) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jaxwong"},"content":"                if (e.getMessage().equals(\"Invalid task index\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jaxwong"},"content":"                    ui.showInvalidIndex(taskList.getSize());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jaxwong"},"content":"                } else {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jaxwong"},"content":"                    ui.showInvalidNumberFormat();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jaxwong"},"content":"        case DELETE -\u003e {","lastModifiedDate":"2025-08-20T11:31:22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jaxwong"},"content":"            try {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jaxwong"},"content":"                int index \u003d Parser.parseTaskIndex(command.getArguments());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jaxwong"},"content":"                Task deletedTask \u003d taskList.delete(index);","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jaxwong"},"content":"                ui.showTaskDeleted(deletedTask, taskList.getSize());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jaxwong"},"content":"            } catch (GBException e) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jaxwong"},"content":"                if (e.getMessage().equals(\"Invalid task index\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jaxwong"},"content":"                    ui.showInvalidIndex(taskList.getSize());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jaxwong"},"content":"                } else {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jaxwong"},"content":"                    ui.showInvalidNumberFormat();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-19T09:56:29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jaxwong"},"content":"        case FIND_DATE -\u003e {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jaxwong"},"content":"            try {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jaxwong"},"content":"                LocalDate targetDate \u003d Parser.parseDate(command.getArguments());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jaxwong"},"content":"                ui.showTasksOnDate(taskList.findTasksByDate(targetDate), targetDate);","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jaxwong"},"content":"            } catch (GBException e) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jaxwong"},"content":"                if (e.getMessage().startsWith(\"Invalid date format\")) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jaxwong"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jaxwong"},"content":"                    ui.showFindDateFormat();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jaxwong"},"content":"                } else if (e.getMessage().startsWith(\"Date cannot be empty\")){","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jaxwong"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jaxwong"},"content":"                    ui.showFindDateFormat();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jaxwong"},"content":"        case BYE -\u003e {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jaxwong"},"content":"            ui.showGoodbye();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-20T11:24:33","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jaxwong"},"content":"     * Saves the current task list to persistent storage.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jaxwong"},"content":"     * Displays an error message if saving fails.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jaxwong"},"content":"    private void saveTasksToStorage() {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jaxwong"},"content":"        try {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jaxwong"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jaxwong"},"content":"        } catch (GBException e) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jaxwong"},"content":"            ui.showError(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-20T11:24:33","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T09:56:29","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T09:56:29","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jaxwong"},"content":"     * Main entry point for the application.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jaxwong"},"content":"     * Creates and runs a new GbTheFatBoy instance with default data file path.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jaxwong"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jaxwong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jaxwong"},"content":"        new GbTheFatBoy(\"./data/Gbot.txt\").run();","lastModifiedDate":"2025-08-25T14:20:07","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T09:56:29","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T09:56:29","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-19T09:38:28","isFullCredit":false}],"authorContributionMap":{"jaxwong":221}},{"path":"src/main/java/GbTheFatBoy/exception/GBException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.exception;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":" * Custom exception class for GbTheFatBoy application-specific errors.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":" * Extends Exception to provide meaningful error messages for application failures.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"public class GBException extends Exception {","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"     * Creates a new GBException with the specified error message.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"     * @param message The error message describing what went wrong.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"    public GBException(String message) {","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"        super(message);","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false}],"authorContributionMap":{"jaxwong":17}},{"path":"src/main/java/GbTheFatBoy/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.parser;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"import java.util.List;","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":" * Utility class for parsing date and time strings in various formats.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":" * Supports multiple date and time formats and can parse combined date-time strings.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-08-24T16:30:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"    // List of supported date formats","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATS \u003d List.of(","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),      // 2019-12-02","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),      // 02/12/2019","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\"),        // 2/12/2019","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"),      // 12/02/2019","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"M/d/yyyy\"),        // 12/2/2019","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),      // 2019/12/02","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d\")         // 2019/12/2","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"    );","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"    // List of supported time formats","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"    private static final List\u003cDateTimeFormatter\u003e TIME_FORMATS \u003d List.of(","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"HHmm\"),           // 1800","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"HH:mm\"),          // 18:00","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"h:mma\"),          // 6:00PM","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"h:mm a\"),         // 6:00 PM","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"ha\"),             // 6PM","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"            DateTimeFormatter.ofPattern(\"h a\")             // 6 PM","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"    );","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"     * Parses a date-time string that may contain date only, date and time, or a full date-time format.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"     * If only date is provided, defaults time to 23:59.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"     * @param dateTimeStr The date-time string to parse.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"     * @throws DateTimeParseException If the string cannot be parsed in any supported format.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) throws DateTimeParseException {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"        dateTimeStr \u003d dateTimeStr.trim();","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"        String[] parts \u003d dateTimeStr.split(\"\\\\s+\");","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"            LocalDate date \u003d parseDate(parts[0]);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"            return date.atTime(23, 59);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaxwong"},"content":"        } else if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaxwong"},"content":"            LocalDate date \u003d parseDate(parts[0]);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaxwong"},"content":"            LocalTime time \u003d parseTime(parts[1]);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaxwong"},"content":"            return date.atTime(time);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jaxwong"},"content":"        } else {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jaxwong"},"content":"            return parseAsDateTime(dateTimeStr);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jaxwong"},"content":"    private static LocalDate parseDateHelper(String dateStr) throws DateTimeParseException {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jaxwong"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATS) {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jaxwong"},"content":"            try {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jaxwong"},"content":"                return LocalDate.parse(dateStr, formatter);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jaxwong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jaxwong"},"content":"                // Try next format","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jaxwong"},"content":"        throw new DateTimeParseException(\"Unable to parse date: \" + dateStr, dateStr, 0);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jaxwong"},"content":"    private static LocalTime parseTime(String timeStr) throws DateTimeParseException {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jaxwong"},"content":"        // Convert common variations","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jaxwong"},"content":"        timeStr \u003d timeStr.toUpperCase().replace(\"PM\", \" PM\").replace(\"AM\", \" AM\");","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jaxwong"},"content":"        for (DateTimeFormatter formatter : TIME_FORMATS) {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jaxwong"},"content":"            try {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jaxwong"},"content":"                return LocalTime.parse(timeStr, formatter);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jaxwong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jaxwong"},"content":"                // Try next format","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jaxwong"},"content":"        throw new DateTimeParseException(\"Unable to parse time: \" + timeStr, timeStr, 0);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jaxwong"},"content":"    private static LocalDateTime parseAsDateTime(String dateTimeStr) throws DateTimeParseException {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jaxwong"},"content":"        try {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jaxwong"},"content":"            return LocalDateTime.parse(dateTimeStr);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jaxwong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jaxwong"},"content":"            throw new DateTimeParseException(\"Unable to parse date-time: \" + dateTimeStr, dateTimeStr, 0);","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jaxwong"},"content":"     * Parses a date string in one of the supported date formats.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jaxwong"},"content":"     * @param dateStr The date string to parse.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jaxwong"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jaxwong"},"content":"     * @throws DateTimeParseException If the string cannot be parsed in any supported date format.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jaxwong"},"content":"    public static LocalDate parseDate(String dateStr) throws DateTimeParseException {","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jaxwong"},"content":"        return parseDateHelper(dateStr.trim());","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:30:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-24T16:30:18","isFullCredit":false}],"authorContributionMap":{"jaxwong":112}},{"path":"src/main/java/GbTheFatBoy/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.parser;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Deadline;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Event;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Todo;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.command.Command;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.command.CommandType;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.exception.GBException;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":" * Utility class for parsing user input into various task objects and commands.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":" * Provides static methods to parse different types of tasks and extract command information.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"public class Parser {","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"     * Parses a full command string into a Command object.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"     * Extracts the command type and arguments from the input string.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"     * @param fullCommand The complete command string to parse.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"     * @return A Command object containing the parsed command type and arguments.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If the command is empty or invalid.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"    public static Command parse(String fullCommand) throws GBException {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"        if (fullCommand.trim().isEmpty()) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Invalid command: empty command\");","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"        String[] parts \u003d fullCommand.trim().split(\" \", 2);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"        try {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"            CommandType command \u003d CommandType.fromString(parts[0]);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"            String arguments \u003d parts.length \u003e 1 ? parts[1] : \" \";","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"            return new Command(command, arguments);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) { // arguments","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Task description cannot be empty\");","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"     * Parses arguments into a Todo task.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"     * @param arguments The task description for the Todo.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"     * @return A Todo object with the specified description.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If the description is empty.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"    public static Todo parseTodo(String arguments) throws GBException {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Invalid Todo: description cannot be empty!\");","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"        return new Todo(arguments);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaxwong"},"content":"     * Parses arguments into a Deadline task.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaxwong"},"content":"     * Expects format: \"description /by date/time\".","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jaxwong"},"content":"     * @param arguments The arguments containing description and deadline information.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jaxwong"},"content":"     * @return A Deadline object with the parsed description and deadline.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If the format is invalid, description/deadline is empty, or date format is invalid.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jaxwong"},"content":"    public static Deadline parseDeadline(String arguments) throws GBException {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jaxwong"},"content":"        if (!arguments.contains(\" /by \")) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Invalid deadline format\");","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jaxwong"},"content":"        String[] deadlineParts \u003d arguments.split(\" /by \", 2);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jaxwong"},"content":"        String desc \u003d deadlineParts[0];","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jaxwong"},"content":"        String deadlineStr \u003d deadlineParts[1];","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jaxwong"},"content":"        if (desc.isEmpty() || deadlineStr.isEmpty()) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Task description and deadline cannot be empty\");","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jaxwong"},"content":"        try {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jaxwong"},"content":"            LocalDateTime deadlineDateTime \u003d","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jaxwong"},"content":"                    DateTimeParser.parseDateTime(deadlineStr.trim());","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jaxwong"},"content":"            return new Deadline(desc.trim(), deadlineDateTime);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jaxwong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Invalid date/time format \" + deadlineParts[1]);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jaxwong"},"content":"     * Parses arguments into an Event task.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jaxwong"},"content":"     * Expects format: \"description /from start_date/time /to end_date/time\".","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jaxwong"},"content":"     * @param arguments The arguments containing description, start date/time, and end date/time.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jaxwong"},"content":"     * @return An Event object with the parsed description and date/time range.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If the format is invalid, any field is empty, dates are invalid, or end date is before start date.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jaxwong"},"content":"    public static Event parseEvent(String arguments) throws GBException {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jaxwong"},"content":"        if (!arguments.contains(\" /from \" ) || !arguments.contains(\" /to \")) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Invalid event format\");","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jaxwong"},"content":"        String[] eventParts \u003d arguments.split(\" /from \", 2);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jaxwong"},"content":"        String desc \u003d eventParts[0];","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jaxwong"},"content":"        String[] eventDates \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jaxwong"},"content":"        String startDateStr \u003d eventDates[0].trim();","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jaxwong"},"content":"        String endDateStr \u003d eventDates[1].trim();","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jaxwong"},"content":"        if (desc.isEmpty() || startDateStr.isEmpty() || endDateStr.isEmpty()) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Description/startDate/endDate cannot be empty!\");","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jaxwong"},"content":"        try {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jaxwong"},"content":"            LocalDateTime startDateTime \u003d DateTimeParser.parseDateTime(startDateStr);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jaxwong"},"content":"            LocalDateTime endDateTime \u003d DateTimeParser.parseDateTime(endDateStr);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jaxwong"},"content":"            if (endDateTime.isBefore(startDateTime)) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jaxwong"},"content":"                throw new GBException(\"End date cannot be before start date!\");","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jaxwong"},"content":"            return new Event(desc, startDateTime, endDateTime);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jaxwong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Invalid date/time format in event dates\");","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jaxwong"},"content":"     * Parses a string argument into a task index integer.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jaxwong"},"content":"     * @param arguments The string containing the task index.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jaxwong"},"content":"     * @return The parsed integer index.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If the argument is empty or not a valid integer.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jaxwong"},"content":"    public static int parseTaskIndex(String arguments) throws GBException {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jaxwong"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Index cannot be empty!\");","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jaxwong"},"content":"        try {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jaxwong"},"content":"            return Integer.parseInt(arguments.trim());","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jaxwong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Invalid index: index must be a whole number!\");","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jaxwong"},"content":"     * Parses a string argument into a LocalDate object.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jaxwong"},"content":"     * @param arguments The string containing the date to parse.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jaxwong"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If the argument is empty or has an invalid date format.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jaxwong"},"content":"    public static LocalDate parseDate(String arguments) throws GBException {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jaxwong"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Date cannot be empty\");","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jaxwong"},"content":"        try {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jaxwong"},"content":"            return DateTimeParser.parseDate(arguments.trim());","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jaxwong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Invalid date format: \" + arguments);","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:17:42","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false}],"authorContributionMap":{"jaxwong":160}},{"path":"src/main/java/GbTheFatBoy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.storage;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Task;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Todo;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Deadline;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Event;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.exception.GBException;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"import java.io.*;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":" * Handles file-based storage and retrieval of tasks.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":" * Manages reading from and writing to a persistent storage file.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"public class Storage {","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"     * Creates a new Storage instance with the specified file path.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"     * Creates the directory structure if it doesn\u0027t exist.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"     * @param filePath The file path where tasks will be stored.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"        createDirectoryIfNotExists();","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"    private void createDirectoryIfNotExists() {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"        try {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"            Path parentDir \u003d path.getParent();","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"            if (parentDir !\u003d null \u0026\u0026 !Files.exists(parentDir)) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"                Files.createDirectories(parentDir);","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"            System.err.println(\"Error creating directory: \" + e.getMessage());","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"     * If the file doesn\u0027t exist, returns an empty task list.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"     * @return An ArrayList containing all loaded tasks.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If there\u0027s an error reading from the file.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaxwong"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws GBException {","lastModifiedDate":"2025-08-25T14:19:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaxwong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaxwong"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jaxwong"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jaxwong"},"content":"            System.out.println(\"TodoList file not found! Starting with empty task list\");","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jaxwong"},"content":"            return tasks;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jaxwong"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))){","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jaxwong"},"content":"            String line;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jaxwong"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jaxwong"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jaxwong"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jaxwong"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jaxwong"},"content":"            System.out.println(\"Loaded \" + tasks.size() + \" tasks from storage\");","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jaxwong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2025-08-25T14:19:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jaxwong"},"content":"        return tasks;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jaxwong"},"content":"     * Saves the provided list of tasks to the storage file.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jaxwong"},"content":"     * Overwrites the existing file content.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jaxwong"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If there\u0027s an error writing to the file.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jaxwong"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws GBException {","lastModifiedDate":"2025-08-25T14:19:43","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jaxwong"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))){","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jaxwong"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jaxwong"},"content":"                writer.write(formatTask(task));","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jaxwong"},"content":"                writer.newLine();","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jaxwong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2025-08-25T14:19:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jaxwong"},"content":"    private String formatTask(Task task) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jaxwong"},"content":"        String isDone \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jaxwong"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jaxwong"},"content":"            return String.format(\"T | %s | %s\", isDone, task.getDescription());","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jaxwong"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jaxwong"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jaxwong"},"content":"            return String.format(\"D | %s | %s | %s\", isDone, deadline.getDescription(),","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jaxwong"},"content":"                    deadline.getDeadlineForStorage());","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jaxwong"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jaxwong"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jaxwong"},"content":"            return String.format(\"E | %s | %s | %s | %s\", isDone,","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jaxwong"},"content":"                    event.getDescription(), event.getStartDateTimeForStorage(),","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jaxwong"},"content":"                    event.getEndDateTimeForStorage());","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jaxwong"},"content":"        return \"\";","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jaxwong"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jaxwong"},"content":"        try {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jaxwong"},"content":"            if (line.isEmpty()) return null;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jaxwong"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jaxwong"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jaxwong"},"content":"                System.err.println(\"Corrupted data line: \" + line);","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jaxwong"},"content":"                return null;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jaxwong"},"content":"            String type \u003d parts[0].trim();","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jaxwong"},"content":"            boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jaxwong"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jaxwong"},"content":"            Task task \u003d null;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jaxwong"},"content":"            switch(type) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jaxwong"},"content":"            case \"T\":","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jaxwong"},"content":"                if (parts.length \u003d\u003d 3) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jaxwong"},"content":"                    task \u003d new Todo(description, isDone);","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jaxwong"},"content":"                break;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jaxwong"},"content":"            case \"D\":","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jaxwong"},"content":"                if (parts.length \u003d\u003d 4) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jaxwong"},"content":"                    String dateTimeStr \u003d parts[3].trim();","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jaxwong"},"content":"                    try {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jaxwong"},"content":"                        LocalDateTime deadline \u003d LocalDateTime.parse(dateTimeStr,","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jaxwong"},"content":"                                DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jaxwong"},"content":"                        task \u003d new Deadline(description, isDone, deadline);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jaxwong"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jaxwong"},"content":"                        System.err.println(\"Error parsing deadline date: \" + dateTimeStr);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jaxwong"},"content":"                        return null;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jaxwong"},"content":"                    }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jaxwong"},"content":"                break;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jaxwong"},"content":"            case \"E\":","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jaxwong"},"content":"                if (parts.length \u003d\u003d 5) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jaxwong"},"content":"                    String startDateStr \u003d parts[3].trim();","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jaxwong"},"content":"                    String endDateStr \u003d parts[4].trim();","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jaxwong"},"content":"                    try {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jaxwong"},"content":"                        LocalDateTime startDateTime \u003d LocalDateTime.parse(startDateStr, DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jaxwong"},"content":"                        LocalDateTime endDateTime \u003d LocalDateTime.parse(endDateStr, DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jaxwong"},"content":"                        task \u003d new Event(description, isDone, startDateTime,","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jaxwong"},"content":"                                endDateTime);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jaxwong"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jaxwong"},"content":"                        System.err.println(\"Error parsing event dates: \" + startDateStr + \", \" + endDateStr);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jaxwong"},"content":"                        return null;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jaxwong"},"content":"                    }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jaxwong"},"content":"                break;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jaxwong"},"content":"            default:","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jaxwong"},"content":"                System.err.println(\"Unknown task type: \" + type);","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jaxwong"},"content":"                return null;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jaxwong"},"content":"            return task;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jaxwong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jaxwong"},"content":"            System.err.println(\"Error parsing task: \" + line + \" - \" + e.getMessage());","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jaxwong"},"content":"            return null;","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false}],"authorContributionMap":{"jaxwong":179}},{"path":"src/main/java/GbTheFatBoy/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.storage;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Task;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Deadline;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Event;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.exception.GBException;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":" * Manages a collection of tasks with operations for adding, retrieving, marking, and deleting tasks.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":" * Provides functionality to search for tasks by date.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"public class TaskList {","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"     * Creates an empty TaskList.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:12:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"     * Creates a TaskList with the provided list of tasks.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If the task description is empty.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"    public void add(Task task) throws GBException {","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"        if (task.getDescription().isEmpty()) {","lastModifiedDate":"2025-08-20T11:24:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Invalid description: task description cannot be \" +","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"                    \"empty!\");","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-20T11:24:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"        this.taskList.add(task);","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"        return this.taskList;","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaxwong"},"content":"        return this.taskList.size();","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaxwong"},"content":"     * Retrieves a task at the specified index (1-based indexing).","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jaxwong"},"content":"     * @param index The 1-based index of the task to retrieve.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jaxwong"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If the index is out of bounds.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jaxwong"},"content":"    public Task getTask(int index) throws GBException {","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jaxwong"},"content":"        try {","lastModifiedDate":"2025-08-20T11:24:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jaxwong"},"content":"            return this.taskList.get(index - 1);","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jaxwong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-20T11:24:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(e.getMessage());","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-20T11:24:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jaxwong"},"content":"     * Marks a task as done at the specified index (1-based indexing).","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jaxwong"},"content":"     * @param index The 1-based index of the task to mark.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If the index is out of bounds.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jaxwong"},"content":"    public void mark(int index) throws GBException {","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jaxwong"},"content":"        getTask(index).mark();","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-20T11:24:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-20T11:24:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jaxwong"},"content":"     * Unmarks a task (sets as not done) at the specified index (1-based indexing).","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jaxwong"},"content":"     * @param index The 1-based index of the task to unmark.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If the index is out of bounds.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jaxwong"},"content":"    public void unmark(int index) throws GBException {","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jaxwong"},"content":"        getTask(index).unmark();","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jaxwong"},"content":"     * Deletes a task at the specified index (1-based indexing).","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jaxwong"},"content":"     * @param index The 1-based index of the task to delete.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jaxwong"},"content":"     * @return The deleted task.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jaxwong"},"content":"     * @throws GBException If the index is invalid or out of bounds.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jaxwong"},"content":"    public Task delete(int index) throws GBException {","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jaxwong"},"content":"        if (index \u003c 1 || index \u003e this.taskList.size()) {","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jaxwong"},"content":"            throw new GBException(\"Invalid task index\");","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-20T11:31:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jaxwong"},"content":"        return this.taskList.remove(index - 1);","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-20T11:31:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-20T11:31:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jaxwong"},"content":"     * Finds and returns all tasks that occur on the specified date.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jaxwong"},"content":"     * For Deadline tasks, matches if the deadline date equals the target date.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jaxwong"},"content":"     * For Event tasks, matches if the target date falls within the event\u0027s date range.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jaxwong"},"content":"     * @param targetDate The date to search for tasks.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jaxwong"},"content":"     * @return A list of tasks that occur on the specified date.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jaxwong"},"content":"    public ArrayList\u003cTask\u003e findTasksByDate(LocalDate targetDate) {","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jaxwong"},"content":"        ArrayList\u003cTask\u003e tasksOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jaxwong"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jaxwong"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jaxwong"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jaxwong"},"content":"                if (deadline.getDeadline().toLocalDate().equals(targetDate)) {","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jaxwong"},"content":"                    tasksOnDate.add(deadline);","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jaxwong"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jaxwong"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jaxwong"},"content":"                LocalDate eventStartDate \u003d event.getStartDateTime().toLocalDate();","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jaxwong"},"content":"                LocalDate eventEndDate \u003d event.getEndDateTime().toLocalDate();","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jaxwong"},"content":"                if (targetDate.equals(eventStartDate)","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jaxwong"},"content":"                        || targetDate.equals(eventEndDate)","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jaxwong"},"content":"                        || targetDate.isAfter(eventStartDate) \u0026\u0026 targetDate.isBefore(eventEndDate)) {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jaxwong"},"content":"                    tasksOnDate.add(event);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jaxwong"},"content":"                }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jaxwong"},"content":"        if (tasksOnDate.isEmpty()) {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jaxwong"},"content":"            System.out.println(\"No tasks found on this date\");","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jaxwong"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jaxwong"},"content":"        } else {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jaxwong"},"content":"            return tasksOnDate;","lastModifiedDate":"2025-08-25T14:18:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false}],"authorContributionMap":{"jaxwong":147}},{"path":"src/main/java/GbTheFatBoy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.task;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":" * Extends Task to include deadline date and time functionality.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"            \"MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"     * Creates a new Deadline task with the specified description and deadline.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"     * @param description The task description.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"     * @param deadline The deadline date and time.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"        super(description);","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"     * Creates a new Deadline task with description, completion status, and deadline.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"     * @param desc The task description.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"     * @param deadline The deadline date and time.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"    public Deadline(String desc, boolean isDone, LocalDateTime deadline) {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"        super(desc, isDone);","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"        return this.deadline;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"    public String getDeadlineString() {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"        return this.deadline.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"    public String getDeadlineForStorage() {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"        return this.deadline.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"    @Override","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), getDeadlineString());","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false}],"authorContributionMap":{"jaxwong":55}},{"path":"src/main/java/GbTheFatBoy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.task;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":" * Represents a task that occurs over a specific time period.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":" * Extends Task to include start and end date/time functionality.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"            \"MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"     * Creates a new Event task with description and date/time range.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"     * @param description The event description.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"     * @param startDate The start date and time of the event.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"     * @param endDate The end date and time of the event.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"    public Event(String description, LocalDateTime startDate,","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"                 LocalDateTime endDate) {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"        super(description);","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"        this.startDateTime \u003d startDate;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"        this.endDateTime \u003d endDate;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"     * Creates a new Event task with description, completion status, and date/time range.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"     * @param desc The event description.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"     * @param startDate The start date and time of the event.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"     * @param endDate The end date and time of the event.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"    public Event(String desc, boolean isDone, LocalDateTime startDate,","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"                 LocalDateTime endDate) {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"        super(desc, isDone);","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"        this.startDateTime \u003d startDate;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"        this.endDateTime \u003d endDate;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"        return this.startDateTime;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"    public String getStartDateTimeString() {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"        return this.startDateTime.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"        return this.endDateTime;","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaxwong"},"content":"    public String getEndDateTimeString() {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaxwong"},"content":"        return this.endDateTime.format(OUTPUT_FORMAT);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jaxwong"},"content":"    public String getStartDateTimeForStorage() {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jaxwong"},"content":"        return this.startDateTime.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jaxwong"},"content":"    public String getEndDateTimeForStorage() {","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jaxwong"},"content":"        return this.endDateTime.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jaxwong"},"content":"    @Override","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jaxwong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jaxwong"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jaxwong"},"content":"                getStartDateTimeString(), getEndDateTimeString());","lastModifiedDate":"2025-08-24T16:32:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false}],"authorContributionMap":{"jaxwong":76}},{"path":"src/main/java/GbTheFatBoy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.task;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":" * Represents a basic task with a description and completion status.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":" * Serves as the base class for specific task types.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"public class Task {","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"    private final String description;","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"     * Creates a new Task with the specified description.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"     * @param description The task description.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"     * Creates a new Task with description and completion status.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"     * @param desc The task description.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"    public Task(String desc, boolean isDone) {","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"        this.description \u003d desc;","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-26T18:02:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"    public void mark() {","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"     * Unmarks the task (sets as not completed).","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"    public void unmark() {","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"        return this.description;","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"    @Override","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaxwong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaxwong"},"content":"        String check \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaxwong"},"content":"        return String.format(\"[%s] %s\", check, this.description);","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-19T15:07:34","isFullCredit":false}],"authorContributionMap":{"jaxwong":60}},{"path":"src/main/java/GbTheFatBoy/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.task;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":" * Represents a simple todo task without any date/time constraints.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":" * Extends Task to provide todo-specific formatting.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"     * Creates a new Todo task with the specified description.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"     * @param description The task description.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"        super(description);","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"     * Creates a new Todo task with description and completion status.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"     * @param desc The task description.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"    public Todo(String desc, boolean isDone) {","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"        super(desc, isDone);","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-23T17:10:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"    @Override","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-19T16:54:36","isFullCredit":false}],"authorContributionMap":{"jaxwong":32}},{"path":"src/main/java/GbTheFatBoy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.ui;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Task;","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-26T19:46:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"/**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":" * Handles all user interface interactions including input/output operations.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":" * Manages display of messages, prompts, and formatted output to the console.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":" */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"public class Ui {","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"    private static final String NAME \u003d \"GbTheFatBoy\";","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"    private static final String MESSAGE \u003d \"I\u0027m smelly meow meow!\";","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"    private static final String LINE \u003d \"_\".repeat(60);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"     * Creates a new Ui instance and initializes the scanner for user input.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"    public Ui() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"     * Reads a command line from user input.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"     * @return The command string entered by the user.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Hello! I\u0027m \" + NAME);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"        System.out.println(MESSAGE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"        System.out.println();","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"     * Displays the goodbye message when the application exits.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jaxwong"},"content":"     * Displays a separator line for formatting output.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jaxwong"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jaxwong"},"content":"     * Displays an error message when tasks cannot be loaded from storage.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jaxwong"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Error loading tasks from file. Starting with empty task list.\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jaxwong"},"content":"     * Displays a formatted error message.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jaxwong"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jaxwong"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jaxwong"},"content":"     * Displays confirmation that a task has been added.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jaxwong"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jaxwong"},"content":"     * @param totalTasks The total number of tasks after adding.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jaxwong"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jaxwong"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", totalTasks));","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jaxwong"},"content":"        System.out.println();","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jaxwong"},"content":"     * Displays all tasks in the task list with numbered formatting.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jaxwong"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jaxwong"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jaxwong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jaxwong"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jaxwong"},"content":"     * Displays confirmation that a task has been marked as done.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jaxwong"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jaxwong"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jaxwong"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jaxwong"},"content":"     * Displays confirmation that a task has been unmarked (set as not done).","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jaxwong"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jaxwong"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jaxwong"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jaxwong"},"content":"     * Displays confirmation that a task has been deleted.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jaxwong"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jaxwong"},"content":"     * @param totalTasks The total number of tasks after deletion.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jaxwong"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jaxwong"},"content":"        System.out.println(task);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jaxwong"},"content":"     * Displays all tasks occurring on a specific date.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jaxwong"},"content":"     * @param tasks The list of tasks occurring on the specified date.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jaxwong"},"content":"     * @param date The date to display tasks for.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jaxwong"},"content":"    public void showTasksOnDate(ArrayList\u003cTask\u003e tasks, LocalDate date) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Tasks on \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jaxwong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jaxwong"},"content":"            System.out.println(\"No tasks found on this date.\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jaxwong"},"content":"        } else {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jaxwong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jaxwong"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jaxwong"},"content":"            }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jaxwong"},"content":"     * Displays an error message for invalid task indices.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jaxwong"},"content":"     * @param totalTasks The total number of tasks in the list.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jaxwong"},"content":"    public void showInvalidIndex(int totalTasks) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Invalid index!\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jaxwong"},"content":"        if (totalTasks \u003d\u003d 0) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jaxwong"},"content":"            System.out.println(\"There are no tasks in your list!\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jaxwong"},"content":"        } else {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jaxwong"},"content":"            System.out.println(\"Please enter a number from 1 to \" + totalTasks);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jaxwong"},"content":"        }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jaxwong"},"content":"     * Displays an error message and help text for empty task descriptions.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jaxwong"},"content":"    public void showEmptyDescription() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Task description cannot be empty!\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Input todo in format: todo \u003ctask\u003e\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Example: \");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"todo borrow book\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jaxwong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jaxwong"},"content":"        System.out.println();","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jaxwong"},"content":"     * Displays an error message for invalid commands and lists valid commands.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jaxwong"},"content":"    public void showInvalidCommand() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Invalid command\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Valid commands: todo, deadline, event, list, mark, unmark, delete, find-date, bye\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jaxwong"},"content":"     * Displays an error message for invalid number format in task indices.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jaxwong"},"content":"    public void showInvalidNumberFormat() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Invalid number format for task index.\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Enter a whole number please\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jaxwong"},"content":"     * Displays help text and examples for deadline command format.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jaxwong"},"content":"    public void showDeadlineFormat() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Input deadline in below format:\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"deadline \u003ctask\u003e /by \u003cdate\u003e [time]\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Examples:\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"deadline return book /by 2019-12-02\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"deadline submit report /by 2/12/2019 1800\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"deadline meeting /by 15/10/2019 2:30PM\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"jaxwong"},"content":"     * Displays help text and examples for event command format.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"jaxwong"},"content":"    public void showEventFormat() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Input event in the below format:\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"event \u003cevent name\u003e /from \u003cstart date-time\u003e /to \u003cend date-time\u003e\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Examples:\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"event project meeting /from 2019-10-15 1400 /to 2019-10-15 1600\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"event conference /from 15/10/2019 2:00PM /to 17/10/2019 5:00PM\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"jaxwong"},"content":"     * Displays an error message for invalid date/time format with supported formats.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"jaxwong"},"content":"     *","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"jaxwong"},"content":"     * @param invalidInput The invalid input that caused the error.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"jaxwong"},"content":"    public void showDateTimeFormatError(String invalidInput) {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Invalid date/time format: \" + invalidInput);","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Supported formats: yyyy-MM-dd, dd/MM/yyyy, MM/dd/yyyy\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Time formats: HHmm, HH:mm, h:mma, ha (optional)\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"jaxwong"},"content":"     * Displays help text for find-date command format.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"jaxwong"},"content":"    public void showFindDateFormat() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Supported formats: yyyy-MM-dd, dd/MM/yyyy, MM/dd/yyyy\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Example: find-date 2019-12-02\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"jaxwong"},"content":"     * Displays an error message when end time is before start time in events.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"jaxwong"},"content":"    public void showEndTimeBeforeStartTime() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"End date/time cannot be before start date/time!\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"jaxwong"},"content":"     * Displays an error message when task description or deadline is empty.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"jaxwong"},"content":"    public void showEmptyTaskDetails() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Task description and deadline cannot be empty!\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"jaxwong"},"content":"    /**","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"jaxwong"},"content":"     * Displays an error message when event description or dates are empty.","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"jaxwong"},"content":"     */","lastModifiedDate":"2025-08-28T13:17:59","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"jaxwong"},"content":"    public void showEmptyEventDetails() {","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"jaxwong"},"content":"        System.out.println(\"Event description and dates cannot be empty!\");","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-25T14:18:05","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-25T14:16:54","isFullCredit":false}],"authorContributionMap":{"jaxwong":280}},{"path":"src/test/java/GbTheFatBoy/storage/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.storage;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.exception.GBException;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Deadline;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Event;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Task;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"import GbTheFatBoy.task.Todo;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"    private Todo todo;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"    private Deadline deadline;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"    private Event event;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"    public void setup() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"        todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"        deadline \u003d new Deadline(\"Submit report\", LocalDateTime.of(2025, 8, 28, 23, 59));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"        event \u003d new Event(\"Team meeting\", LocalDateTime.of(2025, 8, 28, 10, 0),","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"                LocalDateTime.of(2025, 8, 28, 12, 0));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"    public void testAddAndGetTasks() throws GBException {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"        taskList.add(todo);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"        taskList.add(deadline);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"        taskList.add(event);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"        assertEquals(todo, taskList.getTask(1));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"        assertEquals(deadline, taskList.getTask(2));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"        assertEquals(event, taskList.getTask(3));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"    public void testAddEmptyDescriptionThrows() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"        Todo emptyTodo \u003d new Todo(\"\");","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"        GBException exception \u003d assertThrows(GBException.class, () -\u003e taskList.add(emptyTodo));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"        assertEquals(\"Invalid description: task description cannot be empty!\", exception.getMessage());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"    public void testGetTaskInvalidIndexThrows() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"        GBException exception \u003d assertThrows(GBException.class, () -\u003e taskList.getTask(1));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"        assertTrue(exception.getMessage().contains(\"Index\"));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaxwong"},"content":"    public void testMarkAndUnmark() throws GBException {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaxwong"},"content":"        taskList.add(todo);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jaxwong"},"content":"        taskList.mark(1);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jaxwong"},"content":"        assertTrue(todo.isDone());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jaxwong"},"content":"        taskList.unmark(1);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jaxwong"},"content":"        assertFalse(todo.isDone());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jaxwong"},"content":"    public void testDeleteTask() throws GBException {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jaxwong"},"content":"        taskList.add(todo);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jaxwong"},"content":"        taskList.add(deadline);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jaxwong"},"content":"        Task removed \u003d taskList.delete(1);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jaxwong"},"content":"        assertEquals(todo, removed);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jaxwong"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jaxwong"},"content":"        assertEquals(deadline, taskList.getTask(1));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jaxwong"},"content":"    public void testDeleteInvalidIndexThrows() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jaxwong"},"content":"        GBException exception \u003d assertThrows(GBException.class, () -\u003e taskList.delete(1));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jaxwong"},"content":"        assertEquals(\"Invalid task index\", exception.getMessage());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jaxwong"},"content":"    public void testFindTasksByDate() throws GBException {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jaxwong"},"content":"        taskList.add(todo);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jaxwong"},"content":"        taskList.add(deadline);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jaxwong"},"content":"        taskList.add(event);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jaxwong"},"content":"        LocalDate target \u003d LocalDate.of(2025, 8, 28);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jaxwong"},"content":"        ArrayList\u003cTask\u003e tasksOnDate \u003d taskList.findTasksByDate(target);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jaxwong"},"content":"        assertEquals(2, tasksOnDate.size());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jaxwong"},"content":"        assertTrue(tasksOnDate.contains(deadline));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jaxwong"},"content":"        assertTrue(tasksOnDate.contains(event));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jaxwong"},"content":"        assertFalse(tasksOnDate.contains(todo));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jaxwong"},"content":"    public void testFindTasksByDateNoTasks() throws GBException {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jaxwong"},"content":"        taskList.add(todo);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jaxwong"},"content":"        LocalDate target \u003d LocalDate.of(2025, 8, 28);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jaxwong"},"content":"        ArrayList\u003cTask\u003e tasksOnDate \u003d taskList.findTasksByDate(target);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jaxwong"},"content":"        assertTrue(tasksOnDate.isEmpty());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false}],"authorContributionMap":{"jaxwong":110}},{"path":"src/test/java/GbTheFatBoy/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.task;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"public class DeadlineTest {   // must be public","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"    public void testConstructorSetsDescriptionAndDeadline() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime dt \u003d LocalDateTime.of(2025, 8, 28, 15, 30);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", dt);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"        assertEquals(\"Submit report\", deadline.getDescription());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"        assertFalse(deadline.isDone());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"        assertEquals(dt, deadline.getDeadline());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"    public void testConstructorWithIsDone() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime dt \u003d LocalDateTime.of(2025, 8, 28, 15, 30);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", true, dt);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"        assertEquals(\"Submit report\", deadline.getDescription());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"        assertTrue(deadline.isDone());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"        assertEquals(dt, deadline.getDeadline());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"    public void testGetDeadlineString() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime dt \u003d LocalDateTime.of(2025, 8, 28, 15, 30);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", dt);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"        String expected \u003d dt.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\"));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"        assertEquals(expected, deadline.getDeadlineString());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"    public void testGetDeadlineForStorage() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime dt \u003d LocalDateTime.of(2025, 8, 28, 15, 30);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", dt);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"        String expected \u003d dt.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"        assertEquals(expected, deadline.getDeadlineForStorage());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"    public void testToStringNotDone() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime dt \u003d LocalDateTime.of(2025, 8, 28, 15, 30);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", dt);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaxwong"},"content":"        String expected \u003d String.format(\"[D][ ] Submit report (by: %s)\",","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaxwong"},"content":"                dt.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaxwong"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jaxwong"},"content":"    public void testToStringDone() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime dt \u003d LocalDateTime.of(2025, 8, 28, 15, 30);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jaxwong"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", true, dt);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jaxwong"},"content":"        String expected \u003d String.format(\"[D][X] Submit report (by: %s)\",","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jaxwong"},"content":"                dt.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jaxwong"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false}],"authorContributionMap":{"jaxwong":70}},{"path":"src/test/java/GbTheFatBoy/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.task;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"public class EventTest {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"    public void testConstructorSetsDescriptionAndDates() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 8, 28, 10, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 8, 28, 12, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"        Event event \u003d new Event(\"Team meeting\", start, end);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"        assertEquals(\"Team meeting\", event.getDescription());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"        assertFalse(event.isDone());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"        assertEquals(start, event.getStartDateTime());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"        assertEquals(end, event.getEndDateTime());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"    public void testConstructorWithIsDone() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 8, 28, 10, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 8, 28, 12, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"        Event event \u003d new Event(\"Team meeting\", true, start, end);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"        assertEquals(\"Team meeting\", event.getDescription());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"        assertTrue(event.isDone());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"        assertEquals(start, event.getStartDateTime());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"        assertEquals(end, event.getEndDateTime());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"    public void testGetStartAndEndDateTimeString() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 8, 28, 10, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 8, 28, 12, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"        Event event \u003d new Event(\"Team meeting\", start, end);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"        assertEquals(start.format(formatter), event.getStartDateTimeString());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jaxwong"},"content":"        assertEquals(end.format(formatter), event.getEndDateTimeString());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jaxwong"},"content":"    public void testGetStartAndEndDateTimeForStorage() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 8, 28, 10, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 8, 28, 12, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jaxwong"},"content":"        Event event \u003d new Event(\"Team meeting\", start, end);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jaxwong"},"content":"        assertEquals(start.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME), event.getStartDateTimeForStorage());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jaxwong"},"content":"        assertEquals(end.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME), event.getEndDateTimeForStorage());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jaxwong"},"content":"    public void testToStringNotDone() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 8, 28, 10, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 8, 28, 12, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jaxwong"},"content":"        Event event \u003d new Event(\"Team meeting\", start, end);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jaxwong"},"content":"        String expected \u003d String.format(\"[E][ ] Team meeting (from: %s to: %s)\",","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jaxwong"},"content":"                start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")),","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jaxwong"},"content":"                end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jaxwong"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jaxwong"},"content":"    public void testToStringDone() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 8, 28, 10, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jaxwong"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 8, 28, 12, 0);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jaxwong"},"content":"        Event event \u003d new Event(\"Team meeting\", true, start, end);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jaxwong"},"content":"        String expected \u003d String.format(\"[E][X] Team meeting (from: %s to: %s)\",","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jaxwong"},"content":"                start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")),","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jaxwong"},"content":"                end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")));","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jaxwong"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false}],"authorContributionMap":{"jaxwong":81}},{"path":"src/test/java/GbTheFatBoy/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"package GbTheFatBoy.task;","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jaxwong"},"content":"public class TodoTest {   // must be public","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jaxwong"},"content":"    public void testConstructorSetsDescription() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jaxwong"},"content":"        Todo todo \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jaxwong"},"content":"        assertEquals(\"Buy milk\", todo.getDescription());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jaxwong"},"content":"        assertFalse(todo.isDone()); // default should be false","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jaxwong"},"content":"    public void testConstructorWithIsDone() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"        Todo todo \u003d new Todo(\"Do homework\", true);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jaxwong"},"content":"        assertEquals(\"Do homework\", todo.getDescription());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jaxwong"},"content":"        assertTrue(todo.isDone());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jaxwong"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jaxwong"},"content":"        Todo todo \u003d new Todo(\"Walk the dog\");","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jaxwong"},"content":"        todo.mark();","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jaxwong"},"content":"        assertTrue(todo.isDone());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jaxwong"},"content":"    public void testToStringNotDone() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jaxwong"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jaxwong"},"content":"        // Should show \"[T][ ] Read book\" if Task.toString() follows \"[ ] description\"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jaxwong"},"content":"        assertEquals(\"[T][ ] Read book\", todo.toString());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jaxwong"},"content":"    @Test","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jaxwong"},"content":"    public void testToStringDone() {","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jaxwong"},"content":"        Todo todo \u003d new Todo(\"Read book\", true);","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jaxwong"},"content":"        // Should show \"[T][X] Read book\" if Task.toString() shows \"X\" for done","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jaxwong"},"content":"        assertEquals(\"[T][X] Read book\", todo.toString());","lastModifiedDate":"2025-08-28T12:37:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jaxwong"},"content":"    }","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jaxwong"},"content":"}","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jaxwong"},"content":"","lastModifiedDate":"2025-08-28T12:22:27","isFullCredit":false}],"authorContributionMap":{"jaxwong":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jaxwong"},"content":"todo borrow book","lastModifiedDate":"2025-08-19T17:11:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jaxwong"},"content":"list","lastModifiedDate":"2025-08-19T17:11:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jaxwong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-19T17:11:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jaxwong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-19T17:11:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jaxwong"},"content":"mark 1","lastModifiedDate":"2025-08-19T17:11:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jaxwong"},"content":"unmark 1","lastModifiedDate":"2025-08-19T17:11:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jaxwong"},"content":"bye","lastModifiedDate":"2025-08-19T17:11:02","isFullCredit":false}],"authorContributionMap":{"jaxwong":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jaxwong"},"content":"java -classpath ..\\bin GbTheFatBoy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-19T17:11:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":20,"jaxwong":1}}]
