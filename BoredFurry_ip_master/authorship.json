[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-03T19:55:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":"checkstyle {","lastModifiedDate":"2025-09-03T19:55:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":"    toolVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2025-09-03T19:55:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-09-03T19:55:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T19:55:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T19:55:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"    mainClass.set(\"src.main.java.ryuji\")","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"    archiveBaseName \u003d \"ryuji\"","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"BoredFurry":8,"-":39}},{"path":"src/main/java/ryuji/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.command;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.storage.Storage;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.Task;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.TaskList;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"import ryuji.ui.Ui;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" * Represents a command to add a new task to the task list.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"    /** The task to be added to the list. */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"    private final Task task;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"     * Constructs an {@code AddCommand} with the given command keyword and task.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"     * @param command the command keyword (e.g., \"todo\", \"deadline\", \"event\")","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"     * @param task    the task to be added","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"    public AddCommand(String command, Task task) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"        super(command);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"     * Executes the add command by adding the task to the list,","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"     * writing it to storage, and showing a confirmation message.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"     * @param tasks   the current {@code TaskList}","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"     * @param ui      the {@code Ui} used to display messages","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"     * @param storage the {@code Storage} responsible for saving task data","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"        tasks.addToList(task);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"        storage.writeToFile(task);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"        ui.showTaskAdded();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false}],"authorContributionMap":{"BoredFurry":41}},{"path":"src/main/java/ryuji/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.command;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.storage.Storage;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.TaskList;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.ui.Ui;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * Abstract base class for all commands in the Ryuji chatbot application.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" * Each command represents an action triggered by user input.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"    /** The command keyword string (e.g., \"todo\", \"mark\", \"bye\", \"find\"). */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"    private final String command;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a Command with the given command keyword.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"     * @param command the command keyword string","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"    public Command(String command) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"        this.command \u003d command;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"     * Returns the command keyword string.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"     * @return the command string","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"    public String getCommand() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"        return command;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"     * Indicates whether this command signals the application to exit.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"     * By default, this returns true if the command string equals \"bye\".","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"     * Subclasses may override this behavior if needed.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"     * @return true if this command is an exit command, false otherwise","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"        return this.getCommand().equals(\"bye\");","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BoredFurry"},"content":"     * Executes the command, performing its intended action.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BoredFurry"},"content":"     * Implementing subclasses must define this method.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BoredFurry"},"content":"     * @param tasks   the task list to be manipulated","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BoredFurry"},"content":"     * @param ui      the UI component for interaction with the user","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BoredFurry"},"content":"     * @param storage the storage component for persistent data management","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BoredFurry"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BoredFurry"},"content":"     * Returns the string representation of this command.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BoredFurry"},"content":"     * @return the command string","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BoredFurry"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BoredFurry"},"content":"        return command;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false}],"authorContributionMap":{"BoredFurry":64}},{"path":"src/main/java/ryuji/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.command;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.storage.Storage;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.TaskList;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.ui.Ui;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"    /** The 1-based position of the task to be deleted. */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"    private final int position;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a {@code DeleteCommand} with the specified command and task position.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"     * @param command  the command keyword (typically \"delete\")","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"     * @param position the position of the task to delete (1-based index)","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"    public DeleteCommand(String command, int position) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"        super(command);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"        this.position \u003d position;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"     * Executes the delete command by removing the specified task from the task list","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"     * and updating the storage file accordingly.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"     * @param tasks   the current {@code TaskList}","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"     * @param ui      the {@code Ui} used for user interaction","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"     * @param storage the {@code Storage} responsible for saving task data","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"        tasks.deleteFromList(this.position);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"        try {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"            storage.updateFile(this.position);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"            // Consider logging or showing the error instead of silently ignoring","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"            System.err.println(\"Error updating storage file: \" + e.getMessage());","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false}],"authorContributionMap":{"BoredFurry":44}},{"path":"src/main/java/ryuji/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.command;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.storage.Storage;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.TaskList;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.ui.Ui;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * Represents a command that exits the application.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" * When executed, this command displays a farewell message to the user.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"     * Constructs an {@code ExitCommand} with the given command keyword.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"     * @param command the command keyword (typically \"bye\")","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"        super(command);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"     * Executes the exit command by showing a farewell message to the user.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"     * No changes are made to the task list or storage.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"     * @param tasks   the current task list (not used)","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"     * @param ui      the UI used to display the farewell message","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"     * @param storage the storage handler (not used)","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"        ui.showFarewell();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false}],"authorContributionMap":{"BoredFurry":34}},{"path":"src/main/java/ryuji/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.command;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.storage.Storage;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.TaskList;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.ui.Ui;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * Represents a command to search for tasks that contain a given keyword.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" * The {@code FindCommand} filters the list of tasks based on a search term","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":" * and displays the matching tasks to the user.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"     * The term to search for within the task descriptions.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"     * This term is used to filter the task list for matches.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"    private final String searchTerm;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a {@code FindCommand} with the specified command keyword and search term.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"     * @param command    The command keyword (e.g., \"find\").","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"     * @param searchTerm The term to search for within the task descriptions.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"    public FindCommand(String command, String searchTerm) {","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"        super(command);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"     * Executes the find command by filtering the tasks that contain the search term","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"     * and displaying them through the UI.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"     * @param ui      The UI instance used to display messages to the user.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"     * @param storage The storage instance used for saving/loading tasks (not used here).","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"        TaskList filteredTasks \u003d tasks.find(searchTerm);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"        ui.displayTaskList(filteredTasks);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false}],"authorContributionMap":{"BoredFurry":44}},{"path":"src/main/java/ryuji/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.command;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.storage.Storage;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.TaskList;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.ui.Ui;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * Represents a command to display the full list of tasks to the user.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a {@code ListCommand} with the specified command keyword.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"     * @param command the command keyword (typically \"list\")","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"        super(command);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"     * Executes the list command by displaying all tasks in the current {@code TaskList}.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"     * @param tasks   the current task list","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"     * @param ui      the UI used to interact with the user","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"     * @param storage the storage handler (not used in this command)","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"        ui.displayTaskList(tasks);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false}],"authorContributionMap":{"BoredFurry":32}},{"path":"src/main/java/ryuji/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.command;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.storage.Storage;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.TaskList;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.ui.Ui;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" * This updates the task\u0027s status and provides visual confirmation to the user.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"    /** The 1-based position of the task to be marked as done. */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"    private final int position;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a {@code MarkCommand} with the specified command string and task position.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"     * @param command  the command keyword (typically \"mark\")","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"     * @param position the position of the task to mark in the task list (1-based index)","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"    public MarkCommand(String command, int position) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"        super(command);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"        this.position \u003d position;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"     * Executes the mark command by updating the task status,","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"     * and displays a confirmation message to the user.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"     * @param tasks   the current {@code TaskList}","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"     * @param ui      the {@code Ui} used for displaying messages","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"     * @param storage the {@code Storage} responsible for data persistence","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"        tasks.mark(position);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"        ui.showTaskMarked();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false}],"authorContributionMap":{"BoredFurry":40}},{"path":"src/main/java/ryuji/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.command;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.storage.Storage;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.TaskList;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.ui.Ui;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * Represents a command to unmark a task (i.e., mark it as not done).","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" * This command modifies the task\u0027s status and provides feedback via the UI.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"    /** The 1-based position of the task to be unmarked. */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"    private final int position;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"     * Constructs an {@code UnmarkCommand} with the given command string and task position.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"     * @param command  the command keyword (typically \"unmark\")","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"     * @param position the position of the task to unmark in the task list (1-based index)","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"    public UnmarkCommand(String command, int position) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"        super(command);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"        this.position \u003d position;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"     * Executes the unmark command by updating the task list,","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"     * and displays a confirmation message to the user.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"     * @param tasks   the current {@code TaskList}","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"     * @param ui      the {@code Ui} used for displaying messages","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"     * @param storage the {@code Storage} responsible for data persistence","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"        tasks.unmark(this.position);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"        ui.showTaskUnmarked();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false}],"authorContributionMap":{"BoredFurry":40}},{"path":"src/main/java/ryuji/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.storage;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.Task;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"import java.io.File;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":" * Handles reading and writing of CSV-like data files stored on the desktop.","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"        File file \u003d new File(getFilePath(), fileName);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"            try {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"                    System.out.println(\"File \u0027\" + fileName + \"\u0027 created successfully.\");","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"                } else {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"                    System.out.println(\"File \u0027\" + fileName + \"\u0027 already exists.\");","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"                }","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"                System.err.println(\"Error creating file \u0027\" + fileName + \"\u0027: \" + e.getMessage());","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"                e.printStackTrace();","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"            }","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"        } else {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"            System.out.println(\"File \u0027\" + fileName + \"\u0027 already exists.\");","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"        this.filePath \u003d fileName;","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"     * Returns the path to the user\u0027s desktop directory.","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"     * @return the file path as a {@code String}.","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BoredFurry"},"content":"    private static String getFilePath() {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BoredFurry"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BoredFurry"},"content":"        return home + File.separator + \"Downloads\";","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BoredFurry"},"content":"     * Reads a file from the desktop and parses its contents into rows of values.","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BoredFurry"},"content":"     * Each line is split by commas.","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BoredFurry"},"content":"     * @return a list of string arrays, where each array represents a row of values.","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BoredFurry"},"content":"    public List\u003cTask\u003e readFile() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BoredFurry"},"content":"        List\u003cTask\u003e rows \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BoredFurry"},"content":"        File file \u003d new File(getFilePath(), filePath);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BoredFurry"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BoredFurry"},"content":"            System.err.println(\"Error: File does not exist: \" + file.getAbsolutePath());","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BoredFurry"},"content":"            return rows;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BoredFurry"},"content":"        if (!file.canRead()) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BoredFurry"},"content":"            System.err.println(\"Error: Cannot read file: \" + file.getAbsolutePath());","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BoredFurry"},"content":"            return rows;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BoredFurry"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BoredFurry"},"content":"            String line;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BoredFurry"},"content":"            int lineNum \u003d 0;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BoredFurry"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BoredFurry"},"content":"                lineNum++;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BoredFurry"},"content":"                try {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BoredFurry"},"content":"                    String[] values \u003d line.split(\",\");","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BoredFurry"},"content":"                    Task task \u003d Task.fromCsvRow(values);","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BoredFurry"},"content":"                    rows.add(task);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BoredFurry"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BoredFurry"},"content":"                    System.err.println(\"Warning: Error parsing line \" + lineNum + \": \" + line);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BoredFurry"},"content":"                }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BoredFurry"},"content":"            }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BoredFurry"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BoredFurry"},"content":"            System.err.println(\"Error reading the file: \" + e.getMessage());","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BoredFurry"},"content":"        return rows;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BoredFurry"},"content":"     * Writes the given data to a file on the desktop. Each row is written as a","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BoredFurry"},"content":"     * comma-separated line.","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BoredFurry"},"content":"     * @param task     the list of rows to write, each represented as a string array.","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BoredFurry"},"content":"    public void writeToFile(Task task) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BoredFurry"},"content":"        File file \u003d new File(getFilePath(), this.filePath);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BoredFurry"},"content":"        String data \u003d task.toCsvRow();","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BoredFurry"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BoredFurry"},"content":"            bw.write(data);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BoredFurry"},"content":"            bw.newLine();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BoredFurry"},"content":"            System.out.println(\"Successfully wrote to file: \" + file.getAbsolutePath());","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BoredFurry"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BoredFurry"},"content":"            System.err.println(\"Error writing to the file: \" + e.getMessage());","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BoredFurry"},"content":"    public void updateFile(int position) throws IOException{","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BoredFurry"},"content":"        String currentLine;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BoredFurry"},"content":"        File originalFile \u003d new File(filePath);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BoredFurry"},"content":"        File tempFile \u003d new File(\"temp.csv\");","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BoredFurry"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(originalFile));","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BoredFurry"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BoredFurry"},"content":"        int currentPosition \u003d 1;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BoredFurry"},"content":"        while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BoredFurry"},"content":"            if (currentPosition !\u003d position) writer.write(currentLine + System.lineSeparator());","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BoredFurry"},"content":"        reader.close();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BoredFurry"},"content":"        writer.close();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BoredFurry"},"content":"        originalFile.delete();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BoredFurry"},"content":"        tempFile.renameTo(originalFile);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false}],"authorContributionMap":{"BoredFurry":127}},{"path":"src/main/java/ryuji/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.task;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" * Supports flexible date/time input in the format \"yyyy-MM-dd\" or \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"    /** Parsed date-time if input matches expected format; null otherwise. */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"    private final LocalDateTime parsedDateTime;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"    /** Raw date-time string used as fallback if parsing fails or no standard format. */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"    private final String rawDateTime;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"    /** Input formatter to parse date and optional time (time optional). */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"    private static final DateTimeFormatter inputFormatter \u003d","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd[ HHmm]\");","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"    /** Output formatter to display the date in a user-friendly format. */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"    private static final DateTimeFormatter outputFormatter \u003d","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a Deadline task from a command string.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"     * Example input: \"deadline return book /by 2019-12-02 1800\"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"     * @param input the full command string including the deadline date/time","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"    public Deadline(String input) {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"        super(input.split(\"/by\", 2)[0]);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"        String[] parts \u003d input.split(\"/by\", 2);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"            this.parsedDateTime \u003d null;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"            this.rawDateTime \u003d \"\";","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"        } else {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"            String dateStr \u003d parts[1].trim();","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"            LocalDateTime dt \u003d null;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"            try {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"                dt \u003d LocalDateTime.parse(dateStr, inputFormatter);","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BoredFurry"},"content":"                // parsing failed, keep dt null","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BoredFurry"},"content":"            }","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BoredFurry"},"content":"            this.parsedDateTime \u003d dt;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BoredFurry"},"content":"            this.rawDateTime \u003d (dt \u003d\u003d null) ? dateStr : null;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a Deadline task with mark status from a command string.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BoredFurry"},"content":"     * @param input    the full command string including the deadline date/time","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BoredFurry"},"content":"     * @param isMarked true if the task is marked done, false otherwise","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BoredFurry"},"content":"    public Deadline(String input, boolean isMarked) {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BoredFurry"},"content":"        super(input.split(\"/by\", 2)[0], isMarked);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BoredFurry"},"content":"        String[] parts \u003d input.split(\"/by\", 2);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BoredFurry"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BoredFurry"},"content":"            this.parsedDateTime \u003d null;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BoredFurry"},"content":"            this.rawDateTime \u003d \"\";","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BoredFurry"},"content":"        } else {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BoredFurry"},"content":"            String dateStr \u003d parts[1].trim();","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BoredFurry"},"content":"            LocalDateTime dt \u003d null;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BoredFurry"},"content":"            try {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BoredFurry"},"content":"                dt \u003d LocalDateTime.parse(dateStr, inputFormatter);","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BoredFurry"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BoredFurry"},"content":"                // parsing failed","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BoredFurry"},"content":"            }","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BoredFurry"},"content":"            this.parsedDateTime \u003d dt;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BoredFurry"},"content":"            this.rawDateTime \u003d (dt \u003d\u003d null) ? dateStr : null;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BoredFurry"},"content":"     * Checks if this deadline task has a valid date/time (either parsed or raw).","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BoredFurry"},"content":"     * @return true if the deadline has valid date or non-empty raw date string","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BoredFurry"},"content":"    boolean checkValid() {","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BoredFurry"},"content":"        return this.parsedDateTime !\u003d null || (this.rawDateTime !\u003d null \u0026\u0026 !this.rawDateTime.isEmpty());","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BoredFurry"},"content":"     * Returns a CSV row string representing this task.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BoredFurry"},"content":"     * Format suggestion: \"D | status | label | date/time\"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BoredFurry"},"content":"     * @return CSV formatted string of this task","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BoredFurry"},"content":"    public String toCsvRow() {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BoredFurry"},"content":"        String status \u003d getStatusIcon().equals(\"X\") ? \"1\" : \"0\"; // Assuming \"X\" means done","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BoredFurry"},"content":"        String dateStr \u003d (parsedDateTime !\u003d null) ? parsedDateTime.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME) : rawDateTime;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BoredFurry"},"content":"        return String.format(\"D | %s | %s | %s\", status, this.label.split(\"/by\")[0].trim(), dateStr);","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BoredFurry"},"content":"     * Returns a user-friendly string representation of this deadline task.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BoredFurry"},"content":"     * @return formatted string including deadline date/time","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BoredFurry"},"content":"    public String toString() {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BoredFurry"},"content":"        if (parsedDateTime !\u003d null) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BoredFurry"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + parsedDateTime.format(outputFormatter) + \")\";","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BoredFurry"},"content":"        } else {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BoredFurry"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + rawDateTime + \")\";","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BoredFurry"},"content":"    /** Returns the parsed LocalDateTime if available, else null. */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BoredFurry"},"content":"    public LocalDateTime getParsedDateTime() {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BoredFurry"},"content":"        return parsedDateTime;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BoredFurry"},"content":"    /** Returns the raw date/time string if parsing failed or not provided. */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BoredFurry"},"content":"    public String getRawDateTime() {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BoredFurry"},"content":"        return rawDateTime;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false}],"authorContributionMap":{"BoredFurry":124}},{"path":"src/main/java/ryuji/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.task;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * Represents an event task with start and end date/time.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" * Supports flexible date/time input in the format \"yyyy-MM-dd\" or \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"    /** Parsed start date-time, or null if parsing fails */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"    private final LocalDateTime startParsed;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"    /** Parsed end date-time, or null if parsing fails */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"    private final LocalDateTime endParsed;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"    /** Raw start date/time string, fallback if parsing fails */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"    private final String startRaw;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"    /** Raw end date/time string, fallback if parsing fails */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"    private final String endRaw;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"    /** Input formatter to parse date and optional time */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"    private static final DateTimeFormatter inputFormatter \u003d","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd[ HHmm]\");","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"    /** Output formatter for displaying date/time to user */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"    private static final DateTimeFormatter outputFormatter \u003d","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"     * Constructs an Event task from the full command string.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"     * Example input: \"event party /from 2019-12-02 1800 /to 2019-12-02 2000\"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"     * @param input the full input string including event description and times","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"    public Event(String input) {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"        super(input.split(\"/from\", 2)[0]);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"        String[] fromSplit \u003d input.split(\"/from\", 2);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"        String[] toSplit \u003d input.split(\"/to\", 2);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"        if (fromSplit.length \u003c 2 || toSplit.length \u003c 2) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"            this.startParsed \u003d null;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BoredFurry"},"content":"            this.endParsed \u003d null;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BoredFurry"},"content":"            this.startRaw \u003d \"\";","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BoredFurry"},"content":"            this.endRaw \u003d \"\";","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BoredFurry"},"content":"        } else {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BoredFurry"},"content":"            String startStr \u003d fromSplit[1].split(\"/to\", 2)[0].trim();","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BoredFurry"},"content":"            String endStr \u003d toSplit[1].trim();","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BoredFurry"},"content":"            LocalDateTime startDt;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BoredFurry"},"content":"            LocalDateTime endDt;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BoredFurry"},"content":"            try {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BoredFurry"},"content":"                startDt \u003d LocalDateTime.parse(startStr, inputFormatter);","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BoredFurry"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BoredFurry"},"content":"                startDt \u003d null;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BoredFurry"},"content":"            }","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BoredFurry"},"content":"            try {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BoredFurry"},"content":"                endDt \u003d LocalDateTime.parse(endStr, inputFormatter);","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BoredFurry"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BoredFurry"},"content":"                endDt \u003d null;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BoredFurry"},"content":"            }","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BoredFurry"},"content":"            this.startParsed \u003d startDt;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BoredFurry"},"content":"            this.endParsed \u003d endDt;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BoredFurry"},"content":"            this.startRaw \u003d (startDt \u003d\u003d null) ? startStr : null;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BoredFurry"},"content":"            this.endRaw \u003d (endDt \u003d\u003d null) ? endStr : null;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BoredFurry"},"content":"     * Constructs an Event task with mark status from the full command string.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BoredFurry"},"content":"     * @param input    the full input string including event description and times","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BoredFurry"},"content":"     * @param isMarked true if task is marked done, false otherwise","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BoredFurry"},"content":"    public Event(String input, boolean isMarked) {","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BoredFurry"},"content":"        super(input.split(\"/from\", 2)[0], isMarked);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BoredFurry"},"content":"        String[] fromSplit \u003d input.split(\"/from\", 2);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BoredFurry"},"content":"        String[] toSplit \u003d input.split(\"/to\", 2);","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BoredFurry"},"content":"        if (fromSplit.length \u003c 2 || toSplit.length \u003c 2) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BoredFurry"},"content":"            this.startParsed \u003d null;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BoredFurry"},"content":"            this.endParsed \u003d null;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BoredFurry"},"content":"            this.startRaw \u003d \"\";","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BoredFurry"},"content":"            this.endRaw \u003d \"\";","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BoredFurry"},"content":"        } else {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BoredFurry"},"content":"            String startStr \u003d fromSplit[1].split(\"/to\", 2)[0].trim();","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BoredFurry"},"content":"            String endStr \u003d toSplit[1].trim();","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BoredFurry"},"content":"            LocalDateTime startDt;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BoredFurry"},"content":"            LocalDateTime endDt;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BoredFurry"},"content":"            try {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BoredFurry"},"content":"                startDt \u003d LocalDateTime.parse(startStr, inputFormatter);","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BoredFurry"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BoredFurry"},"content":"                startDt \u003d null;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BoredFurry"},"content":"            }","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BoredFurry"},"content":"            try {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BoredFurry"},"content":"                endDt \u003d LocalDateTime.parse(endStr, inputFormatter);","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BoredFurry"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BoredFurry"},"content":"                endDt \u003d null;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BoredFurry"},"content":"            }","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BoredFurry"},"content":"            this.startParsed \u003d startDt;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BoredFurry"},"content":"            this.endParsed \u003d endDt;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BoredFurry"},"content":"            this.startRaw \u003d (startDt \u003d\u003d null) ? startStr : null;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BoredFurry"},"content":"            this.endRaw \u003d (endDt \u003d\u003d null) ? endStr : null;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BoredFurry"},"content":"     * Checks if the event has valid start and end date/time.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BoredFurry"},"content":"     * @return true if both start and end times are valid (parsed or raw)","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BoredFurry"},"content":"    boolean checkValid() {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BoredFurry"},"content":"        return (startParsed !\u003d null || (startRaw !\u003d null \u0026\u0026 !startRaw.isEmpty()))","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BoredFurry"},"content":"                \u0026\u0026 (endParsed !\u003d null || (endRaw !\u003d null \u0026\u0026 !endRaw.isEmpty()));","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BoredFurry"},"content":"     * Returns a user-friendly string representation of the event.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BoredFurry"},"content":"     * @return string formatted as \"[E]\u003ctask info\u003e (from: start to: end)\"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BoredFurry"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BoredFurry"},"content":"        String startStr \u003d (startParsed !\u003d null) ? startParsed.format(outputFormatter) : startRaw;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BoredFurry"},"content":"        String endStr \u003d (endParsed !\u003d null) ? endParsed.format(outputFormatter) : endRaw;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BoredFurry"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startStr + \" to: \" + endStr + \")\";","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BoredFurry"},"content":"     * Returns a CSV row string representing this event.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BoredFurry"},"content":"     * Adjust this method to fit your CSV format.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BoredFurry"},"content":"     * @return CSV formatted string of this event task","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BoredFurry"},"content":"    public String toCsvRow() {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BoredFurry"},"content":"        String status \u003d getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BoredFurry"},"content":"        String labelPart \u003d this.label.split(\"/from\", 2)[0].trim();","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BoredFurry"},"content":"        String startStr \u003d (startParsed !\u003d null) ? startParsed.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME) : startRaw;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BoredFurry"},"content":"        String endStr \u003d (endParsed !\u003d null) ? endParsed.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME) : endRaw;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BoredFurry"},"content":"        return String.format(\"E | %s | %s | %s | %s\", status, labelPart, startStr, endStr);","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BoredFurry"},"content":"    // Getter methods for start/end date/time","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BoredFurry"},"content":"    public LocalDateTime getStartParsed() {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BoredFurry"},"content":"        return startParsed;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BoredFurry"},"content":"    public LocalDateTime getEndParsed() {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BoredFurry"},"content":"        return endParsed;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BoredFurry"},"content":"    public String getStartRaw() {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BoredFurry"},"content":"        return startRaw;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BoredFurry"},"content":"    public String getEndRaw() {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BoredFurry"},"content":"        return endRaw;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false}],"authorContributionMap":{"BoredFurry":171}},{"path":"src/main/java/ryuji/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.task;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":" * Abstract base class representing a generic task item.","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":" * This class provides the core functionality for all task types, including:","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":" * - Status tracking (marked/unmarked)","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":" * - Label handling","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * - CSV conversion for storage","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" * Concrete subclasses such as {@code ToDo}, {@code Deadline}, and {@code Event}","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":" * should extend this class and implement specific validation and data serialization logic.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"     * Indicates whether the task is marked as completed.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"    protected boolean isMarked \u003d false;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"     * The textual description or label of the task.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"    protected String label;","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a {@code Task} with the given label.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"     * @param label the task\u0027s label or description","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"    Task(String label) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"        this.label \u003d label;","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a {@code Task} with the given label and completion status.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"     * @param label  the task\u0027s label or description","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"     * @param status the completion status (true if completed, false otherwise)","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"    Task(String label, boolean status) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"        this.label \u003d label;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"        this.isMarked \u003d status;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BoredFurry"},"content":"     * Checks whether the task is valid.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BoredFurry"},"content":"     * This method must be implemented by subclasses to perform type-specific validation.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BoredFurry"},"content":"     * @return {@code true} if the task is valid; {@code false} otherwise","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BoredFurry"},"content":"    abstract boolean checkValid();","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BoredFurry"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BoredFurry"},"content":"    public void mark() {","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BoredFurry"},"content":"        isMarked \u003d true;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BoredFurry"},"content":"     * Unmarks the task (sets it as not completed).","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BoredFurry"},"content":"    public void unmark() {","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BoredFurry"},"content":"        isMarked \u003d false;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BoredFurry"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BoredFurry"},"content":"     * @return \"X\" if the task is completed; otherwise, a space character \" \"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BoredFurry"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BoredFurry"},"content":"        return isMarked ? \"X\" : \" \";","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BoredFurry"},"content":"     * Checks whether the task\u0027s label contains the specified search term.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BoredFurry"},"content":"     * @param searchTerm the keyword to search for","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BoredFurry"},"content":"     * @return {@code true} if the label contains the search term; {@code false} otherwise","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BoredFurry"},"content":"    public boolean checkLabel(String searchTerm) {","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BoredFurry"},"content":"        return label.contains(searchTerm);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BoredFurry"},"content":"     * Converts the task to a CSV-compatible string array for persistent storage.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BoredFurry"},"content":"     * This method must be implemented by subclasses to include task-specific fields.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BoredFurry"},"content":"     * @return a string array representing the task\u0027s fields","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BoredFurry"},"content":"    public abstract String toCsvRow();","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BoredFurry"},"content":"     * Creates a {@code Task} object from a CSV row.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BoredFurry"},"content":"     * The first element of the row should indicate the task type: \"todo\", \"deadline\", or \"event\".","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BoredFurry"},"content":"     * @param row the CSV row containing the task data","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BoredFurry"},"content":"     * @return a {@code Task} object reconstructed from the row; or {@code null} if the type is invalid","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BoredFurry"},"content":"    public static Task fromCsvRow(String[] row) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BoredFurry"},"content":"        Task task;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BoredFurry"},"content":"        String taskType \u003d row[0];","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BoredFurry"},"content":"        boolean isMarked \u003d row[1].equals(\"X\");","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BoredFurry"},"content":"        String label \u003d row[2];","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BoredFurry"},"content":"        task \u003d switch (taskType) {","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BoredFurry"},"content":"            case \"todo\" -\u003e new ToDo(label, isMarked);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BoredFurry"},"content":"            case \"deadline\" -\u003e new Deadline(label, isMarked);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BoredFurry"},"content":"            case \"event\" -\u003e new Event(label, isMarked);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BoredFurry"},"content":"            default -\u003e null;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BoredFurry"},"content":"        };","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BoredFurry"},"content":"        return task;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BoredFurry"},"content":"     * Returns a string representation of the task, including its status icon and label.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BoredFurry"},"content":"     * @return the formatted string representing the task","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BoredFurry"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BoredFurry"},"content":"        return \"[\" + getStatusIcon() + \"] \" + label;","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false}],"authorContributionMap":{"BoredFurry":123}},{"path":"src/main/java/ryuji/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.task;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-21T00:33:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import java.util.List;","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T00:33:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * Represents a list of {@link Task} objects with operations","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" * to add, delete, mark, unmark, filter, and search tasks.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"public class TaskList {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"     * The internal list that stores tasks.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T00:33:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a {@code TaskList} with the specified list of tasks.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"     * @param tasks the list of tasks to initialize the task list with","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"     * Adds a valid task to the list. If the task is invalid,","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"     * it will not be added and a message will be printed.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"     * @param item the task to add","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"    public void addToList(Task item) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"        if (item.checkValid()) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"            tasks.add(item);","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"            System.out.println(\"Added: \" + item);","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"        } else {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BoredFurry"},"content":"            System.out.println(\"Invalid task format.\");","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BoredFurry"},"content":"     * Deletes a task at the specified 1-based index.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BoredFurry"},"content":"     * If the index is out of bounds, an error message is printed.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BoredFurry"},"content":"     * @param index the 1-based index of the task to delete","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BoredFurry"},"content":"    public void deleteFromList(int index) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BoredFurry"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BoredFurry"},"content":"            System.out.println(\"Index out of bounds.\");","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BoredFurry"},"content":"            return;","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-22T00:25:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BoredFurry"},"content":"        Task removed \u003d tasks.remove(index - 1);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(\"Removed: \" + removed);","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-22T00:25:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BoredFurry"},"content":"     * Marks the task at the specified 1-based index as completed.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BoredFurry"},"content":"     * If the index is out of bounds, an error message is printed.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BoredFurry"},"content":"     * @param index the 1-based index of the task to mark as done","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BoredFurry"},"content":"    public void mark(int index) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BoredFurry"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BoredFurry"},"content":"            System.out.println(\"Index out of bounds.\");","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BoredFurry"},"content":"            return;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BoredFurry"},"content":"        tasks.get(index - 1).mark();","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(\"Marked as done: \" + tasks.get(index - 1));","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BoredFurry"},"content":"     * Unmarks the task at the specified 1-based index as not completed.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BoredFurry"},"content":"     * If the index is out of bounds, an error message is printed.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BoredFurry"},"content":"     * @param index the 1-based index of the task to unmark","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BoredFurry"},"content":"    public void unmark(int index) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BoredFurry"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BoredFurry"},"content":"            System.out.println(\"Index out of bounds.\");","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BoredFurry"},"content":"            return;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BoredFurry"},"content":"        tasks.get(index - 1).unmark();","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(\"Unmarked: \" + tasks.get(index - 1));","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:44:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BoredFurry"},"content":"     * Finds and returns a new {@code TaskList} containing tasks","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BoredFurry"},"content":"     * whose labels match the given search term.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BoredFurry"},"content":"     * @param searchTerm the keyword to search for in task descriptions or labels","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BoredFurry"},"content":"     * @return a {@code TaskList} of matching tasks","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BoredFurry"},"content":"    public TaskList find(String searchTerm) {","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BoredFurry"},"content":"        ArrayList\u003cTask\u003e validTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BoredFurry"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BoredFurry"},"content":"            if (task.checkLabel(searchTerm)) {","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BoredFurry"},"content":"                validTasks.add(task);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BoredFurry"},"content":"            }","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BoredFurry"},"content":"        return new TaskList(validTasks);","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BoredFurry"},"content":"     * Returns a string representation of all tasks in the list.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BoredFurry"},"content":"     * Tasks are numbered starting from 1.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BoredFurry"},"content":"     * @return a formatted string listing all tasks","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BoredFurry"},"content":"    public String toString() {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BoredFurry"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are your tasks:\\n\");","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BoredFurry"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BoredFurry"},"content":"            sb.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BoredFurry"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T00:33:40","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T00:33:40","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BoredFurry"},"content":"     * Lists only deadlines and events that occur on the specified date.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BoredFurry"},"content":"     * The matching tasks are printed in chronological order.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BoredFurry"},"content":"     * @param date the date to filter tasks by (only deadlines and events are considered)","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BoredFurry"},"content":"    public void listTasksOnDate(java.time.LocalDate date) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BoredFurry"},"content":"        tasks.stream()","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BoredFurry"},"content":"                .filter(t -\u003e t instanceof Deadline || t instanceof Event)","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BoredFurry"},"content":"                .filter(t -\u003e {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BoredFurry"},"content":"                    if (t instanceof Deadline d \u0026\u0026 d.getParsedDateTime() !\u003d null) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BoredFurry"},"content":"                        return d.getParsedDateTime().toLocalDate().equals(date);","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BoredFurry"},"content":"                    } else if (t instanceof Event e \u0026\u0026 e.getStartParsed() !\u003d null) {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BoredFurry"},"content":"                        return e.getStartParsed().toLocalDate().equals(date);","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BoredFurry"},"content":"                    }","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BoredFurry"},"content":"                    return false;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BoredFurry"},"content":"                })","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BoredFurry"},"content":"                .sorted(Comparator.comparing(t -\u003e {","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BoredFurry"},"content":"                    if (t instanceof Deadline d \u0026\u0026 d.getParsedDateTime() !\u003d null) return d.getParsedDateTime();","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BoredFurry"},"content":"                    else if (t instanceof Event e \u0026\u0026 e.getStartParsed() !\u003d null) return e.getStartParsed();","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BoredFurry"},"content":"                    else return java.time.LocalDateTime.MAX;","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BoredFurry"},"content":"                }))","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BoredFurry"},"content":"                .forEach(System.out::println);","lastModifiedDate":"2025-08-26T14:55:05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T00:33:40","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-21T00:33:40","isFullCredit":false}],"authorContributionMap":{"BoredFurry":150}},{"path":"src/main/java/ryuji/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.task;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":" * Represents a simple to-do task without any dates.","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a Ryuji.ToDo task.","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"     * @param label the task label.","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"    public ToDo(String label) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"        super(label);","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"    public ToDo(String label, boolean isMarked) {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"        super(label, isMarked);","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"     * Checks if the task is valid (must contain at least one space).","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"     * @return true if valid, false otherwise.","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"    boolean checkValid() {","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"        return this.label.split(\" \").length \u003e\u003d 1;","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"     * Converts this Ryuji.ToDo task to a CSV row.","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"     * @return a String array representing the task.","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"    public String toCsvRow() {","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"        return \"TODO,\" + getStatusIcon() + \",\" + this.label;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"     * Returns a string representation of the Ryuji.ToDo task.","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BoredFurry"},"content":"     * @return formatted string.","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BoredFurry"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BoredFurry"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BoredFurry"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-21T23:48:57","isFullCredit":false}],"authorContributionMap":{"BoredFurry":51}},{"path":"src/main/java/ryuji/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.ui;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.command.AddCommand;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import ryuji.command.Command;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.command.DeleteCommand;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"import ryuji.command.ExitCommand;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"import ryuji.command.FindCommand;","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":"import ryuji.command.ListCommand;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":"import ryuji.command.MarkCommand;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":"import ryuji.command.UnmarkCommand;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.Deadline;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.Event;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.ToDo;","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"import java.util.Set;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":" * The {@code Parser} class is responsible for interpreting user input","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":" * and converting it into executable {@link Command} objects.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":" * It supports various commands such as \"list\", \"todo\", \"deadline\", \"event\",","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":" * \"mark\", \"unmark\", \"delete\", and \"bye\".","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"public class Parser {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"    private final Set\u003cString\u003e commands \u003d Set.of(\"list\", \"bye\", \"mark\", \"unmark\", \"todo\",","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"            \"find\", \"deadline\", \"event\", \"delete\");","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"     * Parses the raw user input and returns the corresponding {@link Command} object.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"     * @param input the user input string","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"     * @return the corresponding {@code Command} object, or {@code null} if the command is not recognized","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"     * @throws IllegalStateException if the command keyword is unexpected","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"     * @throws IndexOutOfBoundsException or NumberFormatException if parsing fails","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"    public Command parse(String input) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"        Command command;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"        String commandString \u003d parseCommand(input.toLowerCase());","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"        switch (commandString) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"        case \"list\":","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"            command \u003d new ListCommand(commandString);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"            break;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"        case \"bye\":","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"            command \u003d new ExitCommand(commandString);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BoredFurry"},"content":"            break;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BoredFurry"},"content":"        case \"mark\":","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BoredFurry"},"content":"            command \u003d new MarkCommand(commandString, parsePosition(input));","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BoredFurry"},"content":"            break;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BoredFurry"},"content":"        case \"unmark\":","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BoredFurry"},"content":"            command \u003d new UnmarkCommand(commandString, parsePosition(input));","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BoredFurry"},"content":"            break;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BoredFurry"},"content":"        case \"delete\":","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BoredFurry"},"content":"            command \u003d new DeleteCommand(commandString, parsePosition(input));","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BoredFurry"},"content":"            break;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BoredFurry"},"content":"        case \"todo\":","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BoredFurry"},"content":"            command \u003d new AddCommand(commandString, new ToDo(parseTask(input)));","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BoredFurry"},"content":"            break;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BoredFurry"},"content":"        case \"deadline\":","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BoredFurry"},"content":"            command \u003d new AddCommand(commandString, new Deadline(parseTask(input)));","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BoredFurry"},"content":"            break;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BoredFurry"},"content":"        case \"event\":","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BoredFurry"},"content":"            command \u003d new AddCommand(commandString, new Event(parseTask(input)));","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BoredFurry"},"content":"            break;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BoredFurry"},"content":"        case \"find\":","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BoredFurry"},"content":"            command \u003d new FindCommand(commandString, parseTask(input));","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BoredFurry"},"content":"            break;","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BoredFurry"},"content":"        default:","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BoredFurry"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + commandString);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BoredFurry"},"content":"        if (this.checkCommandExists(commandString)) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BoredFurry"},"content":"            return command;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BoredFurry"},"content":"        } else {","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BoredFurry"},"content":"            return null;","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BoredFurry"},"content":"     * Checks whether a given command keyword exists in the list of valid commands.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BoredFurry"},"content":"     * @param command the command keyword to check","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BoredFurry"},"content":"     * @return {@code true} if the command exists, {@code false} otherwise","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BoredFurry"},"content":"    public boolean checkCommandExists(String command) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BoredFurry"},"content":"        return commands.contains(command);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BoredFurry"},"content":"     * Extracts the command keyword from the full user input.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BoredFurry"},"content":"     * @param input the full input string","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BoredFurry"},"content":"     * @return the command keyword (first word in the input)","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BoredFurry"},"content":"    private String parseCommand(String input) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BoredFurry"},"content":"        String[] inputSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BoredFurry"},"content":"        return inputSplit[0];","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BoredFurry"},"content":"     * Extracts the task description from the user input.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BoredFurry"},"content":"     * Assumes the command is followed by a space and the task details.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BoredFurry"},"content":"     * @param input the full input string","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BoredFurry"},"content":"     * @return the task description or details","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BoredFurry"},"content":"     * @throws ArrayIndexOutOfBoundsException if no task details are provided","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BoredFurry"},"content":"    private String parseTask(String input) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BoredFurry"},"content":"        String[] inputSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BoredFurry"},"content":"        return inputSplit[1];","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BoredFurry"},"content":"     * Extracts the position (typically task number) from the user input.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BoredFurry"},"content":"     * Used in commands like \"mark\", \"unmark\", and \"delete\".","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BoredFurry"},"content":"     * @param input the full input string","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BoredFurry"},"content":"     * @return the task position as an integer","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BoredFurry"},"content":"     * @throws NumberFormatException if the number is not valid","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BoredFurry"},"content":"     * @throws ArrayIndexOutOfBoundsException if no number is provided","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BoredFurry"},"content":"    private int parsePosition(String input) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BoredFurry"},"content":"        String[] inputSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BoredFurry"},"content":"        return Integer.parseInt(inputSplit[1]);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false}],"authorContributionMap":{"BoredFurry":125}},{"path":"src/main/java/ryuji/ui/Ryuji.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.ui;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.command.Command;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import ryuji.storage.Storage;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.TaskList;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * The {@code Ryuji} class serves as the main entry point for the Ryuji chatbot application.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" * It is responsible for initializing the user interface, task list, storage, and parser.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":" * The chatbot reads user input in a loop, parses commands, and executes them accordingly.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"public class Ryuji {","lastModifiedDate":"2025-08-20T23:54:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a {@code Ryuji} instance with the specified file path for storage.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"     * It attempts to load existing tasks from the given file. If loading fails,","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"     * it initializes an empty task list and notifies the user.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"     * @param filePath the file path to the storage file where tasks are saved","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"    public Ryuji(String filePath) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"        try {","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"            this.tasks \u003d new TaskList(this.storage.readFile());","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"            this.ui.showFailuretoLoadTaskListError();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"     * Starts the chatbot application.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"     * Displays a welcome message, then enters a loop to continuously read, parse,","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"     * and execute user commands until the exit command is received.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"     * Shows error messages and a farewell message as appropriate.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"    public void run() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BoredFurry"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BoredFurry"},"content":"            try {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BoredFurry"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BoredFurry"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BoredFurry"},"content":"                Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BoredFurry"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BoredFurry"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BoredFurry"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BoredFurry"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BoredFurry"},"content":"            } finally {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BoredFurry"},"content":"                ui.showLine();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BoredFurry"},"content":"            }","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BoredFurry"},"content":"        }","lastModifiedDate":"2025-08-21T00:33:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T00:16:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BoredFurry"},"content":"     * Main method that launches the Ryuji chatbot application.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BoredFurry"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BoredFurry"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BoredFurry"},"content":"        new Ryuji(\"tasks.csv\").run();","lastModifiedDate":"2025-09-05T08:52:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-20T23:54:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-20T23:54:30","isFullCredit":false}],"authorContributionMap":{"BoredFurry":68}},{"path":"src/main/java/ryuji/ui/RyujiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.ui;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":" * The {@code RyujiException} class represents exceptions specific to the Ryuji chatbot application.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":" * It extends the built-in {@link Exception} class and is used to signal application-specific errors,","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":" * such as invalid input or issues loading files.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":"public class RyujiException extends Exception {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a {@code RyujiException} with the specified error message.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"     * @param message the detailed error message","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"    public RyujiException(String message) {","lastModifiedDate":"2025-08-29T10:40:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"        super(message);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"     * Constructs a {@code RyujiException} with an empty message.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"    RyujiException() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"        super(\"\");","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"     * Displays the stored error message, typically used for input-related errors.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"    public void showInputError() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(this.getMessage());","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"     * Displays the stored error message, typically used when the task file is not found.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"    public void showFileNotFound() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(this.getMessage());","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"     * Displays the stored error message, typically used for invalid commands or data.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"    public void showInvalid() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(this.getMessage());","lastModifiedDate":"2025-08-28T23:46:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-21T23:51:33","isFullCredit":false}],"authorContributionMap":{"BoredFurry":46}},{"path":"src/main/java/ryuji/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryuji.ui;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import ryuji.task.TaskList;","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"/**","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":" * The {@code Ui} class handles all interactions with the user.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":" * It is responsible for displaying messages, reading input, and showing task-related outputs.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":" */","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":"public class Ui {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"     * ASCII art logo for the application, displayed on startup.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"    private final String LOGO \u003d \" ____               _ _ \\n\"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"            + \"|  _ \\\\ _   _ _   _ (_|_)\\n\"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"            + \"| |_) | | | | | | || | |\\n\"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"            + \"|  _ \u003c| |_| | |_| || | |\\n\"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"            + \"|_| \\\\_\\\\\\\\__, |\\\\__,_|/ |_|\\n\"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"            + \"       |___/     |__/   \\n\";","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BoredFurry"},"content":"     * A horizontal divider line used for formatting console output.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BoredFurry"},"content":"    private final String LINE \u003d \"_______________________________________________________\";","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BoredFurry"},"content":"     * Default greeting message shown when the application starts.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BoredFurry"},"content":"    private final String GREETING \u003d \"Hello! I\u0027m Ryuji.\\nWhat can I do for you?\";","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BoredFurry"},"content":"     * Farewell message displayed when the application is closed or exited.","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BoredFurry"},"content":"    private final String FAREWELL \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BoredFurry"},"content":"     * Scanner used to read user input from the standard input stream (console).","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-03T13:33:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BoredFurry"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BoredFurry"},"content":"     * Displays the welcome message and logo when the application starts.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BoredFurry"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(this.LINE + \"\\n\" + this.LOGO + \"\\n\" + this.GREETING + \"\\n\" + this.LINE);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BoredFurry"},"content":"     * Displays a horizontal divider line to separate console output.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BoredFurry"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(this.LINE);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BoredFurry"},"content":"     * Displays a farewell message when the user exits the application.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BoredFurry"},"content":"    public void showFarewell() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(this.FAREWELL);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BoredFurry"},"content":"     * Displays the current list of tasks to the user.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BoredFurry"},"content":"     * @param tasks the {@code TaskList} containing all tasks to be displayed","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BoredFurry"},"content":"    public void displayTaskList(TaskList tasks) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(tasks);","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BoredFurry"},"content":"     * Reads the next line of user input from the console.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BoredFurry"},"content":"     * @return the user input as a {@code String}","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BoredFurry"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BoredFurry"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BoredFurry"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BoredFurry"},"content":"     *","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BoredFurry"},"content":"     * @param exception the error message to be shown","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BoredFurry"},"content":"    public void showError(String exception) {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(new RyujiException(exception).getMessage());","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BoredFurry"},"content":"     * Displays a confirmation message when a task is added to the task list.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BoredFurry"},"content":"    public void showTaskAdded() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(\"Item added to tasklist\");","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BoredFurry"},"content":"     * Displays a confirmation message when a task is unmarked (marked as not done).","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BoredFurry"},"content":"    public void showTaskUnmarked() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(\"Item unmarked\");","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BoredFurry"},"content":"     * Displays a confirmation message when a task is marked as done.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BoredFurry"},"content":"    public void showTaskMarked() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(\"Item marked as done\");","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BoredFurry"},"content":"    /**","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BoredFurry"},"content":"     * Displays an error message when the task list fails to load from file.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BoredFurry"},"content":"     * An empty list will be initialized in this case.","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BoredFurry"},"content":"     */","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BoredFurry"},"content":"    public void showFailuretoLoadTaskListError() {","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BoredFurry"},"content":"        System.out.println(\"The file doesn\u0027t exist, here\u0027s an empty list\");","lastModifiedDate":"2025-09-02T21:32:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-27T16:30:01","isFullCredit":false}],"authorContributionMap":{"BoredFurry":118}},{"path":"src/test/java/ryujiTest/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryujiTest;","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.ui.Ryuji;","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"public class CommandTest {","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":"    @Test","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":"    void () {","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"        Ryuji myObject \u003d new Ryuji(\"data/tasks.csv\");","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"        assertEquals(5, myObject.myMethod(2, 3));","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"    @Test","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"    void anotherMethodShouldThrowException() {","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"        MyClass myObject \u003d new MyClass();","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e myObject.anotherMethod(-1));","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false}],"authorContributionMap":{"BoredFurry":21}},{"path":"src/test/java/ryujiTest/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"package ryujiTest;","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"import ryuji.ui.Ryuji;","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"public class UiTest {","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":"    ","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BoredFurry"},"content":"    @Test","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BoredFurry"},"content":"    void () {","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BoredFurry"},"content":"        Ryuji myObject \u003d new Ryuji(\"data/tasks.csv\");","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BoredFurry"},"content":"        assertEquals(5, myObject.myMethod(2, 3));","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BoredFurry"},"content":"    @Test","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BoredFurry"},"content":"    void anotherMethodShouldThrowException() {","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"        MyClass myObject \u003d new MyClass();","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e myObject.anotherMethod(-1));","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BoredFurry"},"content":"    }","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BoredFurry"},"content":"}","lastModifiedDate":"2025-08-31T15:22:28","isFullCredit":false}],"authorContributionMap":{"BoredFurry":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BoredFurry"},"content":"todo read book","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BoredFurry"},"content":"deadline submit report /by 2025-08-30","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BoredFurry"},"content":"event meeting /at 2025-08-25 10:00-11:00","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BoredFurry"},"content":"list","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BoredFurry"},"content":"mark 1","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BoredFurry"},"content":"unmark 1","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BoredFurry"},"content":"delete 2","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BoredFurry"},"content":"bye","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false}],"authorContributionMap":{"BoredFurry":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BoredFurry"},"content":"","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BoredFurry"},"content":"REM run the program, feed commands from input.txt file and redirect the output to ACTUAL.TXT","lastModifiedDate":"2025-08-26T14:00:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BoredFurry"},"content":"java -classpath ..\\bin ryuji.ryuji \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-28T10:10:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"BoredFurry":3,"-":19}}]
