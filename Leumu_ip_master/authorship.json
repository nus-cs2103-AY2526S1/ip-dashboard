[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"repositories {","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Leumu"},"content":"    mainClass.set(\"app.Main\")","lastModifiedDate":"2025-09-12T17:45:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Leumu"},"content":"    archiveFileName \u003d \u0027airy.jar\u0027","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Leumu"},"content":"    archiveBaseName \u003d \"airy\"","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Leumu"},"content":"checkstyle {","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Leumu"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"Leumu":24,"-":38}},{"path":"data/Airy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"T | 1 | borrow book","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"E | 0 | project meeting | 2022-01-01 | 2023-01-01","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"D | 0 | return book | 2022-06-13","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false}],"authorContributionMap":{"Leumu":3}},{"path":"src/main/java/airy/Airy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":" * This is my main class which implements the logic for handling","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":" * the different tasks and commands","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"public class Airy {","lastModifiedDate":"2025-08-22T04:54:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"    private final Parser parser;","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"     * This is my Airy constructor which initializes the ArrayList for Task and Ui","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"    public Airy() {","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"        // Initializes the Ui object","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"        // Initializes the Parser object","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"        // Load tasks from disk instead of starting empty","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"        // If no data, create fie and return empty ArrayList","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"        this.tasks \u003d new TaskList(Storage.load());","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"     * Getter method to print Welcome message","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"    public String getWelcomeUi() {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"        return ui.getWelcomeMessage();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"     * Marks Task and saves it to Storage.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"     * Show confirmation UI when completed.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"     * @param taskIndex the task index to be marked and saved.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"     * @return the confirmation message that the task has been marked.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"    public String markAndSaveTask(int taskIndex, Boolean mark) {","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"        Task taskObj \u003d mark ? tasks.markTask(taskIndex) : tasks.unmarkTask(taskIndex);","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"        // Save after change","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Leumu"},"content":"        Storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Leumu"},"content":"        return mark ? ui.showMark(taskObj) : ui.showUnmark(taskObj);","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Leumu"},"content":"     * Adds Task to tasks array and saves it to Storage.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Leumu"},"content":"     * Show confirmation UI when completed.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Leumu"},"content":"     * @param task the task object to be added and saved.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Leumu"},"content":"     * @return the confirmation message that the task has been added.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Leumu"},"content":"    public String addAndSaveTask(Task task) {","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Leumu"},"content":"        // Save to do object into array","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Leumu"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Leumu"},"content":"        // Save after change","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Leumu"},"content":"        Storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Leumu"},"content":"        // Show user task has been added","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Leumu"},"content":"        return ui.showTaskAdded(task, tasks.getSize());","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Leumu"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Leumu"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Leumu"},"content":"        String result \u003d \"\";","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Leumu"},"content":"        int tasksSize \u003d tasks.getSize();","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T13:46:40","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Leumu"},"content":"        try {","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Leumu"},"content":"            if (input.isEmpty()) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Leumu"},"content":"                throw new AiryException(\"Please enter a keyword e.g.\"","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Leumu"},"content":"                        + \" todo, deadline, event, list, mark \u0026 unmark\");","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Leumu"},"content":"            String[] parsed \u003d parser.parse(input);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Leumu"},"content":"            String command \u003d parsed[0];","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Leumu"},"content":"            String args \u003d parsed[1];","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T13:46:40","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Leumu"},"content":"            // break immediately if bye","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Leumu"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Leumu"},"content":"                return ui.byeMessage();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Leumu"},"content":"            switch (command) {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Leumu"},"content":"            case \"list\": {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Leumu"},"content":"                result \u003d ui.showTaskList(tasks.getTasks());","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Leumu"},"content":"                break;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-22T21:17:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Leumu"},"content":"            case \"mark\": {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Leumu"},"content":"                // Ensure args isn\u0027t empty \u0026 parses string to int","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Leumu"},"content":"                int taskNum \u003d parser.parseTaskNum(command, args, tasksSize);","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Leumu"},"content":"                result \u003d markAndSaveTask(taskNum, true);","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Leumu"},"content":"                break;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-22T21:17:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Leumu"},"content":"            case \"unmark\": {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Leumu"},"content":"                int taskNum \u003d parser.parseTaskNum(command, args, tasksSize);","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Leumu"},"content":"                result \u003d markAndSaveTask(taskNum, false);","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Leumu"},"content":"                break;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Leumu"},"content":"            case \"todo\": {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Leumu"},"content":"                // Ensures arg isn\u0027t empty","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Leumu"},"content":"                parser.checkArg(command, args);","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Leumu"},"content":"                // New to do object","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Leumu"},"content":"                Task todoTask \u003d new Todo(args);","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Leumu"},"content":"                result \u003d addAndSaveTask(todoTask);","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Leumu"},"content":"                break;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Leumu"},"content":"            case \"deadline\": {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Leumu"},"content":"                parser.checkArg(command, args);","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Leumu"},"content":"                String[] parts \u003d parser.parseDeadline(args);","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Leumu"},"content":"                // New deadline object, parts[0] \u003d taskName, parts[1] \u003d dueDate","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Leumu"},"content":"                Deadline deadlineTask \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Leumu"},"content":"                result \u003d addAndSaveTask(deadlineTask);","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Leumu"},"content":"                break;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Leumu"},"content":"            case \"event\": {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Leumu"},"content":"                parser.checkArg(command, args);","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Leumu"},"content":"                String[] parts \u003d parser.parseEvent(args);","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Leumu"},"content":"                // New event object, parts[0] \u003d taskName, parts[1] \u003d startDate, parts[2] \u003d endDate","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Leumu"},"content":"                Event eventTask \u003d new Event(parts[0], parts[1], parts[2]);","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Leumu"},"content":"                result \u003d addAndSaveTask(eventTask);","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Leumu"},"content":"                break;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-22T21:17:37","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Leumu"},"content":"            case \"delete\": {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Leumu"},"content":"                // Gets unsorted parsed int array to show that we deleted the tasks in the order he specified","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Leumu"},"content":"                int[] parsedDeleteIndexes \u003d parser.parseDelete(args, tasksSize);","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Leumu"},"content":"                // Gets sorted array in descending order to ensure indices when deleting is correct","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Leumu"},"content":"                int[] descDeleteIndexes \u003d parser.descDeleteArray(parsedDeleteIndexes);","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Leumu"},"content":"                // Saves the UI result before deletion as deletion messes up the indices","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Leumu"},"content":"                for (int i \u003d 0; i \u003c parsedDeleteIndexes.length; i++) {","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Leumu"},"content":"                    result +\u003d ui.showTaskRemoved(","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Leumu"},"content":"                            tasks.get(parsedDeleteIndexes[i]),","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Leumu"},"content":"                            tasks.getSize());","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Leumu"},"content":"                }","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Leumu"},"content":"                for (int i \u003d 0; i \u003c descDeleteIndexes.length; i++) {","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Leumu"},"content":"                    tasks.deleteTask(descDeleteIndexes[i]);","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Leumu"},"content":"                }","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T15:02:28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Leumu"},"content":"                // Save after change","lastModifiedDate":"2025-08-29T15:02:28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Leumu"},"content":"                Storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Leumu"},"content":"                break;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Leumu"},"content":"            case \"find\": {","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Leumu"},"content":"                parser.checkArg(command, args);","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Leumu"},"content":"                // Ensures encapsulation is kept, giving all ArrayLists\u003cTask\u003e to TaskList","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Leumu"},"content":"                TaskList matchingTasks \u003d tasks.findTasks(args);","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Leumu"},"content":"                result \u003d ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Leumu"},"content":"                break;","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Leumu"},"content":"            default: {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Leumu"},"content":"                // Unrecognized command","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Leumu"},"content":"                throw new AiryException(\"Unrecognized command\");","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Leumu"},"content":"        } catch (AiryException e) { // Catch exceptions","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Leumu"},"content":"            return e.getMessage();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Leumu"},"content":"        return result;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-22T04:54:42","isFullCredit":false}],"authorContributionMap":{"Leumu":160}},{"path":"src/main/java/airy/AiryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":" * This is an exception for my chatbot","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":" * It is an unchecked exception and allows the code to throw it","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"public class AiryException extends RuntimeException {","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"     * Constructs a new AiryException with the error message.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"     * @param message Error message that explains the reason for the exception.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"    public AiryException(String message) {","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"        super(message);","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-22T20:17:06","isFullCredit":false}],"authorContributionMap":{"Leumu":17}},{"path":"src/main/java/airy/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":" * This class is a subclass from task","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":" * A task with a deadline","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"     * Constructs a new Deadline task with the specified name and due date.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"     * @param taskName the description or name of the deadline task","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"     * @param dueDate the due date of the task in {yyyy-MM-dd} format","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"     * @throws AiryException if the date string cannot be parsed using the expected format","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"    public Deadline(String taskName, String dueDate) {","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"        super(taskName);","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"        assert taskName !\u003d null \u0026\u0026 !taskName.isBlank() : \"Task name must not be empty\";","lastModifiedDate":"2025-09-13T03:26:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"        try {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"            this.dueDate \u003d LocalDate.parse(dueDate, INPUT_FORMAT);","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"            throw new AiryException(\"Invalid date format, please use yyyy-MM-dd, e.g. 2025-06-02\");","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"     * Returns a string representation of the Deadline task for display to the user.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"     * @return a formatted string representation of the deadline task","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"    @Override","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T18:03:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"                super.toString(),","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Leumu"},"content":"                dueDate.format(OUTPUT_FORMAT));","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Leumu"},"content":"     * Returns the dueDate in input format for Storage","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Leumu"},"content":"     * @return a string containing the due date in storage format","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Leumu"},"content":"    @Override","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Leumu"},"content":"    public String getExtraDetailsForStorage() {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Leumu"},"content":"        return dueDate.format(INPUT_FORMAT);","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false}],"authorContributionMap":{"Leumu":54}},{"path":"src/main/java/airy/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":" * This class is a subclass from task","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":" * A task with a starting date and an end date","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"     * Constructs a new Event task with the specified name, start date, and end date.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"     * @param taskName the description or name of the event task","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"     * @param startDate the start date of the event in {yyyy-MM-dd} format","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"     * @param endDate the end date of the event in {yyyy-MM-dd} format","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"     * @throws AiryException if either date string cannot be parsed using the expected format","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"    public Event(String taskName, String startDate, String endDate) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"        super(taskName);","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"        assert taskName !\u003d null \u0026\u0026 !taskName.isBlank() : \"Task name must not be empty\";","lastModifiedDate":"2025-09-13T01:03:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"        try {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"            this.startDate \u003d LocalDate.parse(startDate, INPUT_FORMAT);","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"            this.endDate \u003d LocalDate.parse(endDate, INPUT_FORMAT);","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"            throw new AiryException(\"Invalid date format, please use yyyy-MM-dd, e.g. 2025-06-02\");","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"     * Returns a string representation of the Event task for display to the user.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"     * @return a formatted string representation of the event task","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Leumu"},"content":"    @Override","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Leumu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T18:03:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Leumu"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Leumu"},"content":"                super.toString(),","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Leumu"},"content":"                startDate.format(OUTPUT_FORMAT),","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Leumu"},"content":"                endDate.format(OUTPUT_FORMAT));","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Leumu"},"content":"     * Provides the date information in a format suitable for storage.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Leumu"},"content":"     * The dates are returned in the input format ({yyyy-MM-dd}).","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Leumu"},"content":"     * @return a string containing the start and end dates in storage format, separated by \" | \"","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Leumu"},"content":"    @Override","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Leumu"},"content":"    public String getExtraDetailsForStorage() {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Leumu"},"content":"        return startDate.format(INPUT_FORMAT) + \" | \" + endDate.format(INPUT_FORMAT);","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false}],"authorContributionMap":{"Leumu":60}},{"path":"src/main/java/airy/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":" * This class parses the input of the user","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"public class Parser {","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"     * Parses the raw user input into a command and its arguments.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"     * @param input The full input string from the user.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"     * @return A String array of size 2. The first element is the lowercase command,","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"     *         the second element is the remaining arguments string.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"    public String[] parse(String input) {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"        String trimInput \u003d input.trim();","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"        String args;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"        // (\\\\s+) finds the first occurrence of whitespace and splits the string there","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"        String[] parts \u003d trimInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"        String command \u003d parts[0].toLowerCase(); // First word is command","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"            args \u003d parts[1].trim();","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"        } else {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"            args \u003d \"\";","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"        return new String[]{command, args};","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"     * Parses the args to convert String to Int","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"     * @param command The command being executed (e.g., \"mark\", \"delete\").","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"     * @param args The argument string provided by the user.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"     * @param tasksSize The size of the ArrayList that contains all the tasks","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"     * @return The parsed task number, converted to a zero-based index.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"    public int parseTaskNum(String command, String args, int tasksSize) {","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Leumu"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Leumu"},"content":"            throw new AiryException(\"Please enter a number after \" + command + \" to mark/unmark a task\");","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Leumu"},"content":"        // Gets the number after the command, -1 cause array is 0 indexed","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Leumu"},"content":"        int taskNum \u003d Integer.parseInt(args.trim()) - 1;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Leumu"},"content":"        if (taskNum \u003c 0 || taskNum \u003e tasksSize - 1) {","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Leumu"},"content":"            throw new AiryException(\"Task number does not exist\");","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Leumu"},"content":"        return taskNum;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Leumu"},"content":"     * Ensures there is an argument present for Tasks such as To do, Deadline, Event","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Leumu"},"content":"     * @param command The command being executed (e.g., \"to do\", \"deadline\").","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Leumu"},"content":"     * @param args The argument string provided by the user.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Leumu"},"content":"     * @throws AiryException If the argument string is empty.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Leumu"},"content":"    public void checkArg(String command, String args) {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Leumu"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Leumu"},"content":"            throw new AiryException(\"Please enter a task name after \" + command);","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Leumu"},"content":"     * Parses a Deadline task command into its individual args.","lastModifiedDate":"2025-09-13T16:30:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Leumu"},"content":"     * @param args The full argument string for the command.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Leumu"},"content":"     * @return A String array containing the parsed components.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Leumu"},"content":"    public String[] parseDeadline(String args) {","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Leumu"},"content":"        String[] parts \u003d args.split(\"/by\");","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Leumu"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Leumu"},"content":"            throw new AiryException(","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Leumu"},"content":"                    \"Please do /by before entering the due date. E.g. deadline return book /by Sunday\");","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Leumu"},"content":"        return trimParts(parts);","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Leumu"},"content":"     * Parses an Event task command into its individual args.","lastModifiedDate":"2025-09-13T16:30:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Leumu"},"content":"     * @param args The full argument string for the command.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Leumu"},"content":"     * @return A String array containing the parsed components.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Leumu"},"content":"    public String[] parseEvent(String args) {","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Leumu"},"content":"        // Split string whenever u see /from or /to","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Leumu"},"content":"        String[] parts \u003d args.split(\"/from|/to\");","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Leumu"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Leumu"},"content":"            throw new AiryException(","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Leumu"},"content":"                    \"Please do /from before entering the start date and /to before entering the end date\"","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Leumu"},"content":"                            + \" E.g. event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Leumu"},"content":"        return trimParts(parts);","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Leumu"},"content":"     * Parses Delete args to split them into individual args.","lastModifiedDate":"2025-09-13T16:30:05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Leumu"},"content":"     * Allows user to mass delete.","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Leumu"},"content":"     * E.g. Delete 2 3, extract 2 and 3 from there.","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Leumu"},"content":"     * @param args The full argument string for the command.","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Leumu"},"content":"     * @param tasksSize The size of the ArrayList that contains all the tasks","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Leumu"},"content":"     * @return An int array containing the parsed components.","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Leumu"},"content":"    public int[] parseDelete(String args, int tasksSize) {","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Leumu"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Leumu"},"content":"            throw new AiryException(\"Please use \u0027delete \u003ctask numbers\u003e\u0027 to remove one or more tasks.\");","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Leumu"},"content":"        // Split string based on white spaces","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Leumu"},"content":"        String[] parts \u003d args.split(\"\\\\s+\");","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Leumu"},"content":"        // Trim \u0026 reduce the index by 1 for each int the user inputted","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Leumu"},"content":"        int[] deleteIndexes \u003d new int[parts.length];","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Leumu"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Leumu"},"content":"            int deleteIndex \u003d Integer.parseInt(parts[i].trim()) - 1;","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Leumu"},"content":"            if (deleteIndex \u003c 0 || deleteIndex \u003e tasksSize - 1) {","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Leumu"},"content":"                throw new AiryException(\"Task number does not exist\");","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Leumu"},"content":"            deleteIndexes[i] \u003d deleteIndex;","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Leumu"},"content":"        return deleteIndexes;","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Leumu"},"content":"     * Sorts the int array in descending order so that the delete indexing remains correct.","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Leumu"},"content":"     * @param deleteIndexes Takes in the parsed int array of delete indexes.","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Leumu"},"content":"     * @return Returns a sorted int array in descending order.","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Leumu"},"content":"    public int[] descDeleteArray(int[] deleteIndexes) {","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Leumu"},"content":"        // Sort descending as if I delete e.g. task 1, then the next deletion e.g. task 3 is no longer accurate","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Leumu"},"content":"        // as ArrayList auto decreases the index upon delete","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Leumu"},"content":"        return Arrays.stream(deleteIndexes)","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Leumu"},"content":"                .boxed() // Convert int to Integer for sorting","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Leumu"},"content":"                .sorted(Comparator.reverseOrder())","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Leumu"},"content":"                .mapToInt(Integer::intValue) // Convert stream of Integer into stream of int","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Leumu"},"content":"                .toArray(); // Give me array of int","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-13T05:41:22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Leumu"},"content":"     * Trims the parts to remove whitespace.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Leumu"},"content":"     * @param parts A String array containing the untrimmed components.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Leumu"},"content":"     * @return A String array containing the trimmed components.","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Leumu"},"content":"    public String[] trimParts(String[] parts) {","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Leumu"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Leumu"},"content":"            parts[i] \u003d parts[i].trim();","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Leumu"},"content":"        return parts;","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false}],"authorContributionMap":{"Leumu":153}},{"path":"src/main/java/airy/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":" * Class to store the data to the files and fetch data from files","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"public class Storage {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"    private static final Path DATA_FOLDER \u003d Paths.get(\"data\");","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"    private static final Path DATA_FILE \u003d DATA_FOLDER.resolve(\"Airy.txt\"); // Goes to data/Airy.txt path","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"     * Creates the file if it does not exist","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"     * @throws AiryException if the directory or file cannot be created","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"    private static void fileExists() {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"        try {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"            if (!Files.exists(DATA_FOLDER)) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"                Files.createDirectories(DATA_FOLDER);","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"            if (!Files.exists(DATA_FILE)) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"                Files.createFile(DATA_FILE);","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"            throw new AiryException(\"Error creating data file\"); // Throws an error","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T15:49:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"     * Loads tasks from ./data/Airy.txt.","lastModifiedDate":"2025-08-29T15:49:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"     * Create file if it doesn\u0027t exist it and returns empty list.","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"     * @return an ArrayList containing all loaded tasks, or an empty list if no tasks exist or errors occur","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Leumu"},"content":"    public static ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Leumu"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Leumu"},"content":"        try {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Leumu"},"content":"            fileExists();","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Leumu"},"content":"            // Guard clause to exit early if file is empty","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Leumu"},"content":"            if (Files.size(DATA_FILE) \u003d\u003d 0) {","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Leumu"},"content":"                return tasks;","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Leumu"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(DATA_FILE); // If file is empty, it throws an error","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Leumu"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Leumu"},"content":"                Task t \u003d createTask(line); // Creates the task","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Leumu"},"content":"                if (t !\u003d null) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Leumu"},"content":"                    tasks.add(t); // Stores the task in the ArrayList","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Leumu"},"content":"                }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Leumu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Leumu"},"content":"            // Log but do not throw","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Leumu"},"content":"            System.out.println(\"Warning, could not load tasks, starting with empty list instead.\");","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Leumu"},"content":"        return tasks;","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Leumu"},"content":"     * Creates task from the raw data fetched from the file","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Leumu"},"content":"     * @param line a single line from the storage file","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Leumu"},"content":"     * @return the created Task object, or null if the line format is invalid","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Leumu"},"content":"    private static Task createTask(String line) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Leumu"},"content":"        // Split into at most 4 pieces","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Leumu"},"content":"        String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\", 5);","lastModifiedDate":"2025-08-29T15:49:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Leumu"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Leumu"},"content":"            return null;","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Leumu"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Leumu"},"content":"        boolean isCompleted \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-08-29T15:49:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Leumu"},"content":"        String name \u003d parts[2].trim();","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Leumu"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Leumu"},"content":"        // Switch statement to create respective tasks based on their data","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Leumu"},"content":"        switch (type) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Leumu"},"content":"        case \"T\": // To do Type","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Leumu"},"content":"            task \u003d new Todo(name);","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Leumu"},"content":"            break;","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Leumu"},"content":"        case \"D\": // Deadline Type","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Leumu"},"content":"            assert parts.length \u003d\u003d 4 : \"Deadline type must have 5 parts\";","lastModifiedDate":"2025-09-13T01:03:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Leumu"},"content":"            if (parts.length \u003d\u003d 4) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Leumu"},"content":"                String dueDate \u003d parts[3].trim();","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Leumu"},"content":"                task \u003d new Deadline(name, dueDate);","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Leumu"},"content":"            break;","lastModifiedDate":"2025-08-30T03:25:31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Leumu"},"content":"        case \"E\": // Event Type","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Leumu"},"content":"            assert parts.length \u003d\u003d 5 : \"Event type must have 5 parts\";","lastModifiedDate":"2025-09-13T01:03:56","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Leumu"},"content":"            if (parts.length \u003d\u003d 5) {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Leumu"},"content":"                String startDate \u003d parts[3].trim();","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Leumu"},"content":"                String endDate \u003d parts[4].trim();","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Leumu"},"content":"                task \u003d new Event(name, startDate, endDate);","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Leumu"},"content":"            break;","lastModifiedDate":"2025-08-30T03:25:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Leumu"},"content":"        default:","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Leumu"},"content":"            return null;","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Leumu"},"content":"        if (task !\u003d null \u0026\u0026 isCompleted) {","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Leumu"},"content":"            task.markCompleted();","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Leumu"},"content":"        return task;","lastModifiedDate":"2025-09-05T09:51:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Leumu"},"content":"     * Saves the current tasks list to ./data/Airy.txt","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Leumu"},"content":"     * Note it overwrites the file","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Leumu"},"content":"     * @param tasks the list of tasks to be saved to storage","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Leumu"},"content":"    public static void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Leumu"},"content":"        List\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Leumu"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Leumu"},"content":"            data.add(taskFormat(task)); // Change formatting for every Task inside ArrayList tasks to a String","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Leumu"},"content":"        try {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Leumu"},"content":"            fileExists();","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Leumu"},"content":"            // Truncate file before writing","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Leumu"},"content":"            Files.write(DATA_FILE, data,","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Leumu"},"content":"                    StandardOpenOption.TRUNCATE_EXISTING, StandardOpenOption.WRITE);","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Leumu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Leumu"},"content":"            System.out.println(\"Could not save tasks to storage.\");","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Leumu"},"content":"     * Converts a Task object into a string with formatting for storage.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Leumu"},"content":"     * @param t the Task object to be serialized","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Leumu"},"content":"     * @return a string representation of the task in storage format","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Leumu"},"content":"    private static String taskFormat(Task t) {","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Leumu"},"content":"        String isCompleted \u003d t.getStatus().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Leumu"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Leumu"},"content":"            return String.format(\"T | %s | %s\", isCompleted, t.getTaskName());","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Leumu"},"content":"        } else if (t instanceof Deadline) {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Leumu"},"content":"            return String.format(\"D | %s | %s | %s\", isCompleted, t.getTaskName(), t.getExtraDetailsForStorage());","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Leumu"},"content":"        } else {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Leumu"},"content":"            assert t instanceof Event : \"Unknown task type encountered\";","lastModifiedDate":"2025-09-13T01:03:56","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Leumu"},"content":"            return String.format(\"E | %s | %s | %s\", isCompleted, t.getTaskName(), t.getExtraDetailsForStorage());","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false}],"authorContributionMap":{"Leumu":153}},{"path":"src/main/java/airy/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":" * Task object to keep track of task name and status","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"    private final String taskName;","lastModifiedDate":"2025-08-29T23:29:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"    private Boolean isCompleted;","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"     * Constructs a new Task with the specified name.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"     * @param taskName the name of the task","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"    public Task(String taskName) {","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"     * Returns the completion status of the task","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"     * @return \"X\" if the task is completed, a single space \" \" if not completed","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"    public String getStatus() {","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"        return (isCompleted ? \"X\" : \" \");","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"     * Marks the task as completed","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"    public void markCompleted() {","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"     * Marks the task as uncompleted","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"    public void markUncompleted() {","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Leumu"},"content":"     * Fetches the name of the task.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Leumu"},"content":"     * @return the task description string","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Leumu"},"content":"    public String getTaskName() {","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Leumu"},"content":"        return taskName;","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Leumu"},"content":"     * Returns a String format that has the completion status indicator and task name.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Leumu"},"content":"     * @return a formatted string showing the task\u0027s status and name","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Leumu"},"content":"    @Override","lastModifiedDate":"2025-08-22T18:03:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Leumu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T18:03:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Leumu"},"content":"        return String.format(\"[%s] %s\", getStatus(), getTaskName());","lastModifiedDate":"2025-08-22T18:03:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T18:03:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Leumu"},"content":"     * Gets extra details, esp for Tasks like Deadline and Event for Storage class","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Leumu"},"content":"     * @return a string containing task-specific details in storage format","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Leumu"},"content":"    public abstract String getExtraDetailsForStorage();","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-22T14:50:18","isFullCredit":false}],"authorContributionMap":{"Leumu":69}},{"path":"src/main/java/airy/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":" * This class holds the task ArrayList","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":" * Handles logic for the ArrayList","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"public class TaskList {","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"     * Constructor that takes in an ArrayList from Storage.load()","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"     * @param tasks the initial collection of tasks to manage","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"     * Adds a task to this ArrayList","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"     * @param task the task object to add to the ArrayList","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"     * Removes a task to this ArrayList","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"     * @param index the index of the task to remove","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"     * @return the task that was removed from the ArrayList","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds for deleteTask\";","lastModifiedDate":"2025-09-13T01:03:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Leumu"},"content":"     * Marks a task in ArrayList","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Leumu"},"content":"     * @param index mark task as completed","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Leumu"},"content":"     * @return the task that was marked as completed","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Leumu"},"content":"    public Task markTask(int index) {","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Leumu"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds for markTask\";","lastModifiedDate":"2025-09-13T01:03:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Leumu"},"content":"        Task t \u003d tasks.get(index);","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Leumu"},"content":"        t.markCompleted();","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Leumu"},"content":"        return t;","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Leumu"},"content":"     * Unmarks a task in ArrayList","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Leumu"},"content":"     * @param index mark task as not completed","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Leumu"},"content":"     * @return the task that was marked as not completed","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Leumu"},"content":"    public Task unmarkTask(int index) {","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Leumu"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds for unmarkTask\";","lastModifiedDate":"2025-09-13T01:03:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Leumu"},"content":"        Task t \u003d tasks.get(index);","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Leumu"},"content":"        t.markUncompleted();","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Leumu"},"content":"        return t;","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Leumu"},"content":"     * Returns the size of this ArrayList","lastModifiedDate":"2025-09-13T16:30:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Leumu"},"content":"     * @return the number of tasks in the collection","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Leumu"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Leumu"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Leumu"},"content":"     * Fetches this ArrayList","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Leumu"},"content":"     * @return the ArrayList containing all managed tasks","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Leumu"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Leumu"},"content":"        return tasks;","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Leumu"},"content":"     * Returns the task at the specified index in the ArrayList.","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Leumu"},"content":"     * @param index the index of the task to return","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Leumu"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Leumu"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Leumu"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds for get\";","lastModifiedDate":"2025-09-13T01:03:56","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Leumu"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Leumu"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Leumu"},"content":"     * @return true if the list contains no tasks","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Leumu"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Leumu"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Leumu"},"content":"     * Finds all tasks that contain the given keyword in their description.","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Leumu"},"content":"     * @param searchInput the search term to look for in task name","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Leumu"},"content":"     * @return a new TaskList containing only the tasks that match the search criteria","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Leumu"},"content":"    public TaskList findTasks(String searchInput) {","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Leumu"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Leumu"},"content":"        assert searchInput !\u003d null : \"SearchInput should not be null\";","lastModifiedDate":"2025-09-13T01:03:56","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Leumu"},"content":"        String lowerSearchInput \u003d searchInput.toLowerCase();","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Leumu"},"content":"        // Iterate over whole tasks ArrayList to see if any match the search input","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Leumu"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Leumu"},"content":"            if (task.getTaskName().toLowerCase().contains(lowerSearchInput)) {","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Leumu"},"content":"                foundTasks.add(task);","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Leumu"},"content":"        return new TaskList(foundTasks);","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false}],"authorContributionMap":{"Leumu":124}},{"path":"src/main/java/airy/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":" * This class is a subclass from task","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":" * Works like a normal task without deadlines","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"     * Constructs a new To do task with the specified description.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"     * @param taskName the name of the to do task","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"        super(taskName);","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"        assert taskName !\u003d null \u0026\u0026 !taskName.isBlank() : \"Task name must not be empty\";","lastModifiedDate":"2025-09-13T03:26:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"     * Provides info of the to do task in string format","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"     * @return a formatted string representation of the to do task","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"    @Override","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T18:03:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-08-22T18:03:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"     * Since To do tasks do not have any additional details beyond the basic","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"     * task information, this method returns an empty string.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"     * @return an empty string, as To do tasks have no extra storage details","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"    @Override","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"    public String getExtraDetailsForStorage() {","lastModifiedDate":"2025-08-29T17:54:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"        return \"\"; // nothing extra","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T14:54:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-22T15:53:29","isFullCredit":false}],"authorContributionMap":{"Leumu":39}},{"path":"src/main/java/airy/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T23:45:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":" * This class handles all UI methods the bot has","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"public class Ui {","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"    private String name \u003d \"Airy\";","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"     * Sends welcome message","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"        return \"Hello! I\u0027m \" + name + \"\\nWhat can I do for you?\\n\";","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"     * Sends bye message","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"    public String byeMessage() {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"     * Displays the complete list of tasks to the user.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"     * @param tasks the ArrayList of tasks to display","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"    public String showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"        // Print out saved tasks","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"            Task taskObj \u003d tasks.get(i);","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"            sb.append(String.format(\"%d. %s\\n\",","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"                    i + 1,","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"                    taskObj.toString()));","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Leumu"},"content":"     * Confirms that a task has been successfully added to the list.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Leumu"},"content":"     * Shows the added task and updates the user on the total task count.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Leumu"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Leumu"},"content":"     * @param total the new total number of tasks in the list","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Leumu"},"content":"    public String showTaskAdded(Task task, int total) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Leumu"},"content":"        return String.format(","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Leumu"},"content":"                \"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\\n\",","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Leumu"},"content":"                task,","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Leumu"},"content":"                total","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Leumu"},"content":"        );","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Leumu"},"content":"     * Confirms that a task has been successfully removed from the list.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Leumu"},"content":"     * Shows the removed task and updates the user on the total task count.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Leumu"},"content":"     * @param task the task that was removed","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Leumu"},"content":"     * @param total the new total number of tasks in the list","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Leumu"},"content":"    public String showTaskRemoved(Task task, int total) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Leumu"},"content":"        return String.format(","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Leumu"},"content":"                \"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\\n\\n\",","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Leumu"},"content":"                task,","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Leumu"},"content":"                total","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Leumu"},"content":"        );","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Leumu"},"content":"     * Confirms that a task has been marked as completed.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Leumu"},"content":"     * @param task the task that is to be marked as done","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Leumu"},"content":"    public String showMark(Task task) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Leumu"},"content":"        return String.format(","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Leumu"},"content":"                \"Nice! I\u0027ve marked this task as done:\\n%s\\n\\n\",","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Leumu"},"content":"                task","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Leumu"},"content":"        );","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Leumu"},"content":"     * Confirms that a task has been marked as not completed.","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Leumu"},"content":"     * @param task the task that is to be marked as not done","lastModifiedDate":"2025-08-30T03:17:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Leumu"},"content":"    public String showUnmark(Task task) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Leumu"},"content":"        return String.format(","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Leumu"},"content":"                \"OK, I\u0027ve marked this task as not done yet:\\n%s\\n\\n\",","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Leumu"},"content":"                task","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Leumu"},"content":"        );","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-29T22:02:18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Leumu"},"content":"     * Displays the list of tasks that match the search criteria.","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Leumu"},"content":"     * Displays a message if no matching tasks are found.","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Leumu"},"content":"     * @param matchingTasks the list of tasks that match the search","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Leumu"},"content":"    public String showMatchingTasks(TaskList matchingTasks) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Leumu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Leumu"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Leumu"},"content":"            sb.append(\"No matching tasks found.\\n\\n\");","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Leumu"},"content":"        } else {","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Leumu"},"content":"            sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Leumu"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.getSize(); i++) {","lastModifiedDate":"2025-09-13T02:55:58","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Leumu"},"content":"                Task taskObj \u003d matchingTasks.get(i);","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Leumu"},"content":"                sb.append(String.format(\"%d. %s\\n\", i + 1, taskObj));","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Leumu"},"content":"            }","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Leumu"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Leumu"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-30T03:54:40","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-29T21:00:09","isFullCredit":false}],"authorContributionMap":{"Leumu":118}},{"path":"src/main/java/app/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package app;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"        try {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Leumu"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Leumu"},"content":"    private void flip() {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Leumu"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Leumu"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Leumu"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Leumu"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Leumu"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Leumu"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Leumu"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Leumu"},"content":"    public static DialogBox getAiryDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Leumu"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Leumu"},"content":"        db.flip();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Leumu"},"content":"        return db;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false}],"authorContributionMap":{"Leumu":61}},{"path":"src/main/java/app/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package app;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"public class Launcher {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false}],"authorContributionMap":{"Leumu":12}},{"path":"src/main/java/app/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package app;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"import airy.Airy;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"    private final Airy airy \u003d new Airy();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"    @Override","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"        try {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"            // Get controller","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"            // Inject Airy instance","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"            controller.setAiry(airy);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"            // Show the welcome message","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"            controller.displayWelcome(airy.getWelcomeUi());","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"            stage.show();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false}],"authorContributionMap":{"Leumu":41}},{"path":"src/main/java/app/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package app;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import airy.Airy;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"    private Airy airy;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Peter.png\"));","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"    private final Image airyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Brian.png\"));","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"    public void setAiry(Airy d) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"        airy \u003d d;","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Leumu"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Leumu"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Leumu"},"content":"    @FXML","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Leumu"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Leumu"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Leumu"},"content":"        String response \u003d airy.getResponse(input);","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Leumu"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Leumu"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Leumu"},"content":"                DialogBox.getAiryDialog(response, airyImage)","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Leumu"},"content":"        );","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Leumu"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Leumu"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Leumu"},"content":"            // Delay the close for user to see the bye message","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Leumu"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.5));","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Leumu"},"content":"            // Needed as its asynchronous. We cannot use synchronous for javaFX.","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Leumu"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Leumu"},"content":"            delay.play();","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Leumu"},"content":"        }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Leumu"},"content":"     * Displays a welcome message in the dialog container.","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Leumu"},"content":"     *","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Leumu"},"content":"     * @param text the message to be displayed","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-06T01:53:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Leumu"},"content":"    public void displayWelcome(String text) {","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Leumu"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Leumu"},"content":"                DialogBox.getAiryDialog(text, airyImage)","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Leumu"},"content":"        );","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false}],"authorContributionMap":{"Leumu":76}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22.0.4\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false}],"authorContributionMap":{"Leumu":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../main.css\" xmlns\u003d\"http://javafx.com/javafx/22.0.4\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"app.MainWindow\"\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-06T01:04:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-06T00:28:29","isFullCredit":false}],"authorContributionMap":{"Leumu":19}},{"path":"src/test/java/airy/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-12T17:45:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-12T17:45:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-12T17:45:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":" * JUnit test for the Deadline class.","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":" * Verifies that outputs match expected results after executing commands on given inputs.","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"     * Tests that a Deadline object is created correctly.","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"     * Verifies that the task name, deadline, and string match the expected values.","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"    @Test","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"    public void testDeadlineCreation_validDeadline_success() {","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"        Deadline d \u003d new Deadline(\"Return book\", \"2025-06-02\");","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"        assertEquals(\"Return book\", d.getTaskName());","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"        assertEquals(\"2025-06-02\", d.getExtraDetailsForStorage());","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"        assertEquals(\"[D][ ] Return book (by: Jun 02 2025)\", d.toString());","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"     * Tests that marking a Deadline task as completed will update its status and String correctly.","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"    @Test","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"    public void markCompleted_deadlineTask_updated() {","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"        Deadline d \u003d new Deadline(\"Return book\", \"2025-06-02\");","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"        d.markCompleted();","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"        assertEquals(\"X\", d.getStatus());","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"        assertEquals(\"[D][X] Return book (by: Jun 02 2025)\", d.toString());","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false}],"authorContributionMap":{"Leumu":37}},{"path":"src/test/java/airy/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"package airy;","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-12T17:45:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-12T17:45:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-12T17:45:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-12T17:45:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-09-12T17:45:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"/**","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":" * JUnit test for the TaskList class.","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":" * Verifies that outputs match expected results.","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Leumu"},"content":" */","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Leumu"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Leumu"},"content":"     * Tests that adding a Task to TaskList","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Leumu"},"content":"     * increases the list size and stores the task correctly.","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Leumu"},"content":"    @Test","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Leumu"},"content":"    public void addTask_validTask_success() {","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Leumu"},"content":"        // Empty ArrayList","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Leumu"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Leumu"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Leumu"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Leumu"},"content":"        assertEquals(todo, tasks.getTasks().get(0));","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Leumu"},"content":"    /**","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Leumu"},"content":"     * Tests that marking a task at a valid index in TaskList updates its status.","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Leumu"},"content":"     */","lastModifiedDate":"2025-09-05T14:11:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Leumu"},"content":"    @Test","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Leumu"},"content":"    public void markTask_validIndex_taskMarked() {","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Leumu"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Leumu"},"content":"        Todo todo \u003d new Todo(\"Borrow book\");","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Leumu"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Leumu"},"content":"        Task taskMark \u003d tasks.markTask(0);","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Leumu"},"content":"","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Leumu"},"content":"        assertEquals(\"X\", taskMark.getStatus());","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Leumu"},"content":"    }","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Leumu"},"content":"}","lastModifiedDate":"2025-08-30T02:10:09","isFullCredit":false}],"authorContributionMap":{"Leumu":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Leumu"},"content":"todo borrow book","lastModifiedDate":"2025-08-22T18:48:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Leumu"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T18:48:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Leumu"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T18:48:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Leumu"},"content":"list","lastModifiedDate":"2025-08-22T18:48:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Leumu"},"content":"mark 1","lastModifiedDate":"2025-08-22T18:48:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Leumu"},"content":"list","lastModifiedDate":"2025-08-22T18:48:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Leumu"},"content":"unmark 1","lastModifiedDate":"2025-08-22T18:48:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Leumu"},"content":"list","lastModifiedDate":"2025-08-22T18:48:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Leumu"},"content":"delete 3","lastModifiedDate":"2025-08-22T21:17:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Leumu"},"content":"list","lastModifiedDate":"2025-08-22T21:17:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Leumu"},"content":"bye","lastModifiedDate":"2025-08-22T18:48:03","isFullCredit":false}],"authorContributionMap":{"Leumu":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Leumu"},"content":"java -classpath ../bin Airy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T18:48:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"Leumu":1,"-":37}}]
