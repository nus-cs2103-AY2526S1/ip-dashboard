[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"# reboot.Reboot project template","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"1. After that, locate the `src/main/java/reboot.Reboot.java` file, right-click it, and choose `Run reboot.Reboot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"ronniefun1":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-02T03:52:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"    mainClass.set(\"reboot.Reboot\")","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"    archiveBaseName \u003d \"reboot\"","lastModifiedDate":"2025-09-02T14:08:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-09-02T03:52:19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"ronniefun1":4,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"# reboot.Reboot User Guide","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"ronniefun1":1,"-":29}},{"path":"src/main/java/reboot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.command.*;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Deadline;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Event;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Todo;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":" * Represents a parser that will make sense of user input.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"public class Parser {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"     * Returns a command for the chatbot to complete from specified input.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"     * If unable to understand input, throw IllegalArgumentException.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"     * @param input Input of user to be converted to chatbot command.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"    public static Command parse(String input) throws RebootException {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"        Commands command \u003d Commands.valueOf(words[0].toUpperCase());","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"        switch (command) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"        case BYE:","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"        case LIST:","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"            return new ListCommand();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"        case MARK:","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"            if (words.length \u003d\u003d  1) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"                throw new RebootException(\"Proper usage: mark {task index}\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"            return new MarkCommand(Integer.parseInt(words[1]));","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"        case UNMARK:","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"            if (words.length \u003d\u003d  1) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"                throw new RebootException(\"Proper usage: unmmark {task index}\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"            return new UnmarkCommand(Integer.parseInt(words[1]));","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"        case TODO:","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"                throw new RebootException(\"Proper usage: todo {description}\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"            return new AddCommand(new Todo(words[1], false));","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"        case DEADLINE:","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ronniefun1"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ronniefun1"},"content":"                throw new RebootException(\"Proper usage: deadline {description} /by {due date}\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ronniefun1"},"content":"            // Get the description and due date of task","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ronniefun1"},"content":"            words \u003d words[1].split(\" /by \");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ronniefun1"},"content":"            // Throw exception if either fields are empty","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ronniefun1"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ronniefun1"},"content":"                throw new RebootException(\"Proper usage: deadline {description} /by {due date}\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ronniefun1"},"content":"            return new AddCommand(new Deadline(words[0], false, words[1]));","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ronniefun1"},"content":"        case EVENT:","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ronniefun1"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ronniefun1"},"content":"                throw new RebootException(","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ronniefun1"},"content":"                        \"Proper usage: event {description} /from {start date} /to {end date}\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ronniefun1"},"content":"            // Separate the description and the start/end dates","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ronniefun1"},"content":"            words \u003d words[1].split(\" /from \");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ronniefun1"},"content":"            //Throw exception if description or dates are missing","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ronniefun1"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ronniefun1"},"content":"                throw new RebootException(","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ronniefun1"},"content":"                        \"Proper usage: event {description} /from {start date} /to {end date}\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ronniefun1"},"content":"            String description \u003d words[0];","lastModifiedDate":"2025-09-02T20:20:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ronniefun1"},"content":"            // Separate the start and end dates","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ronniefun1"},"content":"            words \u003d words[1].split(\" /to \");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ronniefun1"},"content":"            //Throw exception if either date is missing","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ronniefun1"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ronniefun1"},"content":"                throw new RebootException(","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ronniefun1"},"content":"                        \"Proper usage: event {description} /from {start date} /to {end date}\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ronniefun1"},"content":"            return new AddCommand(new Event(description, false, words[0], words[1]));","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ronniefun1"},"content":"        case DELETE:","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ronniefun1"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ronniefun1"},"content":"                throw new RebootException(\"Proper usage: delete {task index}\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ronniefun1"},"content":"            return new DeleteCommand(Integer.parseInt(words[1]));","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ronniefun1"},"content":"        case CLEAR:","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ronniefun1"},"content":"            return new ClearCommand();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ronniefun1"},"content":"        case FIND:","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ronniefun1"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ronniefun1"},"content":"                throw new RebootException(","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ronniefun1"},"content":"                        \"Proper usage: find {keyword}\");","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ronniefun1"},"content":"            return new FindCommand(words[1]);","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ronniefun1"},"content":"        default:","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ronniefun1"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + command);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":105}},{"path":"src/main/java/reboot/Reboot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.command.Command;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T13:28:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T20:20:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T20:20:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":" * Represents a chatbot that will be able to track tasks.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"public class Reboot {","lastModifiedDate":"2025-08-21T12:54:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"output/reboot.txt\";","lastModifiedDate":"2025-09-02T20:20:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T20:20:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T13:28:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new Reboot chatbot when given a specified file path.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"     * @param filePath Location of file to store data of tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"    public Reboot(String filePath) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"        try {","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-02T20:20:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"     * Runs the chatbot which will constantly react to user input.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"    public void run() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"        while (!isExit) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"            try {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ronniefun1"},"content":"            } catch (RebootException e) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ronniefun1"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ronniefun1"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ronniefun1"},"content":"                ui.showError(\"I do not understand your language\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-08-21T19:42:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-08-21T15:20:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T13:28:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T13:28:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ronniefun1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ronniefun1"},"content":"        new Reboot(DEFAULT_FILE_PATH).run();","lastModifiedDate":"2025-09-02T20:20:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T12:54:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-08-21T12:54:50","isFullCredit":false}],"authorContributionMap":{"ronniefun1":57}},{"path":"src/main/java/reboot/RebootException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":" * Represents an unchecked exception that is thrown when error occurs.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"public class RebootException extends RuntimeException {","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"    public RebootException(String message) {","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"        super(\"Reboot error: \" + message);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false}],"authorContributionMap":{"ronniefun1":10}},{"path":"src/main/java/reboot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Deadline;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Event;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Task;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Todo;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"import java.util.List;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"import java.util.Optional;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":" * Represents a storage location that will deal with writing to","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":" * and reading from file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"public class Storage {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"    private final Path file;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new storage with the specified file path.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"     * @param filePath Location of file to store data of tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"        this.file \u003d Paths.get(\"output\", filePath);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"     * Checks if the path directory and file exists.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"     * If either does not exist, create it.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"    public void checkFile() {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"        try {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"            // Ensure parent directories exist","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"            if (Files.notExists(file.getParent())) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"                Files.createDirectories(file.getParent());","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"            // Ensure file exists","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"            if (Files.notExists(file)) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ronniefun1"},"content":"                Files.createFile(file);","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ronniefun1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ronniefun1"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ronniefun1"},"content":"     * Returns the tasklist from previous sessions from the storage location","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ronniefun1"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-09-02T20:20:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ronniefun1"},"content":"        checkFile();","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ronniefun1"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ronniefun1"},"content":"        try {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ronniefun1"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(file);","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ronniefun1"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ronniefun1"},"content":"                if (line.startsWith(\"T\") || line.startsWith(\"E\")","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ronniefun1"},"content":"                        || line.startsWith(\"D\")) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ronniefun1"},"content":"                    Optional\u003cTask\u003e t \u003d createTask(line);","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ronniefun1"},"content":"                    t.ifPresent(taskList::add);","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ronniefun1"},"content":"                }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ronniefun1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ronniefun1"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ronniefun1"},"content":"        return taskList;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ronniefun1"},"content":"     * Rewrites the file to include all the tasks in the tasklist","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ronniefun1"},"content":"     * @param taskList List of tasks to be written into the file","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ronniefun1"},"content":"    public void writeFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ronniefun1"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(file)) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ronniefun1"},"content":"            for (Task t : taskList) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ronniefun1"},"content":"                writer.write(t.toFileString());","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ronniefun1"},"content":"                writer.write(System.lineSeparator());","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ronniefun1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ronniefun1"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ronniefun1"},"content":"     * Appends a new task to the file","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ronniefun1"},"content":"     * @param line String to be appended to the file","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ronniefun1"},"content":"    public void appendLine(String line) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ronniefun1"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ronniefun1"},"content":"                file,","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ronniefun1"},"content":"                java.nio.file.StandardOpenOption.CREATE,","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ronniefun1"},"content":"                java.nio.file.StandardOpenOption.APPEND)){","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ronniefun1"},"content":"            writer.write(line);","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ronniefun1"},"content":"            writer.newLine();","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ronniefun1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ronniefun1"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ronniefun1"},"content":"    private static Optional\u003cTask\u003e createTask(String line) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ronniefun1"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ronniefun1"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ronniefun1"},"content":"        boolean status \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ronniefun1"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ronniefun1"},"content":"        switch (type) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ronniefun1"},"content":"        case \"T\":","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ronniefun1"},"content":"            return Optional.of(new Todo(description, status));","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ronniefun1"},"content":"        case \"D\":","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ronniefun1"},"content":"            return Optional.of(new Deadline(description, status, parts[3]));","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ronniefun1"},"content":"        case \"E\":","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ronniefun1"},"content":"            return Optional.of(new Event(description, status, parts[3], parts[4]));","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ronniefun1"},"content":"        default:","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ronniefun1"},"content":"            return Optional.empty();","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false}],"authorContributionMap":{"ronniefun1":123}},{"path":"src/main/java/reboot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Task;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import java.util.List;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":" * Represents a tasklist that will store all the user tasks.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"public class TaskList {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new tasklist that can be used to store tasks.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a tasklist from a list of tasks.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"     * Adds a specified task to the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"     * @param t task to be added to tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"    public void add(Task t) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(t);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"     * Clears the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"    public void clear() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"        tasks.clear();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"     * Removes a specified task to the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"     * @param t task to be removed from tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ronniefun1"},"content":"    public void remove(Task t) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ronniefun1"},"content":"        tasks.remove(t);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ronniefun1"},"content":"     * Returns the size of the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ronniefun1"},"content":"    public int size() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ronniefun1"},"content":"        return tasks.size();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ronniefun1"},"content":"     * Returns the task in the specified index.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ronniefun1"},"content":"     * @param index Index of the specified task in tasklist","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ronniefun1"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ronniefun1"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ronniefun1"},"content":"     * Returns the whole tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ronniefun1"},"content":"    public ArrayList\u003cTask\u003e getAll() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ronniefun1"},"content":"        return tasks;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ronniefun1"},"content":"     * Returns true if tasklist is empty and false if otherwise.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ronniefun1"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ronniefun1"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ronniefun1"},"content":"     * Returns true if specified index is out of range of tasklist","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ronniefun1"},"content":"     * and false if otherwise.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ronniefun1"},"content":"     * @param n Index of input task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ronniefun1"},"content":"    public boolean isOutOfRange(int n) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ronniefun1"},"content":"        return n \u003e tasks.size();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ronniefun1"},"content":"     * Finds tasks in tasklist which contains the specified keyword.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ronniefun1"},"content":"     * @param keyword Keyword to search for in the tasklist.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ronniefun1"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ronniefun1"},"content":"        TaskList results \u003d new TaskList();","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ronniefun1"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ronniefun1"},"content":"            if (t.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ronniefun1"},"content":"                results.add(t);","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ronniefun1"},"content":"        return results;","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":104}},{"path":"src/main/java/reboot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Task;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":" * Represents a UI that will interact with the user.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"public class Ui {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"     * Prints a new line to segregate content for clarity.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"    public void showLine() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"     * Prints the welcome message to the user.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"        System.out.println(\"    Hello! I\u0027m reboot.Reboot the best chatbot\\n\" +","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"                \"    What can the best chatbot do for you?\");","lastModifiedDate":"2025-09-02T20:20:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"     * Reads and returns the input of the user as a string.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"    public String readCommand() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"     * Prints the specified message to the user.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"     * @param message Message to be printed to user.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"        System.out.println(message);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ronniefun1"},"content":"     * Prints the current tasklist of the user.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ronniefun1"},"content":"     * @param tasks Tasklist to be displayed to user.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ronniefun1"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ronniefun1"},"content":"        System.out.print(\"    Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ronniefun1"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ronniefun1"},"content":"            Task t \u003d tasks.get(i - 1);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ronniefun1"},"content":"            System.out.println(\"    \" + i + \". \" + t);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ronniefun1"},"content":"     * Prints the bye message to the user.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ronniefun1"},"content":"    public void showBye() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ronniefun1"},"content":"        System.out.println(\"    Bye. Rate 5 stars.\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ronniefun1"},"content":"     * Prints the specified error message to the user.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ronniefun1"},"content":"     * @param message Error message to be printed.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ronniefun1"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ronniefun1"},"content":"        System.out.println(\"    \" + message);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ronniefun1"},"content":"     * Displays the results of search in ui.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ronniefun1"},"content":"     * @param tasks Tasklist which contains the results of the search.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ronniefun1"},"content":"    public void showSearchResult(TaskList tasks) {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ronniefun1"},"content":"        System.out.println(\"    Here are the results of searching:\");","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ronniefun1"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ronniefun1"},"content":"            Task t \u003d tasks.get(i - 1);","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ronniefun1"},"content":"            System.out.println(\"    \" + i + \". \" + t);","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ronniefun1"},"content":"        showLine();","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":94}},{"path":"src/main/java/reboot/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.command;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Deadline;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Event;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Task;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Todo;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"import reboot.TaskList;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"import reboot.Ui;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"import reboot.Storage;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"import reboot.RebootException;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":" * Represents a command to add a new task to the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"    private final Task task;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new AddCommand with the given Todo task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"     * @param task Todo task to be added to the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"    public AddCommand(Todo task) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new AddCommand with the given Deadline task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"     * @param task Deadline task to be added to the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    public AddCommand(Deadline task) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new AddCommand with the given Event task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"     * @param task Event task to be added to the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"    public AddCommand(Event task) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"     * Adds the specified task to the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"     * Updates the tasklist file via storage.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ronniefun1"},"content":"     * Informs the user via the ui.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ronniefun1"},"content":"     *","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ronniefun1"},"content":"     * @param tasks Tasklist takes in the task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ronniefun1"},"content":"     * @param ui Ui outputs message.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ronniefun1"},"content":"     * @param storage Storage appends line to file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ronniefun1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws RebootException {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ronniefun1"},"content":"        storage.appendLine(task.toFileString());","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ronniefun1"},"content":"        ui.showMessage(\"    Updated\\n      \" + task +","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ronniefun1"},"content":"                \"\\n    \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":59}},{"path":"src/main/java/reboot/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.command;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.RebootException;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.TaskList;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.Ui;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.Storage;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":" * Represents a command that clears the current tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"     * Clears the current tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"     * Updates the tasklist file via storage.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"     * Informs the user via the ui.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"     *","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"     * @param tasks Tasklist to clear.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"     * @param ui Ui outputs message.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"     * @param storage Storage loads tasks into the file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws RebootException {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"        tasks.clear();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"        storage.writeFile(tasks.getAll());","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"        ui.showMessage(\"    Cleared tasklist\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":28}},{"path":"src/main/java/reboot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.command;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.RebootException;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.Storage;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.TaskList;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.Ui;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":" * Represents a generic command that will be parsed by Parser.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":" * Provides common properties and behaviors for all commands.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"     * Abstract method to execute the command.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"     * Subclasses must provide their own implementation for commands.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws RebootException;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"     * Returns true only for ExitCommand.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"     * Returns false for every other command.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"        return false; // default is not exit","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":27}},{"path":"src/main/java/reboot/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.command;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":" * Represents the possible commands that can be taken in by Reboot.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"public enum Commands {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"    LIST, MARK, UNMARK, TODO, DEADLINE,","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"    EVENT, DELETE, BYE, CLEAR, FIND","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-08-21T19:42:21","isFullCredit":false}],"authorContributionMap":{"ronniefun1":9}},{"path":"src/main/java/reboot/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.command;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.*;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Task;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":" * Represents a command that deletes a task from the current tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"    private final int index;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new DeleteCommand with the given task index.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"     * Deletes the specified task from the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"     * Updates the tasklist file via storage.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"     * Informs the user via the ui.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"     *","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"     * @param tasks Tasklist to delete the task from.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"     * @param ui Ui outputs message.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"     * @param storage Storage rewrites file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws RebootException {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"        // Throw exception when number provided is not within index","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"        if (tasks.isOutOfRange(index)) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"            throw new RebootException(\"Only numbers from 1 to \" + tasks.size() + \" are allowed\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"        Task t \u003d tasks.get(index - 1);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"        tasks.remove(t);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"        storage.writeFile(tasks.getAll());","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"        ui.showMessage(\"    Deleting task\\n      \" + t +","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"                \"\\n    \" + tasks.size() + \" tasks in the list\\n\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":44}},{"path":"src/main/java/reboot/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.command;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.TaskList;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.Ui;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.Storage;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.RebootException;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":" * Represents a command that ends the conversation with the chatbot.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"     * Gives the user a bye message via the ui.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"     *","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"     * @param tasks The current Tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"     * @param ui Ui outputs message.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"     * @param storage Storage writes to the file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws RebootException {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"        ui.showBye();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"     * Changes isExit to true to exit the while loop in Reboot.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"        return true;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":32}},{"path":"src/main/java/reboot/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.command;","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.RebootException;","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.Storage;","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.TaskList;","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.Ui;","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":" * Represents a command to find a task with specified keyword.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"    private final String keyword;","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"    public String getKeyword() {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"        return this.keyword;","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"     * @param keyword Keyword to search for in the tasklist.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"     * Finds all available tasks which contains the specified keyword.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"     * Outputs the list via ui.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"     * @param tasks Tasklist to search for results.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"     * @param ui Ui to output results.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"     * @param storage Storage for writing and loading files.","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws RebootException {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"        TaskList results \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"        if (results.isEmpty()) {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"            ui.showMessage(\"No tasks found matching: \" + keyword);","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"        } else {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"            ui.showSearchResult(results);","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false}],"authorContributionMap":{"ronniefun1":45}},{"path":"src/main/java/reboot/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.command;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.TaskList;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.Ui;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.Storage;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.RebootException;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":" * Represents a command that displays the current tasklist if not empty.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"     * Checks if tasklist is empty.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"     * If empty, output message to inform user that list is empty.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"     * If not empty, display the current tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"     *","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"     * @param tasks Tasklist to be displayed.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"     * @param ui Ui outputs message.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"     * @param storage Storage writes lines to file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws RebootException {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"            ui.showMessage(\"list function is useless without any tasks\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"        } else {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"            ui.showTaskList(tasks);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":30}},{"path":"src/main/java/reboot/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.command;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.TaskList;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.Ui;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.Storage;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.RebootException;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Task;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":" * Represents a command that marks a task as completed in the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"    private final int index;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new MarkCommand with the specified index.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"     * @param index index of the task to be mark as completed.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"     * Marks the specified task as completed in the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"     * Updates the tasklist file via storage.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"     * Informs the user via the ui.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"     *","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"     * @param tasks Tasklist with the task to be mark as completed.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"     * @param ui Ui outputs message.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"     * @param storage Storage writes lines to update file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws RebootException {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"        if (tasks.isOutOfRange(index)) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"            throw new RebootException(\"Only numbers from 1 to \" + tasks.size() + \" are allowed\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"        Task t \u003d tasks.get(index - 1);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"        t.mark();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"        storage.writeFile(tasks.getAll());","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"        ui.showMessage(\"    Marked\\n\" + \"      \" + t);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":45}},{"path":"src/main/java/reboot/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.command;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.TaskList;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.Ui;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.Storage;","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.RebootException;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Task;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":" * Represents a command that marks a task as incomplete in the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"    private final int index;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new UnmarkCommand with the specified index.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"     * @param index index of the task to be mark as incomplete.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"     * Unmarks the specified task as incomplete in the tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"     * Updates the tasklist file via storage.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"     * Informs the user via the ui.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"     *","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"     * @param tasks Tasklist with the task to be mark as incomplete.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"     * @param ui Ui outputs message.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"     * @param storage Storage writes lines to update file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws RebootException {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"        if (tasks.isOutOfRange(index)) {","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"            throw new RebootException(\"Only numbers from 1 to \" + tasks.size() + \" are allowed\");","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"        Task t \u003d tasks.get(index - 1);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"        t.unmark();","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"        storage.writeFile(tasks.getAll());","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"        ui.showMessage(\"    Unmarked\\n\" + \"      \" + t);","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":44}},{"path":"src/main/java/reboot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.task;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"    private LocalDate dueDate; // If date is the only thing provided","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"    private LocalDateTime dueDateTime; // If time is provided","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new Deadline with the given description, isDone and dueDate.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"     * @param dueDate Due date of the task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"    public Deadline(String description, boolean isDone, String dueDate) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"        parseInput(dueDate);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"     * Converts the task to a string that can be stored in a file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"    public String toFileString() {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"        if (dueDate !\u003d null) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"            return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"                    + description + \" | \" + dueDate.format(output);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"        } else {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy HHmm\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"            return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"                    + description + \" | \" + dueDateTime.format(output);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"     * Converts the task to a string that can be displayed.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ronniefun1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ronniefun1"},"content":"        if (dueDate !\u003d null) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ronniefun1"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(output) + \")\";","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ronniefun1"},"content":"        } else {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy HHmm\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ronniefun1"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + dueDateTime.format(output) + \")\";","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ronniefun1"},"content":"    private void parseInput(String input) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ronniefun1"},"content":"        try {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ronniefun1"},"content":"            // Try to parse with datetime","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ronniefun1"},"content":"            this.dueDateTime \u003d parseDateTime(input);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ronniefun1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ronniefun1"},"content":"            // Otherwise parse as date only","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ronniefun1"},"content":"            this.dueDate \u003d parseDate(input);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ronniefun1"},"content":"     * Converts the given string to date time format.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ronniefun1"},"content":"     * @param input String to be converted to date time format.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ronniefun1"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ronniefun1"},"content":"        DateTimeFormatter[] formats \u003d {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd MM yyyy HHmm\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy MM dd HHmm\")","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ronniefun1"},"content":"        };","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ronniefun1"},"content":"        for (DateTimeFormatter format : formats) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ronniefun1"},"content":"            try {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ronniefun1"},"content":"                return LocalDateTime.parse(input, format);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ronniefun1"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ronniefun1"},"content":"                // Ignore and try next","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ronniefun1"},"content":"        throw new IllegalArgumentException(\"Invalid date format.\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ronniefun1"},"content":"     * Converts the given string to date format.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ronniefun1"},"content":"     * @param input String to be converted to date format.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ronniefun1"},"content":"    public static LocalDate parseDate(String input) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ronniefun1"},"content":"        DateTimeFormatter[] formats \u003d {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd MM yyyy\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy MM dd\")","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ronniefun1"},"content":"        };","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ronniefun1"},"content":"        for (DateTimeFormatter format : formats) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ronniefun1"},"content":"            try {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ronniefun1"},"content":"                return LocalDate.parse(input, format);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ronniefun1"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ronniefun1"},"content":"                // Ignore and try next","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ronniefun1"},"content":"        throw new IllegalArgumentException(\"Invalid date format.\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false}],"authorContributionMap":{"ronniefun1":113}},{"path":"src/main/java/reboot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.task;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":" * Represents a task that has a start time and an end time.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"    // If date is the only thing provided","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"    private LocalDate startDate;","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"    private LocalDate endDate;","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"    // If time is provided","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new Event task with the given description,","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"     * isDone, start and end time.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"     * @param start Start time of the task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"     * @param end End time of the task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"    public Event(String description, boolean isDone, String start, String end) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"        parseInput(start, end);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"     * Converts the task to a string that can be stored in a file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"    public String toFileString() {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"        if (startDate !\u003d null) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter start \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter end \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"            return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"                    + \" | \" + startDate.format(start) + \" | \" + endDate.format(end);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"        } else {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter start \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy HHmm\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter end \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy HHmm\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ronniefun1"},"content":"            return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ronniefun1"},"content":"                    + \" | \" + startDateTime.format(start) + \" | \" + endDateTime.format(end);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ronniefun1"},"content":"     * Converts the task to a string that can be displayed.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ronniefun1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ronniefun1"},"content":"        if (startDate !\u003d null) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter start \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter end \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ronniefun1"},"content":"            return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ronniefun1"},"content":"                    + startDate.format(start) + \" to: \" + endDate.format(end) + \")\";","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ronniefun1"},"content":"        } else {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter start \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy HHmm\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ronniefun1"},"content":"            DateTimeFormatter end \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy HHmm\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ronniefun1"},"content":"            return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ronniefun1"},"content":"                    + startDateTime.format(start) + \" to: \" + endDateTime.format(end) + \")\";","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ronniefun1"},"content":"    private void parseInput(String start, String end) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ronniefun1"},"content":"        try {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ronniefun1"},"content":"            // Try to parse with datetime","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ronniefun1"},"content":"            this.startDateTime \u003d parseDateTime(start);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ronniefun1"},"content":"            this.endDateTime \u003d parseDateTime(end);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ronniefun1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ronniefun1"},"content":"            // Otherwise parse as date only","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ronniefun1"},"content":"            this.startDate \u003d parseDate(start);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ronniefun1"},"content":"            this.endDate \u003d parseDate(end);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ronniefun1"},"content":"     * Converts the given string to date time format.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ronniefun1"},"content":"     * @param input String to be converted to date time format.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ronniefun1"},"content":"    public static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ronniefun1"},"content":"        DateTimeFormatter[] formats \u003d {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd MM yyyy HHmm\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy MM dd HHmm\")","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ronniefun1"},"content":"        };","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ronniefun1"},"content":"        for (DateTimeFormatter format : formats) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ronniefun1"},"content":"            try {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ronniefun1"},"content":"                return LocalDateTime.parse(input, format);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ronniefun1"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ronniefun1"},"content":"                // Ignore and try next","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ronniefun1"},"content":"        throw new IllegalArgumentException(\"Invalid date format.\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ronniefun1"},"content":"     * Converts the given string to date format.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ronniefun1"},"content":"     * @param input String to be converted to date format.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ronniefun1"},"content":"    public static LocalDate parseDate(String input) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ronniefun1"},"content":"        DateTimeFormatter[] formats \u003d {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"dd MM yyyy\"),","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ronniefun1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy MM dd\")","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ronniefun1"},"content":"        };","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ronniefun1"},"content":"        for (DateTimeFormatter format : formats) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ronniefun1"},"content":"            try {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ronniefun1"},"content":"                return LocalDate.parse(input, format);","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ronniefun1"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ronniefun1"},"content":"                // Ignore and try next","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ronniefun1"},"content":"            }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ronniefun1"},"content":"        throw new IllegalArgumentException(\"Invalid date format.\");","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false}],"authorContributionMap":{"ronniefun1":128}},{"path":"src/main/java/reboot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.task;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":" * Represents a generic task that can be added to a tasklist.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":" * Provides common properties and behaviors for all tasks.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"public class Task {","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"    protected String description;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new Task with the given description and isDone.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T21:43:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-09-02T21:43:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T21:43:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"    public String getDescription() { return this.description; }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:43:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"     * Marks the current task as completed.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"    public void mark() {","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"     * Marks the current task as incomplete.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"    public void unmark() {","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ronniefun1"},"content":"     * Returns the task as a string that can be stored in a file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ronniefun1"},"content":"    public String toFileString() {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ronniefun1"},"content":"        return null;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ronniefun1"},"content":"     * Returns the task as a string that can be displayed.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ronniefun1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ronniefun1"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-08-21T15:49:20","isFullCredit":false}],"authorContributionMap":{"ronniefun1":61}},{"path":"src/main/java/reboot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.task;","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"/**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":" * Represents a basic task that has to be done.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":" */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"     * Constructs a new Todo task with the given description and isDone.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"        super(description, isDone);","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"     * Converts the task to a string that can be stored in a file.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"    public String toFileString() {","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-09-01T22:10:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"    /**","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"     * Converts the task to a string that can be displayed.","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"     */","lastModifiedDate":"2025-09-02T16:16:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"    @Override","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-08-21T17:06:57","isFullCredit":false}],"authorContributionMap":{"ronniefun1":32}},{"path":"src/test/java/reboot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.command.AddCommand;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.command.ClearCommand;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.command.Command;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.command.FindCommand;","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"import reboot.command.ListCommand;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"public class ParserTest {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"    public void parse_validListCommand_returnsListCommand() throws Exception {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"        Command c \u003d Parser.parse(\"list\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"        assertTrue(c instanceof ListCommand);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"    public void parse_invalidCommand_throwsException() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"        try {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"            assertTrue(Parser.parse(\"goodbye\") instanceof Command);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"            assertEquals(\"No enum constant reboot.command.Commands.GOODBYE\", e.getMessage());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"    public void parse_todoCommand_returnsAddCommand() throws Exception {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"        Command c \u003d Parser.parse(\"todo Read book\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"        assertTrue(c instanceof AddCommand);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"    public void parse_todoCommandWithoutDescription_throwsException() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"        try {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"            assertTrue(Parser.parse(\"todo\") instanceof AddCommand);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"            assertEquals(\"Reboot error: Proper usage: todo {description}\", e.getMessage());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ronniefun1"},"content":"    public void parse_deadlineCommand_returnsAddCommand() throws Exception {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ronniefun1"},"content":"        Command c \u003d Parser.parse(\"deadline Read book /by 02 09 2025\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ronniefun1"},"content":"        assertTrue(c instanceof AddCommand);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ronniefun1"},"content":"    public void parse_deadlineCommandWithoutDueDate_throwsException() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ronniefun1"},"content":"        try {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ronniefun1"},"content":"            assertTrue(Parser.parse(\"deadline Read book\") instanceof AddCommand);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ronniefun1"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ronniefun1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ronniefun1"},"content":"            assertEquals(\"Reboot error: Proper usage: deadline {description} /by {due date}\"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ronniefun1"},"content":"                    , e.getMessage());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ronniefun1"},"content":"    public void parse_eventCommand_returnsAddCommand() throws Exception {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ronniefun1"},"content":"        Command c \u003d Parser.parse(\"event Read book /from 02 09 2025 /to 03 09 2025\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ronniefun1"},"content":"        assertTrue(c instanceof AddCommand);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ronniefun1"},"content":"    public void parse_eventCommandWithoutEndDate_throwsException() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ronniefun1"},"content":"        try {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ronniefun1"},"content":"            assertTrue(Parser.parse(\"event Read book /from 02 09 2025\") instanceof AddCommand);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ronniefun1"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ronniefun1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ronniefun1"},"content":"            assertEquals(\"Reboot error: Proper usage: event {description} /from {start date} /to {end date}\"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ronniefun1"},"content":"                    , e.getMessage());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ronniefun1"},"content":"        }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ronniefun1"},"content":"    public void parse_clearCommand_returnsClearCommand() throws Exception {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ronniefun1"},"content":"        Command c \u003d Parser.parse(\"clear\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ronniefun1"},"content":"        assertTrue(c instanceof ClearCommand);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ronniefun1"},"content":"    public void parse_findCommand_returnsFindCommand() throws Exception {","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ronniefun1"},"content":"        Command c \u003d Parser.parse(\"find read\");","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ronniefun1"},"content":"        assertTrue(c instanceof FindCommand);","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false}],"authorContributionMap":{"ronniefun1":94}},{"path":"src/test/java/reboot/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Deadline;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Event;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Task;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"import reboot.task.Todo;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"public class TaskListTest {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"    public void size_taskListWith3Tasks_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"        Task todo \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"        Task deadline \u003d new Deadline(\"Do iP\", false, \"02 09 2025 2100\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"        Task event \u003d new Event(\"Yoga Class\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"                , \"02 09 2025 1700\", \"02 09 2025 1900\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(event);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(3, tasks.size());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"    public void addTask_todoTask_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"        Task todo \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(\"[T][ ] Read book\", tasks.get(0).toString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ronniefun1"},"content":"    public void addTask_deadlineTask_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ronniefun1"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ronniefun1"},"content":"        Task deadline \u003d new Deadline(\"Do iP\", false, \"02 09 2025 2100\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(\"[D][ ] Do iP (by: 02 09 2025 2100)\", tasks.get(0).toString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ronniefun1"},"content":"    public void addTask_eventTask_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ronniefun1"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ronniefun1"},"content":"        Task event \u003d new Event(\"Yoga Class\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ronniefun1"},"content":"                , \"02 09 2025 1700\", \"02 09 2025 1900\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(event);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(\"[E][ ] Yoga Class (from: 02 09 2025 1700 to: 02 09 2025 1900)\"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ronniefun1"},"content":"                , tasks.get(0).toString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ronniefun1"},"content":"    public void removeTask_todoTaskRemoval_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ronniefun1"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ronniefun1"},"content":"        Task todo \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ronniefun1"},"content":"        tasks.remove(todo);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ronniefun1"},"content":"    public void clear_filledTaskList_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ronniefun1"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ronniefun1"},"content":"        Task todo \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ronniefun1"},"content":"        Task deadline \u003d new Deadline(\"Do iP\", false, \"02 09 2025 2100\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ronniefun1"},"content":"        Task event \u003d new Event(\"Yoga Class\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ronniefun1"},"content":"                , \"02 09 2025 1700\", \"02 09 2025 1900\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(event);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ronniefun1"},"content":"        tasks.clear();","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ronniefun1"},"content":"    public void isEmpty_emptyTaskList_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ronniefun1"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ronniefun1"},"content":"        assertTrue(tasks.isEmpty());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ronniefun1"},"content":"    public void isOutOfRange_outOfRange_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ronniefun1"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ronniefun1"},"content":"        Task todo \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ronniefun1"},"content":"        Task deadline \u003d new Deadline(\"Do iP\", false, \"02 09 2025 2100\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ronniefun1"},"content":"        Task event \u003d new Event(\"Yoga Class\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ronniefun1"},"content":"                , \"02 09 2025 1700\", \"02 09 2025 1900\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(deadline);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ronniefun1"},"content":"        tasks.add(event);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ronniefun1"},"content":"        assertTrue(tasks.isOutOfRange(4));","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false}],"authorContributionMap":{"ronniefun1":117}},{"path":"src/test/java/reboot/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.task;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"    public void toString_withDateOnly_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"        Deadline d \u003d new Deadline(\"return book\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"                , \"2025-12-02\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"        String expected \u003d \"[D][ ] return book (by: 02 12 2025)\";","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(expected, d.toString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"    public void toString_withDateTime_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"        Deadline d \u003d new Deadline(\"return book\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"                , \"2025-12-02 1800\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"        String expected \u003d \"[D][ ] return book (by: 02 12 2025 1800)\";","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(expected, d.toString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"    public void toFileString_withDateOnly_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"        Deadline d \u003d new Deadline(\"return book\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"                , \"2025-12-02\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"        String expected \u003d \"D | 0 | return book | 02 12 2025\";","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(expected, d.toFileString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"    public void toFileString_withDateTime_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"        Deadline d \u003d new Deadline(\"return book\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"                , \"2025-12-02 1800\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"        String expected \u003d \"D | 0 | return book | 02 12 2025 1800\";","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(expected, d.toFileString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false}],"authorContributionMap":{"ronniefun1":40}},{"path":"src/test/java/reboot/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.task;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"public class EventTest {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"    public void toString_withDateOnly_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"        Event e \u003d new Event(\"project meeting\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"                , \"2025-12-02\", \"2025-12-03\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"        String expected \u003d \"[E][ ] project meeting (from: 02 12 2025 to: 03 12 2025)\";","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(expected, e.toString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"    public void toString_withDateTime_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"        Event e \u003d new Event(\"project meeting\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"                , \"2025-12-02 0800\", \"2025-12-02 1000\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"        String expected \u003d \"[E][ ] project meeting (from: 02 12 2025 0800 to: 02 12 2025 1000)\";","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(expected, e.toString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"    public void toFileString_withDateOnly_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"        Event e \u003d new Event(\"project meeting\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"                , \"2025-12-02\", \"2025-12-03\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"        String expected \u003d \"E | 0 | project meeting | 02 12 2025 | 03 12 2025\";","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(expected, e.toFileString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ronniefun1"},"content":"    public void toFileString_withDateTime_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ronniefun1"},"content":"        Event e \u003d new Event(\"project meeting\", false","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ronniefun1"},"content":"                , \"2025-12-02 0800\", \"2025-12-02 1000\");","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ronniefun1"},"content":"        String expected \u003d \"E | 0 | project meeting | 02 12 2025 0800 | 02 12 2025 1000\";","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(expected, e.toFileString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false}],"authorContributionMap":{"ronniefun1":40}},{"path":"src/test/java/reboot/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"package reboot.task;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"public class TodoTest {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"    public void toString_iP_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"        Todo t \u003d new Todo(\"iP\", false);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"        String expected \u003d \"[T][ ] iP\";","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(expected, t.toString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"    @Test","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"    public void toFileString_iP_success() {","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"        Todo t \u003d new Todo(\"iP\", false);","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"        String expected \u003d \"T | 0 | iP\";","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"        assertEquals(expected, t.toFileString());","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"    }","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"}","lastModifiedDate":"2025-09-02T13:12:52","isFullCredit":false}],"authorContributionMap":{"ronniefun1":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"list","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"clear","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"hello","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"todo","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"deadline","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"event","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"mark","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ronniefun1"},"content":"unmark","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ronniefun1"},"content":"delete","lastModifiedDate":"2025-08-21T19:13:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"todo borrow book","lastModifiedDate":"2025-08-21T17:26:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ronniefun1"},"content":"todo read book","lastModifiedDate":"2025-08-21T17:26:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ronniefun1"},"content":"mark 3","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ronniefun1"},"content":"unmark 4","lastModifiedDate":"2025-08-21T18:39:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ronniefun1"},"content":"delete 5","lastModifiedDate":"2025-08-21T19:13:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ronniefun1"},"content":"find book","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ronniefun1"},"content":"deadline return book /by 10 10 2025","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ronniefun1"},"content":"deadline assignment /by 09 11 2025 1000","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"event project meeting /from 09 11 2025 /to 09 11 2025","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ronniefun1"},"content":"event project meeting /from 09 11 2025 1700 /to 09 11 2025 1900","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ronniefun1"},"content":"list","lastModifiedDate":"2025-08-21T17:26:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ronniefun1"},"content":"find book","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ronniefun1"},"content":"todo join sports club","lastModifiedDate":"2025-08-21T17:26:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ronniefun1"},"content":"todo borrow book","lastModifiedDate":"2025-08-21T17:26:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ronniefun1"},"content":"mark 1","lastModifiedDate":"2025-08-21T17:26:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ronniefun1"},"content":"mark 2","lastModifiedDate":"2025-08-21T17:26:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ronniefun1"},"content":"list","lastModifiedDate":"2025-08-21T17:26:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ronniefun1"},"content":"unmark 2","lastModifiedDate":"2025-08-21T17:26:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ronniefun1"},"content":"list","lastModifiedDate":"2025-08-21T17:26:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ronniefun1"},"content":"delete 1","lastModifiedDate":"2025-08-21T19:13:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ronniefun1"},"content":"list","lastModifiedDate":"2025-08-21T19:13:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ronniefun1"},"content":"bye","lastModifiedDate":"2025-08-21T17:26:27","isFullCredit":false}],"authorContributionMap":{"ronniefun1":31}},{"path":"text-ui-test/output/Reboot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"T | 0 | read book","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"D | 0 | return book | 10 10 2025","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"D | 0 | assignment | 09 11 2025 1000","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"D | 0 | project meeting | 09 11 2025 | 09 11 2025","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"D | 0 | project meeting | 09 11 2025 1700 | 09 11 2025 1900","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"T | 0 | join sports club","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"T | 0 | borrow book","lastModifiedDate":"2025-09-01T23:51:36","isFullCredit":false}],"authorContributionMap":{"ronniefun1":7}},{"path":"text-ui-test/output/output/reboot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ronniefun1"},"content":"T | 0 | read book","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ronniefun1"},"content":"D | 0 | return book | 10 10 2025","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ronniefun1"},"content":"D | 0 | assignment | 09 11 2025 1000","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ronniefun1"},"content":"E | 0 | project meeting | 09 11 2025 | 09 11 2025","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ronniefun1"},"content":"E | 0 | project meeting | 09 11 2025 1700 | 09 11 2025 1900","lastModifiedDate":"2025-09-02T21:30:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ronniefun1"},"content":"T | 0 | join sports club","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ronniefun1"},"content":"T | 0 | borrow book","lastModifiedDate":"2025-09-02T02:43:48","isFullCredit":false}],"authorContributionMap":{"ronniefun1":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ronniefun1"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\reboot\\*.java","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ronniefun1"},"content":"java -classpath ..\\bin reboot.Reboot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-02T03:15:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"ronniefun1":2,"-":19}}]
