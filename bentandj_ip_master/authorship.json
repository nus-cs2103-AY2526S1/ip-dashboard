[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"# Pecky project template","lastModifiedDate":"2025-08-29T10:49:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"1. After that, locate the `src/main/java/Pecky.java` file, right-click it, and choose `Run Pecky.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-29T10:49:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"bentandj":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":"checkstyle {","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"    mainClass.set(\"pecky.Pecky\")","lastModifiedDate":"2025-09-14T00:38:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"    archiveBaseName \u003d \"pecky\"","lastModifiedDate":"2025-09-14T00:38:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false}],"authorContributionMap":{"bentandj":8,"-":39}},{"path":"data/pecky.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"T|0|hmm","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"T|0|test","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"D|1|hw1|2025-12-09 1800","lastModifiedDate":"2025-09-13T19:55:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"D|0|hw2|2025-08-09 1900","lastModifiedDate":"2025-09-13T19:55:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"D|0|return book|2019-12-02 1800","lastModifiedDate":"2025-09-13T19:55:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":"D|1|return another book|2019-12-03 1800","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":"D|0|return book 3|2003-08-03 1000","lastModifiedDate":"2025-09-13T19:55:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":"D|0|5|2004-05-06 0000","lastModifiedDate":"2025-09-13T20:09:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":"E|1|testEvent|2003-04-05 0000|2003-05-06 0000","lastModifiedDate":"2025-09-13T20:15:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":"E|1|testEvent2|2005-02-01 0000|2006-03-02 0000","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":"E|0|testEvent3|2007-06-05 0000|2009-08-07 0000","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":"T|1|asdfmiope","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false}],"authorContributionMap":{"bentandj":12}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"# Pecky User Guide","lastModifiedDate":"2025-08-29T10:49:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"bentandj":1,"-":29}},{"path":"src/main/java/pecky/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"package pecky;","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-13T19:55:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T19:55:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"/**","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":" * Represents a deadline. A \u003ccode\u003eDeadline\u003c/code\u003e object has a description","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":" * and a date e.g., \u003ccode\u003eChemistry homework, 3rd August 2025 2359\u003c/code\u003e.","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":" */","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-09-13T19:55:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bentandj"},"content":"    private Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bentandj"},"content":"        super(description);","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bentandj"},"content":"     * Returns a new Deadline object.","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bentandj"},"content":"     * If the string pattern of the date and time is invalid, a null object is returned.","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bentandj"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bentandj"},"content":"     * @param by The date and time of the deadline.","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bentandj"},"content":"     * @return A new deadline object.","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bentandj"},"content":"    public static Deadline createDeadline(String description, String by) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bentandj"},"content":"        LocalDateTime byDate \u003d convertStringToDate(by);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bentandj"},"content":"        if (byDate \u003d\u003d null) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bentandj"},"content":"            System.out.println(\"/from string pattern is invalid: \" + by);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bentandj"},"content":"            return null;","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bentandj"},"content":"        return new Deadline(description, byDate);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bentandj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bentandj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"     * This method returns a string representation of the Deadline object","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bentandj"},"content":"     * in the format \"[D] [status] description (by: date)\".","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bentandj"},"content":"     * This output is useful to print to the end-user, and for debugging purposes.","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bentandj"},"content":"     * @return String representation of Deadline object.","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bentandj"},"content":"    @Override","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bentandj"},"content":"    public String toString() {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bentandj"},"content":"        String formattedDate \u003d this.by.format(TO_STRING_FORMATTER);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bentandj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2025-09-13T19:55:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bentandj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bentandj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bentandj"},"content":"     * This method returns a string representation of the Deadline object","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bentandj"},"content":"     * in the format \"D|isDone|description|date\".","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bentandj"},"content":"     * This output is useful for reading and writing to a text file.","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bentandj"},"content":"     * @return String representation of Deadline object.","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bentandj"},"content":"    @Override","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bentandj"},"content":"    public String toTaskListString() {","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bentandj"},"content":"        String formattedDate \u003d this.by.format(TO_TASK_LIST_STRING_FORMATTER);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bentandj"},"content":"        return \"D|\" + (this.isDone ? 1 : 0) + \"|\" + this.description + \"|\" + formattedDate;","lastModifiedDate":"2025-09-13T19:55:11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bentandj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bentandj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bentandj"},"content":"     * This method returns true if the deadline is occurring within 0 to 24 hours after the","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bentandj"},"content":"     * provided dateTime, and false otherwise.","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bentandj"},"content":"     * @return True if the deadline is occurring within 24 hours of dateTime, and false otherwise.","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:07:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bentandj"},"content":"    @Override","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bentandj"},"content":"    public boolean onDay(LocalDateTime dateTime) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bentandj"},"content":"        return dateTime.isEqual(this.by)","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bentandj"},"content":"                || (dateTime.isAfter(this.by.minusDays(1)) \u0026\u0026 dateTime.isBefore(this.by));","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false}],"authorContributionMap":{"bentandj":83}},{"path":"src/main/java/pecky/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"package pecky;","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-13T20:15:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T20:15:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"/**","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":" * Represents an event. An \u003ccode\u003eEvent\u003c/code\u003e object has a description,","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":" * a from date and a to date e.g.,","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":" * \u003ccode\u003eChemistry test, 4th August 2025 1000, 4th August 2025 1200.\u003c/code\u003e","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":" */","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-09-13T20:15:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bentandj"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-09-13T20:15:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bentandj"},"content":"    private Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"        super(description);","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bentandj"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bentandj"},"content":"     * Returns a new Event object.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bentandj"},"content":"     * If the string pattern of the from and to datetime strings is invalid,","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bentandj"},"content":"     * a null object is returned.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bentandj"},"content":"     * If the from datetime is after the to datetime, a null object is returned.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bentandj"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bentandj"},"content":"     * @param from The date and time of the start of the event.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bentandj"},"content":"     * @param to The date and time of the end of the event.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bentandj"},"content":"     * @return A new event object.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bentandj"},"content":"    public static Event createEvent(String description, String from, String to) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bentandj"},"content":"        LocalDateTime fromDate \u003d convertStringToDate(from);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bentandj"},"content":"        if (fromDate \u003d\u003d null) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"            System.out.println(\"/from string pattern is invalid: \" + from);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bentandj"},"content":"            return null;","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bentandj"},"content":"        LocalDateTime toDate \u003d convertStringToDate(to);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"        if (toDate \u003d\u003d null) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bentandj"},"content":"            System.out.println(\"/to string pattern is invalid: \" + to);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bentandj"},"content":"            return null;","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bentandj"},"content":"        if (fromDate.isAfter(toDate)) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bentandj"},"content":"            System.out.println(\"From date must be before the to date.\");","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bentandj"},"content":"            return null;","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bentandj"},"content":"        return new Event(description, fromDate, toDate);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bentandj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bentandj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bentandj"},"content":"     * This method returns a string representation of the Event object","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bentandj"},"content":"     * in the format \"[E] [status] description (from: date to: date)\".","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bentandj"},"content":"     * This output is useful to print to the end-user, and for debugging purposes.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bentandj"},"content":"     * @return String representation of Event object.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bentandj"},"content":"    @Override","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bentandj"},"content":"    public String toString() {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bentandj"},"content":"        String formattedFrom \u003d this.from.format(TO_STRING_FORMATTER);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bentandj"},"content":"        String formattedTo \u003d this.to.format(TO_STRING_FORMATTER);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bentandj"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2025-09-13T20:15:40","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bentandj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bentandj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bentandj"},"content":"     * This method returns a string representation of the Event object","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bentandj"},"content":"     * in the format \"E|isDone|description|from date|to date\".","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bentandj"},"content":"     * This output is useful for reading and writing to a text file.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bentandj"},"content":"     * @return String representation of Event object.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bentandj"},"content":"    @Override","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bentandj"},"content":"    public String toTaskListString() {","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bentandj"},"content":"        String formattedFrom \u003d this.from.format(TO_TASK_LIST_STRING_FORMATTER);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bentandj"},"content":"        String formattedTo \u003d this.to.format(TO_TASK_LIST_STRING_FORMATTER);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bentandj"},"content":"        return \"E|\" + (this.isDone ? 1 : 0) + \"|\" + this.description + \"|\" + formattedFrom + \"|\" + formattedTo;","lastModifiedDate":"2025-09-13T20:15:40","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bentandj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bentandj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bentandj"},"content":"     * This method returns true if the given dateTime is between","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bentandj"},"content":"     * the from datetime and the to datetime, and false otherwise.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bentandj"},"content":"     * @return A true/false boolean.","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:17:30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bentandj"},"content":"    @Override","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bentandj"},"content":"    public boolean onDay(LocalDateTime dateTime) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bentandj"},"content":"        return dateTime.isAfter(this.from.minusDays(1)) \u0026\u0026 dateTime.isBefore(this.to);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false}],"authorContributionMap":{"bentandj":98}},{"path":"src/main/java/pecky/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"package pecky;","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"/**","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":" * Parses user commands, prints helpful error messages, and redirects","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":" * execution to the relevant Pecky functions otherwise.","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":" */","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":"public class Parser {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bentandj"},"content":"     * Parses user commands.","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bentandj"},"content":"     * If user input is invalid, helpful error messages are output to the user.","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bentandj"},"content":"     * Else, the relevant functions in Pecky are called.","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"     * It returns 1 to signal the termination of the program, and 0 otherwise.","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"     * @param s A string representing the user command.","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bentandj"},"content":"     * @return The integer 1 if the program should be terminated, and 0 otherwise.","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:40:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bentandj"},"content":"    public static int parse(String s) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bentandj"},"content":"        String[] args \u003d s.split(\" \");","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bentandj"},"content":"        switch (args[0]) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bentandj"},"content":"        case \"bye\":","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bentandj"},"content":"            Parser.bye();","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bentandj"},"content":"            return 1;","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bentandj"},"content":"        case \"list\":","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bentandj"},"content":"            Parser.list();","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bentandj"},"content":"            return 0;","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bentandj"},"content":"        case \"mark\":","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bentandj"},"content":"            Parser.mark(s);","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bentandj"},"content":"            return 0;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bentandj"},"content":"        case \"unmark\":","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"            Parser.unmark(s);","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bentandj"},"content":"            return 0;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bentandj"},"content":"        case \"todo\":","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bentandj"},"content":"            Parser.todo(s, args);","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"            return 0;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bentandj"},"content":"        case \"deadline\":","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bentandj"},"content":"            Parser.deadline(s);","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bentandj"},"content":"            return 0;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bentandj"},"content":"        case \"event\":","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bentandj"},"content":"            Parser.event(s);","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bentandj"},"content":"            return 0;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bentandj"},"content":"        case \"delete\":","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bentandj"},"content":"            Parser.delete(s);","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bentandj"},"content":"            return 0;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bentandj"},"content":"        case \"date\":","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bentandj"},"content":"            Parser.date(s, args);","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bentandj"},"content":"            return 0;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bentandj"},"content":"        case \"find\":","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bentandj"},"content":"            Parser.find(s, args);","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bentandj"},"content":"            return 0;","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bentandj"},"content":"        default:","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bentandj"},"content":"            Parser.unknown();","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bentandj"},"content":"            return 0;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bentandj"},"content":"    private static void bye() {","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bentandj"},"content":"        Pecky.bye();","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bentandj"},"content":"    private static void list() {","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bentandj"},"content":"        Pecky.list();","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bentandj"},"content":"    private static void mark(String s) {","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bentandj"},"content":"        int index;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bentandj"},"content":"        try {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bentandj"},"content":"            index \u003d Integer.parseInt(s.substring(5));","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bentandj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bentandj"},"content":"            Ui.print(\"Must be integer! \" + e.getMessage());","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bentandj"},"content":"            return;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bentandj"},"content":"        Pecky.mark(index);","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bentandj"},"content":"    private static void unmark(String s) {","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bentandj"},"content":"        int index;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bentandj"},"content":"        try {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bentandj"},"content":"            index \u003d Integer.parseInt(s.substring(7));","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bentandj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bentandj"},"content":"            Ui.print(\"Must be integer! \" + e.getMessage());","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bentandj"},"content":"            return;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bentandj"},"content":"        Pecky.unmark(index);","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bentandj"},"content":"    private static void todo(String s, String[] args) {","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bentandj"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bentandj"},"content":"            Ui.print(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bentandj"},"content":"            return;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bentandj"},"content":"        String description \u003d s.substring(5);","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bentandj"},"content":"        Pecky.todo(description);","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bentandj"},"content":"    private static void deadline(String s) {","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bentandj"},"content":"        s \u003d s.substring(9).trim();","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bentandj"},"content":"        String[] parts \u003d s.split(\" /by \");","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bentandj"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bentandj"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bentandj"},"content":"        Pecky.deadline(description, by);","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bentandj"},"content":"    private static void event(String s) {","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bentandj"},"content":"        s \u003d s.substring(6).trim();","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bentandj"},"content":"        String[] parts \u003d s.split(\" /from \");","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bentandj"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bentandj"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bentandj"},"content":"        String from \u003d timeParts[0];","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bentandj"},"content":"        String to \u003d timeParts[1];","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bentandj"},"content":"        Pecky.event(description, from, to);","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bentandj"},"content":"    private static void delete(String s) {","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bentandj"},"content":"        int index \u003d Integer.parseInt(s.substring(7));","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bentandj"},"content":"        Pecky.delete(index);","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bentandj"},"content":"    private static void date(String s, String[] args) {","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bentandj"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bentandj"},"content":"            Ui.print(\"OOPS!!! You must specify a date.\");","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bentandj"},"content":"            return;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bentandj"},"content":"        String dateString \u003d s.substring(5);","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bentandj"},"content":"        LocalDateTime dateTime \u003d Task.convertStringToDate(dateString);","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bentandj"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bentandj"},"content":"            Ui.print(\"Your date format is invalid!\");","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bentandj"},"content":"            return;","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bentandj"},"content":"        Pecky.tasksOnDate(dateTime);","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bentandj"},"content":"    private static void find(String s, String[] args) {","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bentandj"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bentandj"},"content":"            Ui.print(\"OOPS!!! You must specify what you\u0027re trying to find.\");","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bentandj"},"content":"            return;","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bentandj"},"content":"        String find \u003d s.substring(5);","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bentandj"},"content":"        Pecky.find(find);","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bentandj"},"content":"    private static void unknown() {","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bentandj"},"content":"        Pecky.unknown();","lastModifiedDate":"2025-09-14T14:33:27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false}],"authorContributionMap":{"bentandj":151}},{"path":"src/main/java/pecky/Pecky.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"package pecky;","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-13T19:55:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-29T10:49:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"/**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":" * The Pecky class is responsible for the high-level logic of the program.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":" * It coordinates with the other classes so that a cohesive program can","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":" * be presented to the user.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":" * It is also the main entry point of the program.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":" */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":"public class Pecky {","lastModifiedDate":"2025-08-29T10:49:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T10:48:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bentandj"},"content":"    private static StringBuilder sB \u003d new StringBuilder();","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bentandj"},"content":"    private static TaskList taskList;","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T11:08:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bentandj"},"content":"     * Lists out all the tasks to the user.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bentandj"},"content":"    protected static void list() {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bentandj"},"content":"        Ui.print(\"Here are the tasks in your list:\\n\\n\" + taskList);","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T11:08:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T11:08:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bentandj"},"content":"     * Marks a given task as completed.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bentandj"},"content":"     * @param index An integer representing the task to be marked completed.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bentandj"},"content":"    protected static void mark(int index) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bentandj"},"content":"        Storage.mark(index);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T11:29:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T11:29:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bentandj"},"content":"     * Marks a given task as not completed.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bentandj"},"content":"     * @param index An integer representing the task to be marked not completed.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"    protected static void unmark(int index) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bentandj"},"content":"        Storage.unmark(index);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T11:29:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T11:29:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bentandj"},"content":"     * Adds a Todo with the given description to the task list.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bentandj"},"content":"     * @param description A string representing the description of the Todo.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bentandj"},"content":"    protected static void todo(String description) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bentandj"},"content":"        Storage.addTask(new Todo(description));","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:10:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:10:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bentandj"},"content":"     * Adds a Deadline with the given description and datetime to the task list.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bentandj"},"content":"     * @param description A string representing the description of the Deadline.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bentandj"},"content":"     * @param by A string representing the date and time of the Deadline.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bentandj"},"content":"    protected static void deadline(String description, String by) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bentandj"},"content":"        Storage.addTask(Deadline.createDeadline(description, by));","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:10:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:10:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bentandj"},"content":"     * Adds an Event with the given description and two datetimes to the task list.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bentandj"},"content":"     * @param description A string representing the description of the Event.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bentandj"},"content":"     * @param from A string representing the date and time of the start of the Event.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bentandj"},"content":"     * @param to A string representing the date and time of the end of the Event.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bentandj"},"content":"    protected static void event(String description, String from, String to) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bentandj"},"content":"        Storage.addTask(Event.createEvent(description, from, to));","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bentandj"},"content":"     * Removes the given task from the task list.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bentandj"},"content":"     * @param index An integer representing the task to be removed.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bentandj"},"content":"    protected static void delete(int index) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bentandj"},"content":"        Storage.remove(index - 1);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bentandj"},"content":"     * Lists out all the tasks occurring on the given date to the user.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bentandj"},"content":"     * @param dateTime A LocalDateTime representing the given date.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bentandj"},"content":"    protected static void tasksOnDate(LocalDateTime dateTime) {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bentandj"},"content":"        sB \u003d new StringBuilder();","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bentandj"},"content":"        sB.append(\"Here are the tasks on \");","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bentandj"},"content":"        sB.append(dateTime.format(Task.TO_STRING_FORMATTER));","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bentandj"},"content":"        sB.append(\" :\\n\\n\");","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bentandj"},"content":"        TaskList tasksOnDate \u003d new TaskList();","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bentandj"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bentandj"},"content":"            if (taskList.get(i).onDay(dateTime)) {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bentandj"},"content":"                tasksOnDate.add(taskList.get(i));","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bentandj"},"content":"            }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-08-30T12:10:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bentandj"},"content":"        sB.append(tasksOnDate);","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:10:37","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bentandj"},"content":"        Ui.print(sB.toString());","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:41:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:41:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bentandj"},"content":"     * Says bye to the user and exits the program.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bentandj"},"content":"    protected static void bye() {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bentandj"},"content":"        Ui.bye();","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bentandj"},"content":"        System.exit(0);","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T17:57:22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bentandj"},"content":"    protected static void find(String s) {","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bentandj"},"content":"        sB \u003d new StringBuilder();","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bentandj"},"content":"        sB.append(\"Here are the matching tasks in your list:\\n\\n\");","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bentandj"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bentandj"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bentandj"},"content":"            if (taskList.get(i).substringMatch(s)) {","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bentandj"},"content":"                matchingTasks.add(taskList.get(i));","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bentandj"},"content":"            }","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bentandj"},"content":"        sB.append(matchingTasks);","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bentandj"},"content":"        Ui.print(sB.toString());","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bentandj"},"content":"     * Tells the user that the command that was input is unknown.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bentandj"},"content":"    protected static void unknown() {","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bentandj"},"content":"        Ui.unknown();","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T10:48:28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T10:48:28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bentandj"},"content":"     * This is the main entry point of the application.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bentandj"},"content":"     * It reads in the list of tasks from storage and says hello to the user.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bentandj"},"content":"     * It runs the main logic where it constantly waits for and receives user input,","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bentandj"},"content":"     * parses it, and executes the relevant commands.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bentandj"},"content":"     * @param args Command-line arguments passed to the program.","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:01:48","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bentandj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-30T10:48:28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"bentandj"},"content":"        Storage.initialize();","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"bentandj"},"content":"        taskList \u003d Storage.getTaskList();","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"bentandj"},"content":"        Ui.hello();","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"bentandj"},"content":"        while (Parser.parse(Ui.getInput()) \u003d\u003d 0);","lastModifiedDate":"2025-09-13T23:08:41","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-29T10:49:04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-08-29T10:49:04","isFullCredit":false}],"authorContributionMap":{"bentandj":157}},{"path":"src/main/java/pecky/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"package pecky;","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":"/**","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":" * Abstracts out the reading and writing of tasks to storage.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bentandj"},"content":" */","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bentandj"},"content":"public class Storage {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"    private static final Path taskFileFolder \u003d Paths.get(\"./data\");","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bentandj"},"content":"    private static final Path taskFile \u003d Paths.get(\"./data/pecky.txt\");","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"    private static TaskList taskList;","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bentandj"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bentandj"},"content":"     * @return A TaskList representing the current list of tasks.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bentandj"},"content":"    public static TaskList getTaskList() {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bentandj"},"content":"        return Storage.taskList;","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bentandj"},"content":"     * Removes the given task from the task list and updates the text file.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bentandj"},"content":"     * @param i An integer representing the task to be removed.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"    public static void remove(int i) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bentandj"},"content":"        Task taskRemoved \u003d taskList.remove(i - 1);","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bentandj"},"content":"        if (taskRemoved \u003d\u003d null) {","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bentandj"},"content":"            Ui.print(\"Removal of task unsuccessful. Check whether you input a valid number.\");","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"            return;","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bentandj"},"content":"        writeTaskFile();","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bentandj"},"content":"        Ui.print(\"Noted. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bentandj"},"content":"                + taskRemoved + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bentandj"},"content":"     * Adds the given task to the task list and updates the text file.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bentandj"},"content":"     * @param t A Task representing the task to be added.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bentandj"},"content":"    private static void addTaskSilent(Task t) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bentandj"},"content":"        taskList.add(t);","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bentandj"},"content":"        writeTaskFile();","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bentandj"},"content":"     * Adds the given task to the task list, updates the text file,","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bentandj"},"content":"     * and updates the user through the ui.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bentandj"},"content":"     * @param t A Task representing the task to be added.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bentandj"},"content":"    public static void addTask(Task t) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bentandj"},"content":"        addTaskSilent(t);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bentandj"},"content":"        Ui.print(\"Got it. I\u0027ve added this task: \\n  \"","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bentandj"},"content":"                + t + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bentandj"},"content":"     * Marks the given task as completed, updates the text file,","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bentandj"},"content":"     * and updates the user through the ui.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bentandj"},"content":"     * @param i An integer representing the task to be marked completed.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bentandj"},"content":"    public static void mark(int i) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bentandj"},"content":"        taskList.mark(i - 1);","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bentandj"},"content":"        writeTaskFile();","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bentandj"},"content":"        Ui.print(\"Nice! I\u0027ve marked this task as done:\\n  \" + taskList.get(i - 1).toString());","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bentandj"},"content":"     * Marks the given task as not completed, updates the text file,","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bentandj"},"content":"     * and updates the user through the ui.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bentandj"},"content":"     * @param i An integer representing the task to be marked not completed.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bentandj"},"content":"    public static void unmark(int i) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bentandj"},"content":"        taskList.unmark(i - 1);","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bentandj"},"content":"        writeTaskFile();","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bentandj"},"content":"        Ui.print(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + taskList.get(i - 1).toString());","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bentandj"},"content":"     * Reads the list of tasks from the text file.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bentandj"},"content":"    private static void loadTaskFile() {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bentandj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bentandj"},"content":"        try (Stream\u003cString\u003e lines \u003d Files.lines(taskFile)) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bentandj"},"content":"            lines.forEach(line -\u003e {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bentandj"},"content":"                if (line.isEmpty()) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bentandj"},"content":"                    Ui.print(\"Empty line in task file!\");","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bentandj"},"content":"                    return;","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bentandj"},"content":"                }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bentandj"},"content":"                String[] args \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bentandj"},"content":"                Task newTask;","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bentandj"},"content":"                if (args[0].equals(\"T\")) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bentandj"},"content":"                    newTask \u003d new Todo(args[2]);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bentandj"},"content":"                } else if (args[0].equals(\"D\")) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bentandj"},"content":"                    newTask \u003d Deadline.createDeadline(args[2], args[3]);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bentandj"},"content":"                } else if (args[0].equals(\"E\")) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bentandj"},"content":"                    newTask \u003d Event.createEvent(args[2], args[3], args[4]);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bentandj"},"content":"                } else {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bentandj"},"content":"                    Ui.print(\"Unexpected line in task file: \" + line);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bentandj"},"content":"                    return;","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bentandj"},"content":"                }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bentandj"},"content":"                if (args[1].equals(\"1\")) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bentandj"},"content":"                    newTask.markDone();","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bentandj"},"content":"                }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bentandj"},"content":"                addTaskSilent(newTask);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bentandj"},"content":"            });","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bentandj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bentandj"},"content":"            System.err.println(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bentandj"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bentandj"},"content":"     * Initializes the list of tasks from the text file.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bentandj"},"content":"     * If either the text file or its folder is not present,","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bentandj"},"content":"     * create the missing file or folder and initialize the empty list of tasks.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bentandj"},"content":"     * Runs everytime the program starts.","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:11:58","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bentandj"},"content":"    public static void initialize() {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bentandj"},"content":"        try {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bentandj"},"content":"            Files.createDirectories(taskFileFolder);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bentandj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bentandj"},"content":"            System.err.println(\"Failed to create folder: \" + e.getMessage());","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bentandj"},"content":"        try {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bentandj"},"content":"            Files.createFile(taskFile);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bentandj"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"bentandj"},"content":"            // no need to do anything","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"bentandj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"bentandj"},"content":"            System.err.println(\"An I/O error occurred: \" + e.getMessage());","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"bentandj"},"content":"        loadTaskFile();","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"bentandj"},"content":"    private static void writeTaskFile() {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"bentandj"},"content":"        String content \u003d taskList.toTaskListString();","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"bentandj"},"content":"        try {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"bentandj"},"content":"            Files.writeString(taskFile, content, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"bentandj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"bentandj"},"content":"            System.err.println(\"Error writing string to file: \" + e.getMessage());","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false}],"authorContributionMap":{"bentandj":169}},{"path":"src/main/java/pecky/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"package pecky;","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":"/**","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":" * Represents a Task. A \u003ccode\u003eTask\u003c/code\u003e object has a description","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":" * and a boolean indicating whether it is done.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":" * e.g., \u003ccode\u003eChemistry homework, false (not done).\u003c/code\u003e","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":" */","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bentandj"},"content":"public abstract class Task {","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bentandj"},"content":"    public static final DateTimeFormatter TO_STRING_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HH:mm:ss\");","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"    public static final DateTimeFormatter TO_TASK_LIST_STRING_FORMATTER \u003d","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bentandj"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"    protected String description;","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bentandj"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bentandj"},"content":"     * Constructs a new Task object with the specified description.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bentandj"},"content":"     * By default, tasks are not marked as done when initialized.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bentandj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bentandj"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bentandj"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bentandj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bentandj"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bentandj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bentandj"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bentandj"},"content":"    public void markNotDone() {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bentandj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bentandj"},"content":"     * Returns the status of the task, i.e. whether it is done.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bentandj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bentandj"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bentandj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bentandj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bentandj"},"content":"     * This method returns a string representation of the Task object","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bentandj"},"content":"     * in the format \"[status] description\".","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bentandj"},"content":"     * @return String representation of the Task object.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bentandj"},"content":"    @Override","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bentandj"},"content":"    public String toString() {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bentandj"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bentandj"},"content":"     * This is a static method to handle the conversion of a date from a String to","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bentandj"},"content":"     * a LocalDateTime.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bentandj"},"content":"     * It can handle a few string formats, e.g. yyyy-M-d HHmm or d/M/yyyy.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bentandj"},"content":"     * @param dateString A String representing the date.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bentandj"},"content":"     * @return A LocalDateTime representing the same date.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bentandj"},"content":"    public static LocalDateTime convertStringToDate(String dateString) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bentandj"},"content":"        String[] possibleFormatsDateTime \u003d {\"yyyy-M-d HHmm\",","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bentandj"},"content":"            \"yyyy/M/d HHmm\", \"d-M-yyyy HHmm\", \"d/M/yyyy HHmm\"};","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bentandj"},"content":"        for (int i \u003d 0; i \u003c possibleFormatsDateTime.length; i++) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bentandj"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(possibleFormatsDateTime[i]);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bentandj"},"content":"            try {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bentandj"},"content":"                return LocalDateTime.parse(dateString, dateTimeFormatter);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bentandj"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bentandj"},"content":"                continue;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bentandj"},"content":"            }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bentandj"},"content":"        String[] possibleFormatsDate \u003d {\"d/M/yyyy\", \"d-M-yyyy\", \"yyyy/M/d\", \"yyyy-M-d\"};","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bentandj"},"content":"        for (int i \u003d 0; i \u003c possibleFormatsDate.length; i++) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bentandj"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(possibleFormatsDate[i]);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bentandj"},"content":"            try {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bentandj"},"content":"                LocalDate localDate \u003d LocalDate.parse(dateString, dateTimeFormatter);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bentandj"},"content":"                return localDate.atStartOfDay();","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bentandj"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bentandj"},"content":"                continue;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bentandj"},"content":"            }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bentandj"},"content":"        System.err.println(\"Error parsing date and time: \" + dateString);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bentandj"},"content":"        return null;","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bentandj"},"content":"     * This is an abstract method to convert the Task to a String representation that","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bentandj"},"content":"     * is easy to read and write to a text file.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bentandj"},"content":"     * This method is to be implemented by the children of the Task class.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bentandj"},"content":"     * @return A String that can be read and written to a text file.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bentandj"},"content":"    public abstract String toTaskListString();","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bentandj"},"content":"     * This is an abstract method to determine whether the task falls on the given date.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bentandj"},"content":"     * This method is to be implemented by the children of the Task class.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bentandj"},"content":"     * By default, if the task does not have any date field, then","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bentandj"},"content":"     * it\u0027s considered to not fall on any given date.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bentandj"},"content":"     * @param dateTime A LocalDateTime representing the given date.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bentandj"},"content":"     * @return A boolean that is true if the task falls on the given date,","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bentandj"},"content":"     *         and false otherwise.","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:29:08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bentandj"},"content":"    public abstract boolean onDay(LocalDateTime dateTime);","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bentandj"},"content":"     * Checks whether the string s is contained within the Task\u0027s description.","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bentandj"},"content":"     * @param s The string to be checked.","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bentandj"},"content":"     * @return A boolean that is true if s is contained within the description,","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bentandj"},"content":"     *         and false otherwise.","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T17:21:15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bentandj"},"content":"    public boolean substringMatch(String s) {","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bentandj"},"content":"        return this.description.toLowerCase().contains(s.toLowerCase());","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T17:00:06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false}],"authorContributionMap":{"bentandj":144}},{"path":"src/main/java/pecky/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"package pecky;","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"/**","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":" * Represents a list of Tasks.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":" */","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":"public class TaskList {","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":"    private static final int DEFAULT_CAPACITY \u003d 10;","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":"    private final ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bentandj"},"content":"     * Constructs a new TaskList object with the default capacity.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bentandj"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"        taskArrayList \u003d new ArrayList\u003cTask\u003e(DEFAULT_CAPACITY);","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bentandj"},"content":"     * Adds the given task to the ArrayList.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bentandj"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bentandj"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bentandj"},"content":"        taskArrayList.add(task);","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bentandj"},"content":"     * Removes and returns the given task.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bentandj"},"content":"     * @param i The index of the task to be removed.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bentandj"},"content":"     * @return The removed task.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bentandj"},"content":"    public Task remove(int i) {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bentandj"},"content":"        if (i \u003c 0 || i \u003e\u003d size()) {","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"            return null;","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bentandj"},"content":"        Task taskRemoved \u003d taskArrayList.get(i);","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bentandj"},"content":"        taskArrayList.remove(i);","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bentandj"},"content":"        return taskRemoved;","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bentandj"},"content":"     * Returns the current number of tasks.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bentandj"},"content":"     * @return The current number of tasks.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bentandj"},"content":"    public int size() {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bentandj"},"content":"        return taskArrayList.size();","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bentandj"},"content":"     * Returns the task at the index.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bentandj"},"content":"     * @param i The index of the task to be returned.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bentandj"},"content":"     * @return The task at the index.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bentandj"},"content":"    public Task get(int i) {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bentandj"},"content":"        if (i \u003c 0 || i \u003e\u003d size()) {","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bentandj"},"content":"            return null;","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bentandj"},"content":"        return taskArrayList.get(i);","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bentandj"},"content":"     * Marks the specified task completed.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bentandj"},"content":"     * @param i The index of the task to be marked completed.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bentandj"},"content":"    public void mark(int i) {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bentandj"},"content":"        if (i \u003c 0 || i \u003e\u003d size()) {","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bentandj"},"content":"            return;","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bentandj"},"content":"        taskArrayList.get(i).markDone();","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bentandj"},"content":"     * Marks the specified task not completed.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bentandj"},"content":"     * @param i The index of the task to be marked not completed.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bentandj"},"content":"    public void unmark(int i) {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bentandj"},"content":"        if (i \u003c 0 || i \u003e\u003d size()) {","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bentandj"},"content":"            return;","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bentandj"},"content":"        taskArrayList.get(i).markNotDone();","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bentandj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bentandj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bentandj"},"content":"     * This method returns a user-friendly string representation of the TaskList object.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bentandj"},"content":"     * The format is","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bentandj"},"content":"     * \"1. Task 1\".","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bentandj"},"content":"     * \"2. Task 2\".","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bentandj"},"content":"     * etc.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bentandj"},"content":"     * @return String representation of the TaskList object.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bentandj"},"content":"    @Override","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bentandj"},"content":"    public String toString() {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bentandj"},"content":"        if (size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-14T02:24:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bentandj"},"content":"            return \"\";","lastModifiedDate":"2025-09-14T02:24:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-14T02:24:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bentandj"},"content":"        StringBuilder sB \u003d new StringBuilder();","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bentandj"},"content":"        for (int i \u003d 0; i \u003c size() - 1; i++) {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bentandj"},"content":"            sB.append(i + 1);","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bentandj"},"content":"            sB.append(\". \");","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bentandj"},"content":"            sB.append(taskArrayList.get(i));","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bentandj"},"content":"            sB.append(\"\\n\");","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bentandj"},"content":"        sB.append(size());","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bentandj"},"content":"        sB.append(\". \");","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bentandj"},"content":"        sB.append(taskArrayList.get(size() - 1));","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bentandj"},"content":"        return sB.toString();","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bentandj"},"content":"     * This method returns a string representation of the TaskList object that","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bentandj"},"content":"     * is easy to read and write to a text file.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bentandj"},"content":"     * The format is one task per line.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bentandj"},"content":"     * @return String representation of the TaskList object for easy I/O.","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:40:31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bentandj"},"content":"    public String toTaskListString() {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bentandj"},"content":"        StringBuilder sB \u003d new StringBuilder();","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bentandj"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bentandj"},"content":"            Task task \u003d taskArrayList.get(i);","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bentandj"},"content":"            sB.append(task.toTaskListString());","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bentandj"},"content":"            sB.append(\"\\n\");","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bentandj"},"content":"        }","lastModifiedDate":"2025-09-13T23:48:47","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bentandj"},"content":"        return sB.toString();","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-09-13T23:26:39","isFullCredit":false}],"authorContributionMap":{"bentandj":144}},{"path":"src/main/java/pecky/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"package pecky;","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"/**","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":" * Represents a Todo. A \u003ccode\u003eTodo\u003c/code\u003e object has a description","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":" * e.g., \u003ccode\u003eChemistry homework\u003c/code\u003e.","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":" */","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bentandj"},"content":"     * Constructs a new Todo object with the specified description.","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bentandj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bentandj"},"content":"        super(description);","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bentandj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bentandj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bentandj"},"content":"     * This method returns a string representation of the Todo object","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bentandj"},"content":"     * in the format \"[T] [status] description\".","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bentandj"},"content":"     * @return String representation of the Todo object.","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bentandj"},"content":"    @Override","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bentandj"},"content":"    public String toString() {","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bentandj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bentandj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bentandj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bentandj"},"content":"     * This method returns a string representation of the Todo object","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"     * in the format \"T|isDone|description\".","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bentandj"},"content":"     * This format is easy to read and write to a text file.","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bentandj"},"content":"     * @return String representation of the Todo object for easy I/O.","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bentandj"},"content":"    @Override","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bentandj"},"content":"    public String toTaskListString() {","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bentandj"},"content":"        return \"T|\" + (this.isDone ? 1 : 0) + \"|\" + this.description;","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T18:57:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bentandj"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bentandj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bentandj"},"content":"     * This method returns false as a Todo has no specified date and hence","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bentandj"},"content":"     * does not fall on any specific date.","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bentandj"},"content":"     * @return false.","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:46:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bentandj"},"content":"    @Override","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bentandj"},"content":"    public boolean onDay(LocalDateTime dateTime) {","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bentandj"},"content":"        return false;","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:00:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-08-30T12:25:18","isFullCredit":false}],"authorContributionMap":{"bentandj":64}},{"path":"src/main/java/pecky/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"package pecky;","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T00:07:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"/**","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":" * The Ui class is responsible for handling user interactions.","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":" * It takes in user input and outputs messages to the user.","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":" */","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":"public class Ui {","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":"    private static final String HELLO \u003d \"Hello! I\u0027m Pecky!\\n\"","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bentandj"},"content":"            + \"What can I do for you?\";","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bentandj"},"content":"    private static final String BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bentandj"},"content":"    private static final String UNKNOWN \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bentandj"},"content":"     * Scans for user input.","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bentandj"},"content":"     * @return A String representing the user input.","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bentandj"},"content":"    public static String getInput() {","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bentandj"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bentandj"},"content":"     * Takes a String, applies some consistent formatting and outputs","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bentandj"},"content":"     * the result to the user.","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bentandj"},"content":"     *","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bentandj"},"content":"     * @param s A String representing the message to be sent.","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bentandj"},"content":"    public static void print(String s) {","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bentandj"},"content":"        System.out.println(s);","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bentandj"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bentandj"},"content":"     * Says bye to the user.","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bentandj"},"content":"    public static void bye() {","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bentandj"},"content":"        Ui.print(BYE);","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bentandj"},"content":"     * Says hello to the user.","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bentandj"},"content":"    public static void hello() {","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bentandj"},"content":"        Ui.print(HELLO);","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bentandj"},"content":"    /**","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bentandj"},"content":"     * Says unknown command to the user.","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bentandj"},"content":"     */","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T15:52:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bentandj"},"content":"    public static void unknown() {","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bentandj"},"content":"        Ui.print(UNKNOWN);","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-13T22:50:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-09-13T22:20:49","isFullCredit":false}],"authorContributionMap":{"bentandj":64}},{"path":"src/test/java/pecky/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"package pecky;","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":"public class ParserTest {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bentandj"},"content":"    public void parse_validInput1() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bentandj"},"content":"        assertDoesNotThrow(() -\u003e Parser.parse(\"list\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"    public void parse_invalidInput1() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bentandj"},"content":"        assertEquals(0, Parser.parse(\"unknown\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bentandj"},"content":"    public void parse_invalidInput2() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bentandj"},"content":"        assertEquals(0, Parser.parse(\"asdfmuoiawef 0awef\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bentandj"},"content":"    public void parse_invalidInput3() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bentandj"},"content":"        assertEquals(0, Parser.parse(\"mark asdf\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bentandj"},"content":"    public void parse_invalidInput4() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bentandj"},"content":"        assertEquals(0, Parser.parse(\"todo\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bentandj"},"content":"    public void parse_invalidInput5() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bentandj"},"content":"        assertEquals(0, Parser.parse(\"date\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bentandj"},"content":"    public void parse_invalidInput6() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bentandj"},"content":"        assertEquals(0, Parser.parse(\"date 00000000\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false}],"authorContributionMap":{"bentandj":46}},{"path":"src/test/java/pecky/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"package pecky;","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bentandj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bentandj"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bentandj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bentandj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-14T16:45:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bentandj"},"content":"public class TaskTest {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bentandj"},"content":"    public void convertStringToDate_validInput1() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bentandj"},"content":"        LocalDateTime expectedOutput \u003d LocalDateTime.of(2003, 8, 3, 0, 0, 0);","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bentandj"},"content":"        assertEquals(expectedOutput, Task.convertStringToDate(\"03-08-2003\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bentandj"},"content":"    public void convertStringToDate_validInput2() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bentandj"},"content":"        LocalDateTime expectedOutput \u003d LocalDateTime.of(2003, 8, 3, 0, 0, 0);","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bentandj"},"content":"        assertEquals(expectedOutput, Task.convertStringToDate(\"2003-08-03\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bentandj"},"content":"    public void convertStringToDate_validInput3() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bentandj"},"content":"        LocalDateTime expectedOutput \u003d LocalDateTime.of(2003, 8, 3, 0, 0, 0);","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bentandj"},"content":"        assertEquals(expectedOutput, Task.convertStringToDate(\"03/08/2003\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bentandj"},"content":"    public void convertStringToDate_validInput4() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bentandj"},"content":"        LocalDateTime expectedOutput \u003d LocalDateTime.of(2003, 8, 3, 0, 0, 0);","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bentandj"},"content":"        assertEquals(expectedOutput, Task.convertStringToDate(\"2003/08/03\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bentandj"},"content":"    public void convertStringToDate_validInput5() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bentandj"},"content":"        LocalDateTime expectedOutput \u003d LocalDateTime.of(2003, 8, 3, 12, 34, 0);","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bentandj"},"content":"        assertEquals(expectedOutput, Task.convertStringToDate(\"03-08-2003 1234\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bentandj"},"content":"    public void convertStringToDate_validInput6() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bentandj"},"content":"        LocalDateTime expectedOutput \u003d LocalDateTime.of(2003, 8, 3, 12, 34, 0);","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bentandj"},"content":"        assertEquals(expectedOutput, Task.convertStringToDate(\"2003-08-03 1234\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bentandj"},"content":"    public void convertStringToDate_validInput7() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bentandj"},"content":"        LocalDateTime expectedOutput \u003d LocalDateTime.of(2003, 8, 3, 12, 34, 0);","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bentandj"},"content":"        assertEquals(expectedOutput, Task.convertStringToDate(\"03/08/2003 1234\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bentandj"},"content":"    public void convertStringToDate_validInput8() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bentandj"},"content":"        LocalDateTime expectedOutput \u003d LocalDateTime.of(2003, 8, 3, 12, 34, 0);","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bentandj"},"content":"        assertEquals(expectedOutput, Task.convertStringToDate(\"2003/08/03 1234\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bentandj"},"content":"    public void convertStringToDate_invalidInput1() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bentandj"},"content":"        assertNull(Task.convertStringToDate(\"03082003\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bentandj"},"content":"    public void convertStringToDate_invalidInput2() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bentandj"},"content":"        assertNull(Task.convertStringToDate(\"abcde\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bentandj"},"content":"","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bentandj"},"content":"    @Test","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bentandj"},"content":"    public void convertStringToDate_invalidInput3() {","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bentandj"},"content":"        assertNull(Task.convertStringToDate(\"1234-56-78\"));","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bentandj"},"content":"    }","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bentandj"},"content":"}","lastModifiedDate":"2025-09-14T02:13:44","isFullCredit":false}],"authorContributionMap":{"bentandj":74}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bentandj"},"content":"todo borrow book","lastModifiedDate":"2025-08-30T12:18:36","isFullCredit":false}],"authorContributionMap":{"bentandj":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bentandj"},"content":"java -classpath ..\\bin Pecky \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-29T10:49:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"bentandj":1,"-":20}}]
